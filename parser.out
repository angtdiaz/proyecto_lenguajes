Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    OR

Grammar

Rule 0     S' -> programa
Rule 1     programa -> clase
Rule 2     programa -> metodo
Rule 3     programa -> clase programa
Rule 4     programa -> metodo programa
Rule 5     programa -> lista_codigo programa
Rule 6     programa -> expresion
Rule 7     programa -> expresion programa
Rule 8     identificador -> VARIABLE
Rule 9     identificador -> CONSTANT
Rule 10    identificador -> VARIABLE_GLOBAL
Rule 11    identificador -> VARIABLE_CLASE
Rule 12    identificador -> VARIABLE_INSTANCIA
Rule 13    number -> INTEGER
Rule 14    number -> FLOATINGPOINT
Rule 15    expresion -> identificador
Rule 16    expresion -> STRING
Rule 17    expresion -> number
Rule 18    expresion -> BOOLEAN
Rule 19    expresion -> expresion_condicion
Rule 20    expresion -> expresion_matematica
Rule 21    expresion -> llamar_funcion
Rule 22    expresion -> asignacion
Rule 23    expresion -> arreglo
Rule 24    expresion -> hash
Rule 25    expresion -> puts
Rule 26    expresion -> times
Rule 27    arreglo -> identificador EQUALS LBRACKET elementos RBRACKET
Rule 28    elementos -> expresion
Rule 29    elementos -> expresion COMMA elementos
Rule 30    hash -> identificador EQUALS LBRACE elementos_hash RBRACE
Rule 31    elementos_hash -> expresion EQUALS GREATER expresion
Rule 32    elementos_hash -> expresion EQUALS GREATER expresion COMMA elementos_hash
Rule 33    puts -> PUTS expresion
Rule 34    puts -> PUTS expresion_matematica
Rule 35    puts -> PUTS LPAREN expresion RPAREN
Rule 36    puts -> PUTS LPAREN expresion_matematica RPAREN
Rule 37    clase -> CLASS CONSTANT varias_exp varios_met END
Rule 38    clase -> CLASS CONSTANT varias_exp END
Rule 39    clase -> CLASS CONSTANT varios_met END
Rule 40    varias_exp -> expresion
Rule 41    varias_exp -> expresion varias_exp
Rule 42    varios_met -> metodo
Rule 43    varios_met -> metodo varios_met
Rule 44    metodo -> DEF VARIABLE lista_codigo END
Rule 45    metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
Rule 46    metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
Rule 47    parametro -> VARIABLE
Rule 48    parametro -> VARIABLE COMMA parametro
Rule 49    lista_codigo -> codigo
Rule 50    lista_codigo -> vacio
Rule 51    lista_codigo -> codigo lista_codigo
Rule 52    codigo -> asignacion
Rule 53    codigo -> expresion
Rule 54    codigo -> condicional_if
Rule 55    codigo -> iteracion
Rule 56    condicional_if -> IF content_if lista_codigo END
Rule 57    condicional_if -> IF content_if lista_codigo else END
Rule 58    condicional_if -> IF content_if lista_codigo elsif END
Rule 59    condicional_if -> IF LPAREN content_if RPAREN lista_codigo END
Rule 60    condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END
Rule 61    condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END
Rule 62    content_if -> identificador
Rule 63    content_if -> expresion_condicion
Rule 64    else -> ELSE lista_codigo
Rule 65    else -> ELSE lista_codigo elsif
Rule 66    elsif -> ELSIF expresion_condicion lista_codigo
Rule 67    elsif -> ELSIF expresion_condicion lista_codigo elsif
Rule 68    elsif -> ELSIF expresion_condicion lista_codigo else
Rule 69    expresion_condicion -> valores_cond opNum valores_cond
Rule 70    expresion_condicion -> identificador opIgual BOOLEAN
Rule 71    expresion_condicion -> BOOLEAN opIgual identificador
Rule 72    expresion_condicion -> identificador opIgual valores_cond
Rule 73    expresion_condicion -> valores_cond opIgual identificador
Rule 74    valores_cond -> valores_mat
Rule 75    valores_cond -> STRING
Rule 76    operador_condicion -> opNum
Rule 77    operador_condicion -> opIgual
Rule 78    opNum -> LESS
Rule 79    opNum -> LESS EQUALS
Rule 80    opNum -> GREATER
Rule 81    opNum -> GREATER EQUALS
Rule 82    opIgual -> ISEQUAL
Rule 83    opIgual -> NOT EQUALS
Rule 84    iteracion -> WHILE content_if lista_codigo END
Rule 85    iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END
Rule 86    iteracion -> FOR expresion IN expresion lista_codigo END
Rule 87    iteracion -> FOR expresion IN rango lista_codigo END
Rule 88    iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END
Rule 89    iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END
Rule 90    rango -> LPAREN valorR DOT DOT valorR RPAREN
Rule 91    valorR -> expresion_matematica
Rule 92    valorR -> valores_mat
Rule 93    times -> INTEGER DOT TIMES LBRACE expresion RBRACE
Rule 94    times -> identificador DOT TIMES LBRACE expresion RBRACE
Rule 95    times -> INTEGER DOT TIMES DO expresion END
Rule 96    times -> identificador DOT TIMES DO expresion END
Rule 97    expresion_matematica -> valores_mat operador valores_mat
Rule 98    expresion_matematica -> valores_mat operador expresion_matematica
Rule 99    valores_mat -> number
Rule 100   valores_mat -> identificador
Rule 101   operador -> PLUS
Rule 102   operador -> MINUS
Rule 103   operador -> TIMS
Rule 104   operador -> DIVIDE
Rule 105   asignacion -> identificador EQUALS expresion
Rule 106   llamar_funcion -> VARIABLE DOT LENGTH
Rule 107   llamar_funcion -> VARIABLE DOT KEY
Rule 108   llamar_funcion -> VARIABLE DOT FIRST
Rule 109   llamar_funcion -> VARIABLE DOT LAST
Rule 110   vacio -> <empty>

Terminals, with rules where they appear

AND                  : 
BOOLEAN              : 18 70 71
CLASS                : 37 38 39
COMMA                : 29 32 48
CONSTANT             : 9 37 38 39
DEF                  : 44 45 46
DIVIDE               : 104
DO                   : 95 96
DOT                  : 90 90 93 94 95 96 106 107 108 109
ELSE                 : 64 65
ELSIF                : 66 67 68
END                  : 37 38 39 44 45 46 56 57 58 59 60 61 84 85 86 87 88 89 95 96
EQUALS               : 27 30 31 32 79 81 83 105
FIRST                : 108
FLOATINGPOINT        : 14
FOR                  : 86 87 88 89
GREATER              : 31 32 80 81
IF                   : 56 57 58 59 60 61
IN                   : 86 87 88 89
INTEGER              : 13 93 95
ISEQUAL              : 82
KEY                  : 107
LAST                 : 109
LBRACE               : 30 93 94
LBRACKET             : 27
LENGTH               : 106
LESS                 : 78 79
LPAREN               : 35 36 45 46 59 60 61 85 88 89 90
MINUS                : 102
NOT                  : 83
OR                   : 
PLUS                 : 101
PUTS                 : 33 34 35 36
RBRACE               : 30 93 94
RBRACKET             : 27
RETURN               : 46
RPAREN               : 35 36 45 46 59 60 61 85 88 89 90
STRING               : 16 75
TIMES                : 93 94 95 96
TIMS                 : 103
VARIABLE             : 8 44 45 46 47 48 106 107 108 109
VARIABLE_CLASE       : 11
VARIABLE_GLOBAL      : 10
VARIABLE_INSTANCIA   : 12
WHILE                : 84 85
error                : 

Nonterminals, with rules where they appear

arreglo              : 23
asignacion           : 22 52
clase                : 1 3
codigo               : 49 51
condicional_if       : 54
content_if           : 56 57 58 59 60 61 84 85
elementos            : 27 29
elementos_hash       : 30 32
else                 : 57 60 68
elsif                : 58 61 65 67
expresion            : 6 7 28 29 31 31 32 32 33 35 40 41 46 53 86 86 87 88 88 89 93 94 95 96 105
expresion_condicion  : 19 63 66 67 68
expresion_matematica : 20 34 36 91 98
hash                 : 24
identificador        : 15 27 30 62 70 71 72 73 94 96 100 105
iteracion            : 55
lista_codigo         : 5 44 45 46 51 56 57 58 59 60 61 64 65 66 67 68 84 85 86 87 88 89
llamar_funcion       : 21
metodo               : 2 4 42 43
number               : 17 99
opIgual              : 70 71 72 73 77
opNum                : 69 76
operador             : 97 98
operador_condicion   : 
parametro            : 45 46 48
programa             : 3 4 5 7 0
puts                 : 25
rango                : 87 89
times                : 26
vacio                : 50
valorR               : 90 90
valores_cond         : 69 69 72 73
valores_mat          : 74 92 97 97 98
varias_exp           : 37 38 41
varios_met           : 37 39 43

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . clase
    (2) programa -> . metodo
    (3) programa -> . clase programa
    (4) programa -> . metodo programa
    (5) programa -> . lista_codigo programa
    (6) programa -> . expresion
    (7) programa -> . expresion programa
    (37) clase -> . CLASS CONSTANT varias_exp varios_met END
    (38) clase -> . CLASS CONSTANT varias_exp END
    (39) clase -> . CLASS CONSTANT varios_met END
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOATINGPOINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    CLASS           shift and go to state 6
    DEF             shift and go to state 8
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36

  ! CLASS           [ reduce using rule 110 (vacio -> .) ]
  ! DEF             [ reduce using rule 110 (vacio -> .) ]
  ! STRING          [ reduce using rule 110 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE        [ reduce using rule 110 (vacio -> .) ]
  ! CONSTANT        [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 110 (vacio -> .) ]
  ! INTEGER         [ reduce using rule 110 (vacio -> .) ]
  ! FLOATINGPOINT   [ reduce using rule 110 (vacio -> .) ]
  ! PUTS            [ reduce using rule 110 (vacio -> .) ]
  ! IF              [ reduce using rule 110 (vacio -> .) ]
  ! WHILE           [ reduce using rule 110 (vacio -> .) ]
  ! FOR             [ reduce using rule 110 (vacio -> .) ]

    programa                       shift and go to state 1
    clase                          shift and go to state 2
    metodo                         shift and go to state 3
    lista_codigo                   shift and go to state 4
    expresion                      shift and go to state 5
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 19
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 1

    (0) S' -> programa .



state 2

    (1) programa -> clase .
    (3) programa -> clase . programa
    (1) programa -> . clase
    (2) programa -> . metodo
    (3) programa -> . clase programa
    (4) programa -> . metodo programa
    (5) programa -> . lista_codigo programa
    (6) programa -> . expresion
    (7) programa -> . expresion programa
    (37) clase -> . CLASS CONSTANT varias_exp varios_met END
    (38) clase -> . CLASS CONSTANT varias_exp END
    (39) clase -> . CLASS CONSTANT varios_met END
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOATINGPOINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 1 (programa -> clase .)
    CLASS           shift and go to state 6
    DEF             shift and go to state 8
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36

  ! CLASS           [ reduce using rule 110 (vacio -> .) ]
  ! DEF             [ reduce using rule 110 (vacio -> .) ]
  ! STRING          [ reduce using rule 110 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE        [ reduce using rule 110 (vacio -> .) ]
  ! CONSTANT        [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 110 (vacio -> .) ]
  ! INTEGER         [ reduce using rule 110 (vacio -> .) ]
  ! FLOATINGPOINT   [ reduce using rule 110 (vacio -> .) ]
  ! PUTS            [ reduce using rule 110 (vacio -> .) ]
  ! IF              [ reduce using rule 110 (vacio -> .) ]
  ! WHILE           [ reduce using rule 110 (vacio -> .) ]
  ! FOR             [ reduce using rule 110 (vacio -> .) ]

    clase                          shift and go to state 2
    programa                       shift and go to state 37
    metodo                         shift and go to state 3
    lista_codigo                   shift and go to state 4
    expresion                      shift and go to state 5
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 19
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 3

    (2) programa -> metodo .
    (4) programa -> metodo . programa
    (1) programa -> . clase
    (2) programa -> . metodo
    (3) programa -> . clase programa
    (4) programa -> . metodo programa
    (5) programa -> . lista_codigo programa
    (6) programa -> . expresion
    (7) programa -> . expresion programa
    (37) clase -> . CLASS CONSTANT varias_exp varios_met END
    (38) clase -> . CLASS CONSTANT varias_exp END
    (39) clase -> . CLASS CONSTANT varios_met END
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOATINGPOINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 2 (programa -> metodo .)
    CLASS           shift and go to state 6
    DEF             shift and go to state 8
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36

  ! CLASS           [ reduce using rule 110 (vacio -> .) ]
  ! DEF             [ reduce using rule 110 (vacio -> .) ]
  ! STRING          [ reduce using rule 110 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE        [ reduce using rule 110 (vacio -> .) ]
  ! CONSTANT        [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 110 (vacio -> .) ]
  ! INTEGER         [ reduce using rule 110 (vacio -> .) ]
  ! FLOATINGPOINT   [ reduce using rule 110 (vacio -> .) ]
  ! PUTS            [ reduce using rule 110 (vacio -> .) ]
  ! IF              [ reduce using rule 110 (vacio -> .) ]
  ! WHILE           [ reduce using rule 110 (vacio -> .) ]
  ! FOR             [ reduce using rule 110 (vacio -> .) ]

    metodo                         shift and go to state 3
    programa                       shift and go to state 38
    clase                          shift and go to state 2
    lista_codigo                   shift and go to state 4
    expresion                      shift and go to state 5
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 19
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 4

    (5) programa -> lista_codigo . programa
    (1) programa -> . clase
    (2) programa -> . metodo
    (3) programa -> . clase programa
    (4) programa -> . metodo programa
    (5) programa -> . lista_codigo programa
    (6) programa -> . expresion
    (7) programa -> . expresion programa
    (37) clase -> . CLASS CONSTANT varias_exp varios_met END
    (38) clase -> . CLASS CONSTANT varias_exp END
    (39) clase -> . CLASS CONSTANT varios_met END
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOATINGPOINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    CLASS           shift and go to state 6
    DEF             shift and go to state 8
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36

  ! CLASS           [ reduce using rule 110 (vacio -> .) ]
  ! DEF             [ reduce using rule 110 (vacio -> .) ]
  ! STRING          [ reduce using rule 110 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE        [ reduce using rule 110 (vacio -> .) ]
  ! CONSTANT        [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 110 (vacio -> .) ]
  ! INTEGER         [ reduce using rule 110 (vacio -> .) ]
  ! FLOATINGPOINT   [ reduce using rule 110 (vacio -> .) ]
  ! PUTS            [ reduce using rule 110 (vacio -> .) ]
  ! IF              [ reduce using rule 110 (vacio -> .) ]
  ! WHILE           [ reduce using rule 110 (vacio -> .) ]
  ! FOR             [ reduce using rule 110 (vacio -> .) ]

    lista_codigo                   shift and go to state 4
    programa                       shift and go to state 39
    clase                          shift and go to state 2
    metodo                         shift and go to state 3
    expresion                      shift and go to state 5
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 19
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 5

    (6) programa -> expresion .
    (7) programa -> expresion . programa
    (53) codigo -> expresion .
    (1) programa -> . clase
    (2) programa -> . metodo
    (3) programa -> . clase programa
    (4) programa -> . metodo programa
    (5) programa -> . lista_codigo programa
    (6) programa -> . expresion
    (7) programa -> . expresion programa
    (37) clase -> . CLASS CONSTANT varias_exp varios_met END
    (38) clase -> . CLASS CONSTANT varias_exp END
    (39) clase -> . CLASS CONSTANT varios_met END
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for DEF resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! reduce/reduce conflict for VARIABLE resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for VARIABLE_GLOBAL resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for VARIABLE_CLASE resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for VARIABLE_INSTANCIA resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for INTEGER resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for FLOATINGPOINT resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for PUTS resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for IF resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (codigo -> expresion .)
  ! reduce/reduce conflict for FOR resolved using rule 53 (codigo -> expresion .)
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOATINGPOINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 6 (programa -> expresion .)
    CLASS           shift and go to state 6
    DEF             shift and go to state 8
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36

  ! STRING          [ reduce using rule 53 (codigo -> expresion .) ]
  ! BOOLEAN         [ reduce using rule 53 (codigo -> expresion .) ]
  ! IF              [ reduce using rule 53 (codigo -> expresion .) ]
  ! WHILE           [ reduce using rule 53 (codigo -> expresion .) ]
  ! FOR             [ reduce using rule 53 (codigo -> expresion .) ]
  ! VARIABLE        [ reduce using rule 53 (codigo -> expresion .) ]
  ! CONSTANT        [ reduce using rule 53 (codigo -> expresion .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 53 (codigo -> expresion .) ]
  ! VARIABLE_CLASE  [ reduce using rule 53 (codigo -> expresion .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 53 (codigo -> expresion .) ]
  ! INTEGER         [ reduce using rule 53 (codigo -> expresion .) ]
  ! FLOATINGPOINT   [ reduce using rule 53 (codigo -> expresion .) ]
  ! PUTS            [ reduce using rule 53 (codigo -> expresion .) ]
  ! CLASS           [ reduce using rule 53 (codigo -> expresion .) ]
  ! DEF             [ reduce using rule 53 (codigo -> expresion .) ]
  ! CLASS           [ reduce using rule 110 (vacio -> .) ]
  ! DEF             [ reduce using rule 110 (vacio -> .) ]
  ! STRING          [ reduce using rule 110 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE        [ reduce using rule 110 (vacio -> .) ]
  ! CONSTANT        [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 110 (vacio -> .) ]
  ! INTEGER         [ reduce using rule 110 (vacio -> .) ]
  ! FLOATINGPOINT   [ reduce using rule 110 (vacio -> .) ]
  ! PUTS            [ reduce using rule 110 (vacio -> .) ]
  ! IF              [ reduce using rule 110 (vacio -> .) ]
  ! WHILE           [ reduce using rule 110 (vacio -> .) ]
  ! FOR             [ reduce using rule 110 (vacio -> .) ]

    expresion                      shift and go to state 5
    programa                       shift and go to state 40
    clase                          shift and go to state 2
    metodo                         shift and go to state 3
    lista_codigo                   shift and go to state 4
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 19
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 6

    (37) clase -> CLASS . CONSTANT varias_exp varios_met END
    (38) clase -> CLASS . CONSTANT varias_exp END
    (39) clase -> CLASS . CONSTANT varios_met END

    CONSTANT        shift and go to state 41


state 7

    (9) identificador -> CONSTANT .

    EQUALS          reduce using rule 9 (identificador -> CONSTANT .)
    DOT             reduce using rule 9 (identificador -> CONSTANT .)
    ISEQUAL         reduce using rule 9 (identificador -> CONSTANT .)
    NOT             reduce using rule 9 (identificador -> CONSTANT .)
    CLASS           reduce using rule 9 (identificador -> CONSTANT .)
    DEF             reduce using rule 9 (identificador -> CONSTANT .)
    STRING          reduce using rule 9 (identificador -> CONSTANT .)
    BOOLEAN         reduce using rule 9 (identificador -> CONSTANT .)
    VARIABLE        reduce using rule 9 (identificador -> CONSTANT .)
    CONSTANT        reduce using rule 9 (identificador -> CONSTANT .)
    VARIABLE_GLOBAL reduce using rule 9 (identificador -> CONSTANT .)
    VARIABLE_CLASE  reduce using rule 9 (identificador -> CONSTANT .)
    VARIABLE_INSTANCIA reduce using rule 9 (identificador -> CONSTANT .)
    INTEGER         reduce using rule 9 (identificador -> CONSTANT .)
    FLOATINGPOINT   reduce using rule 9 (identificador -> CONSTANT .)
    PUTS            reduce using rule 9 (identificador -> CONSTANT .)
    IF              reduce using rule 9 (identificador -> CONSTANT .)
    WHILE           reduce using rule 9 (identificador -> CONSTANT .)
    FOR             reduce using rule 9 (identificador -> CONSTANT .)
    $end            reduce using rule 9 (identificador -> CONSTANT .)
    PLUS            reduce using rule 9 (identificador -> CONSTANT .)
    MINUS           reduce using rule 9 (identificador -> CONSTANT .)
    TIMS            reduce using rule 9 (identificador -> CONSTANT .)
    DIVIDE          reduce using rule 9 (identificador -> CONSTANT .)
    LESS            reduce using rule 9 (identificador -> CONSTANT .)
    GREATER         reduce using rule 9 (identificador -> CONSTANT .)
    END             reduce using rule 9 (identificador -> CONSTANT .)
    ELSE            reduce using rule 9 (identificador -> CONSTANT .)
    ELSIF           reduce using rule 9 (identificador -> CONSTANT .)
    RETURN          reduce using rule 9 (identificador -> CONSTANT .)
    IN              reduce using rule 9 (identificador -> CONSTANT .)
    RPAREN          reduce using rule 9 (identificador -> CONSTANT .)
    COMMA           reduce using rule 9 (identificador -> CONSTANT .)
    RBRACKET        reduce using rule 9 (identificador -> CONSTANT .)
    RBRACE          reduce using rule 9 (identificador -> CONSTANT .)


state 8

    (44) metodo -> DEF . VARIABLE lista_codigo END
    (45) metodo -> DEF . VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> DEF . VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END

    VARIABLE        shift and go to state 42


state 9

    (8) identificador -> VARIABLE .
    (106) llamar_funcion -> VARIABLE . DOT LENGTH
    (107) llamar_funcion -> VARIABLE . DOT KEY
    (108) llamar_funcion -> VARIABLE . DOT FIRST
    (109) llamar_funcion -> VARIABLE . DOT LAST

  ! shift/reduce conflict for DOT resolved as shift
    EQUALS          reduce using rule 8 (identificador -> VARIABLE .)
    ISEQUAL         reduce using rule 8 (identificador -> VARIABLE .)
    NOT             reduce using rule 8 (identificador -> VARIABLE .)
    CLASS           reduce using rule 8 (identificador -> VARIABLE .)
    DEF             reduce using rule 8 (identificador -> VARIABLE .)
    STRING          reduce using rule 8 (identificador -> VARIABLE .)
    BOOLEAN         reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE        reduce using rule 8 (identificador -> VARIABLE .)
    CONSTANT        reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE_GLOBAL reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE_CLASE  reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE_INSTANCIA reduce using rule 8 (identificador -> VARIABLE .)
    INTEGER         reduce using rule 8 (identificador -> VARIABLE .)
    FLOATINGPOINT   reduce using rule 8 (identificador -> VARIABLE .)
    PUTS            reduce using rule 8 (identificador -> VARIABLE .)
    IF              reduce using rule 8 (identificador -> VARIABLE .)
    WHILE           reduce using rule 8 (identificador -> VARIABLE .)
    FOR             reduce using rule 8 (identificador -> VARIABLE .)
    $end            reduce using rule 8 (identificador -> VARIABLE .)
    PLUS            reduce using rule 8 (identificador -> VARIABLE .)
    MINUS           reduce using rule 8 (identificador -> VARIABLE .)
    TIMS            reduce using rule 8 (identificador -> VARIABLE .)
    DIVIDE          reduce using rule 8 (identificador -> VARIABLE .)
    LESS            reduce using rule 8 (identificador -> VARIABLE .)
    GREATER         reduce using rule 8 (identificador -> VARIABLE .)
    END             reduce using rule 8 (identificador -> VARIABLE .)
    ELSE            reduce using rule 8 (identificador -> VARIABLE .)
    ELSIF           reduce using rule 8 (identificador -> VARIABLE .)
    RETURN          reduce using rule 8 (identificador -> VARIABLE .)
    IN              reduce using rule 8 (identificador -> VARIABLE .)
    RPAREN          reduce using rule 8 (identificador -> VARIABLE .)
    COMMA           reduce using rule 8 (identificador -> VARIABLE .)
    RBRACKET        reduce using rule 8 (identificador -> VARIABLE .)
    RBRACE          reduce using rule 8 (identificador -> VARIABLE .)
    DOT             shift and go to state 43

  ! DOT             [ reduce using rule 8 (identificador -> VARIABLE .) ]


state 10

    (49) lista_codigo -> codigo .
    (51) lista_codigo -> codigo . lista_codigo
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

  ! reduce/reduce conflict for CLASS resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for DEF resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for STRING resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for VARIABLE_GLOBAL resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for VARIABLE_CLASE resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for VARIABLE_INSTANCIA resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for INTEGER resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for FLOATINGPOINT resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for PUTS resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for IF resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for WHILE resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for FOR resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for END resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for ELSE resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for ELSIF resolved using rule 49 (lista_codigo -> codigo .)
  ! reduce/reduce conflict for RETURN resolved using rule 49 (lista_codigo -> codigo .)
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOLEAN resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VARIABLE resolved as shift
  ! shift/reduce conflict for CONSTANT resolved as shift
  ! shift/reduce conflict for VARIABLE_GLOBAL resolved as shift
  ! shift/reduce conflict for VARIABLE_CLASE resolved as shift
  ! shift/reduce conflict for VARIABLE_INSTANCIA resolved as shift
  ! shift/reduce conflict for INTEGER resolved as shift
  ! shift/reduce conflict for FLOATINGPOINT resolved as shift
  ! shift/reduce conflict for PUTS resolved as shift
    CLASS           reduce using rule 49 (lista_codigo -> codigo .)
    DEF             reduce using rule 49 (lista_codigo -> codigo .)
    END             reduce using rule 49 (lista_codigo -> codigo .)
    ELSE            reduce using rule 49 (lista_codigo -> codigo .)
    ELSIF           reduce using rule 49 (lista_codigo -> codigo .)
    RETURN          reduce using rule 49 (lista_codigo -> codigo .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

  ! STRING          [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! BOOLEAN         [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! VARIABLE        [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! CONSTANT        [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! VARIABLE_CLASE  [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! INTEGER         [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! FLOATINGPOINT   [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! PUTS            [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! IF              [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! WHILE           [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! FOR             [ reduce using rule 49 (lista_codigo -> codigo .) ]
  ! CLASS           [ reduce using rule 110 (vacio -> .) ]
  ! DEF             [ reduce using rule 110 (vacio -> .) ]
  ! STRING          [ reduce using rule 110 (vacio -> .) ]
  ! BOOLEAN         [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE        [ reduce using rule 110 (vacio -> .) ]
  ! CONSTANT        [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_CLASE  [ reduce using rule 110 (vacio -> .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 110 (vacio -> .) ]
  ! INTEGER         [ reduce using rule 110 (vacio -> .) ]
  ! FLOATINGPOINT   [ reduce using rule 110 (vacio -> .) ]
  ! PUTS            [ reduce using rule 110 (vacio -> .) ]
  ! IF              [ reduce using rule 110 (vacio -> .) ]
  ! WHILE           [ reduce using rule 110 (vacio -> .) ]
  ! FOR             [ reduce using rule 110 (vacio -> .) ]
  ! END             [ reduce using rule 110 (vacio -> .) ]
  ! ELSE            [ reduce using rule 110 (vacio -> .) ]
  ! ELSIF           [ reduce using rule 110 (vacio -> .) ]
  ! RETURN          [ reduce using rule 110 (vacio -> .) ]

    codigo                         shift and go to state 10
    lista_codigo                   shift and go to state 44
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 11

    (50) lista_codigo -> vacio .

    CLASS           reduce using rule 50 (lista_codigo -> vacio .)
    DEF             reduce using rule 50 (lista_codigo -> vacio .)
    STRING          reduce using rule 50 (lista_codigo -> vacio .)
    BOOLEAN         reduce using rule 50 (lista_codigo -> vacio .)
    VARIABLE        reduce using rule 50 (lista_codigo -> vacio .)
    CONSTANT        reduce using rule 50 (lista_codigo -> vacio .)
    VARIABLE_GLOBAL reduce using rule 50 (lista_codigo -> vacio .)
    VARIABLE_CLASE  reduce using rule 50 (lista_codigo -> vacio .)
    VARIABLE_INSTANCIA reduce using rule 50 (lista_codigo -> vacio .)
    INTEGER         reduce using rule 50 (lista_codigo -> vacio .)
    FLOATINGPOINT   reduce using rule 50 (lista_codigo -> vacio .)
    PUTS            reduce using rule 50 (lista_codigo -> vacio .)
    IF              reduce using rule 50 (lista_codigo -> vacio .)
    WHILE           reduce using rule 50 (lista_codigo -> vacio .)
    FOR             reduce using rule 50 (lista_codigo -> vacio .)
    END             reduce using rule 50 (lista_codigo -> vacio .)
    ELSE            reduce using rule 50 (lista_codigo -> vacio .)
    ELSIF           reduce using rule 50 (lista_codigo -> vacio .)
    RETURN          reduce using rule 50 (lista_codigo -> vacio .)


state 12

    (15) expresion -> identificador .
    (70) expresion_condicion -> identificador . opIgual BOOLEAN
    (72) expresion_condicion -> identificador . opIgual valores_cond
    (105) asignacion -> identificador . EQUALS expresion
    (27) arreglo -> identificador . EQUALS LBRACKET elementos RBRACKET
    (30) hash -> identificador . EQUALS LBRACE elementos_hash RBRACE
    (94) times -> identificador . DOT TIMES LBRACE expresion RBRACE
    (96) times -> identificador . DOT TIMES DO expresion END
    (100) valores_mat -> identificador .
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

  ! shift/reduce conflict for EQUALS resolved as shift
  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    CLASS           reduce using rule 15 (expresion -> identificador .)
    DEF             reduce using rule 15 (expresion -> identificador .)
    STRING          reduce using rule 15 (expresion -> identificador .)
    BOOLEAN         reduce using rule 15 (expresion -> identificador .)
    VARIABLE        reduce using rule 15 (expresion -> identificador .)
    CONSTANT        reduce using rule 15 (expresion -> identificador .)
    VARIABLE_GLOBAL reduce using rule 15 (expresion -> identificador .)
    VARIABLE_CLASE  reduce using rule 15 (expresion -> identificador .)
    VARIABLE_INSTANCIA reduce using rule 15 (expresion -> identificador .)
    INTEGER         reduce using rule 15 (expresion -> identificador .)
    FLOATINGPOINT   reduce using rule 15 (expresion -> identificador .)
    PUTS            reduce using rule 15 (expresion -> identificador .)
    IF              reduce using rule 15 (expresion -> identificador .)
    WHILE           reduce using rule 15 (expresion -> identificador .)
    FOR             reduce using rule 15 (expresion -> identificador .)
    $end            reduce using rule 15 (expresion -> identificador .)
    END             reduce using rule 15 (expresion -> identificador .)
    ELSE            reduce using rule 15 (expresion -> identificador .)
    ELSIF           reduce using rule 15 (expresion -> identificador .)
    RETURN          reduce using rule 15 (expresion -> identificador .)
    IN              reduce using rule 15 (expresion -> identificador .)
    RPAREN          reduce using rule 15 (expresion -> identificador .)
    COMMA           reduce using rule 15 (expresion -> identificador .)
    RBRACKET        reduce using rule 15 (expresion -> identificador .)
    RBRACE          reduce using rule 15 (expresion -> identificador .)
    EQUALS          shift and go to state 49
    DOT             shift and go to state 50
    PLUS            reduce using rule 100 (valores_mat -> identificador .)
    MINUS           reduce using rule 100 (valores_mat -> identificador .)
    TIMS            reduce using rule 100 (valores_mat -> identificador .)
    DIVIDE          reduce using rule 100 (valores_mat -> identificador .)
    LESS            reduce using rule 100 (valores_mat -> identificador .)
    GREATER         reduce using rule 100 (valores_mat -> identificador .)
    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

  ! EQUALS          [ reduce using rule 15 (expresion -> identificador .) ]
  ! ISEQUAL         [ reduce using rule 100 (valores_mat -> identificador .) ]
  ! NOT             [ reduce using rule 100 (valores_mat -> identificador .) ]

    opIgual                        shift and go to state 48

state 13

    (16) expresion -> STRING .
    (75) valores_cond -> STRING .

    CLASS           reduce using rule 16 (expresion -> STRING .)
    DEF             reduce using rule 16 (expresion -> STRING .)
    STRING          reduce using rule 16 (expresion -> STRING .)
    BOOLEAN         reduce using rule 16 (expresion -> STRING .)
    VARIABLE        reduce using rule 16 (expresion -> STRING .)
    CONSTANT        reduce using rule 16 (expresion -> STRING .)
    VARIABLE_GLOBAL reduce using rule 16 (expresion -> STRING .)
    VARIABLE_CLASE  reduce using rule 16 (expresion -> STRING .)
    VARIABLE_INSTANCIA reduce using rule 16 (expresion -> STRING .)
    INTEGER         reduce using rule 16 (expresion -> STRING .)
    FLOATINGPOINT   reduce using rule 16 (expresion -> STRING .)
    PUTS            reduce using rule 16 (expresion -> STRING .)
    IF              reduce using rule 16 (expresion -> STRING .)
    WHILE           reduce using rule 16 (expresion -> STRING .)
    FOR             reduce using rule 16 (expresion -> STRING .)
    $end            reduce using rule 16 (expresion -> STRING .)
    END             reduce using rule 16 (expresion -> STRING .)
    ELSE            reduce using rule 16 (expresion -> STRING .)
    ELSIF           reduce using rule 16 (expresion -> STRING .)
    RETURN          reduce using rule 16 (expresion -> STRING .)
    IN              reduce using rule 16 (expresion -> STRING .)
    RPAREN          reduce using rule 16 (expresion -> STRING .)
    COMMA           reduce using rule 16 (expresion -> STRING .)
    RBRACKET        reduce using rule 16 (expresion -> STRING .)
    EQUALS          reduce using rule 16 (expresion -> STRING .)
    RBRACE          reduce using rule 16 (expresion -> STRING .)
    LESS            reduce using rule 75 (valores_cond -> STRING .)
    GREATER         reduce using rule 75 (valores_cond -> STRING .)
    ISEQUAL         reduce using rule 75 (valores_cond -> STRING .)
    NOT             reduce using rule 75 (valores_cond -> STRING .)


state 14

    (17) expresion -> number .
    (99) valores_mat -> number .

    CLASS           reduce using rule 17 (expresion -> number .)
    DEF             reduce using rule 17 (expresion -> number .)
    STRING          reduce using rule 17 (expresion -> number .)
    BOOLEAN         reduce using rule 17 (expresion -> number .)
    VARIABLE        reduce using rule 17 (expresion -> number .)
    CONSTANT        reduce using rule 17 (expresion -> number .)
    VARIABLE_GLOBAL reduce using rule 17 (expresion -> number .)
    VARIABLE_CLASE  reduce using rule 17 (expresion -> number .)
    VARIABLE_INSTANCIA reduce using rule 17 (expresion -> number .)
    INTEGER         reduce using rule 17 (expresion -> number .)
    FLOATINGPOINT   reduce using rule 17 (expresion -> number .)
    PUTS            reduce using rule 17 (expresion -> number .)
    IF              reduce using rule 17 (expresion -> number .)
    WHILE           reduce using rule 17 (expresion -> number .)
    FOR             reduce using rule 17 (expresion -> number .)
    $end            reduce using rule 17 (expresion -> number .)
    END             reduce using rule 17 (expresion -> number .)
    ELSE            reduce using rule 17 (expresion -> number .)
    ELSIF           reduce using rule 17 (expresion -> number .)
    RETURN          reduce using rule 17 (expresion -> number .)
    IN              reduce using rule 17 (expresion -> number .)
    RPAREN          reduce using rule 17 (expresion -> number .)
    COMMA           reduce using rule 17 (expresion -> number .)
    RBRACKET        reduce using rule 17 (expresion -> number .)
    EQUALS          reduce using rule 17 (expresion -> number .)
    RBRACE          reduce using rule 17 (expresion -> number .)
    PLUS            reduce using rule 99 (valores_mat -> number .)
    MINUS           reduce using rule 99 (valores_mat -> number .)
    TIMS            reduce using rule 99 (valores_mat -> number .)
    DIVIDE          reduce using rule 99 (valores_mat -> number .)
    LESS            reduce using rule 99 (valores_mat -> number .)
    GREATER         reduce using rule 99 (valores_mat -> number .)
    ISEQUAL         reduce using rule 99 (valores_mat -> number .)
    NOT             reduce using rule 99 (valores_mat -> number .)


state 15

    (18) expresion -> BOOLEAN .
    (71) expresion_condicion -> BOOLEAN . opIgual identificador
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

    CLASS           reduce using rule 18 (expresion -> BOOLEAN .)
    DEF             reduce using rule 18 (expresion -> BOOLEAN .)
    STRING          reduce using rule 18 (expresion -> BOOLEAN .)
    BOOLEAN         reduce using rule 18 (expresion -> BOOLEAN .)
    VARIABLE        reduce using rule 18 (expresion -> BOOLEAN .)
    CONSTANT        reduce using rule 18 (expresion -> BOOLEAN .)
    VARIABLE_GLOBAL reduce using rule 18 (expresion -> BOOLEAN .)
    VARIABLE_CLASE  reduce using rule 18 (expresion -> BOOLEAN .)
    VARIABLE_INSTANCIA reduce using rule 18 (expresion -> BOOLEAN .)
    INTEGER         reduce using rule 18 (expresion -> BOOLEAN .)
    FLOATINGPOINT   reduce using rule 18 (expresion -> BOOLEAN .)
    PUTS            reduce using rule 18 (expresion -> BOOLEAN .)
    IF              reduce using rule 18 (expresion -> BOOLEAN .)
    WHILE           reduce using rule 18 (expresion -> BOOLEAN .)
    FOR             reduce using rule 18 (expresion -> BOOLEAN .)
    $end            reduce using rule 18 (expresion -> BOOLEAN .)
    END             reduce using rule 18 (expresion -> BOOLEAN .)
    ELSE            reduce using rule 18 (expresion -> BOOLEAN .)
    ELSIF           reduce using rule 18 (expresion -> BOOLEAN .)
    RETURN          reduce using rule 18 (expresion -> BOOLEAN .)
    IN              reduce using rule 18 (expresion -> BOOLEAN .)
    RPAREN          reduce using rule 18 (expresion -> BOOLEAN .)
    COMMA           reduce using rule 18 (expresion -> BOOLEAN .)
    RBRACKET        reduce using rule 18 (expresion -> BOOLEAN .)
    EQUALS          reduce using rule 18 (expresion -> BOOLEAN .)
    RBRACE          reduce using rule 18 (expresion -> BOOLEAN .)
    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

    opIgual                        shift and go to state 53

state 16

    (19) expresion -> expresion_condicion .

    CLASS           reduce using rule 19 (expresion -> expresion_condicion .)
    DEF             reduce using rule 19 (expresion -> expresion_condicion .)
    STRING          reduce using rule 19 (expresion -> expresion_condicion .)
    BOOLEAN         reduce using rule 19 (expresion -> expresion_condicion .)
    VARIABLE        reduce using rule 19 (expresion -> expresion_condicion .)
    CONSTANT        reduce using rule 19 (expresion -> expresion_condicion .)
    VARIABLE_GLOBAL reduce using rule 19 (expresion -> expresion_condicion .)
    VARIABLE_CLASE  reduce using rule 19 (expresion -> expresion_condicion .)
    VARIABLE_INSTANCIA reduce using rule 19 (expresion -> expresion_condicion .)
    INTEGER         reduce using rule 19 (expresion -> expresion_condicion .)
    FLOATINGPOINT   reduce using rule 19 (expresion -> expresion_condicion .)
    PUTS            reduce using rule 19 (expresion -> expresion_condicion .)
    IF              reduce using rule 19 (expresion -> expresion_condicion .)
    WHILE           reduce using rule 19 (expresion -> expresion_condicion .)
    FOR             reduce using rule 19 (expresion -> expresion_condicion .)
    $end            reduce using rule 19 (expresion -> expresion_condicion .)
    END             reduce using rule 19 (expresion -> expresion_condicion .)
    ELSE            reduce using rule 19 (expresion -> expresion_condicion .)
    ELSIF           reduce using rule 19 (expresion -> expresion_condicion .)
    RETURN          reduce using rule 19 (expresion -> expresion_condicion .)
    IN              reduce using rule 19 (expresion -> expresion_condicion .)
    RPAREN          reduce using rule 19 (expresion -> expresion_condicion .)
    COMMA           reduce using rule 19 (expresion -> expresion_condicion .)
    RBRACKET        reduce using rule 19 (expresion -> expresion_condicion .)
    EQUALS          reduce using rule 19 (expresion -> expresion_condicion .)
    RBRACE          reduce using rule 19 (expresion -> expresion_condicion .)


state 17

    (20) expresion -> expresion_matematica .

    CLASS           reduce using rule 20 (expresion -> expresion_matematica .)
    DEF             reduce using rule 20 (expresion -> expresion_matematica .)
    STRING          reduce using rule 20 (expresion -> expresion_matematica .)
    BOOLEAN         reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE        reduce using rule 20 (expresion -> expresion_matematica .)
    CONSTANT        reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE_GLOBAL reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE_CLASE  reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE_INSTANCIA reduce using rule 20 (expresion -> expresion_matematica .)
    INTEGER         reduce using rule 20 (expresion -> expresion_matematica .)
    FLOATINGPOINT   reduce using rule 20 (expresion -> expresion_matematica .)
    PUTS            reduce using rule 20 (expresion -> expresion_matematica .)
    IF              reduce using rule 20 (expresion -> expresion_matematica .)
    WHILE           reduce using rule 20 (expresion -> expresion_matematica .)
    FOR             reduce using rule 20 (expresion -> expresion_matematica .)
    $end            reduce using rule 20 (expresion -> expresion_matematica .)
    END             reduce using rule 20 (expresion -> expresion_matematica .)
    ELSE            reduce using rule 20 (expresion -> expresion_matematica .)
    ELSIF           reduce using rule 20 (expresion -> expresion_matematica .)
    RETURN          reduce using rule 20 (expresion -> expresion_matematica .)
    IN              reduce using rule 20 (expresion -> expresion_matematica .)
    RPAREN          reduce using rule 20 (expresion -> expresion_matematica .)
    COMMA           reduce using rule 20 (expresion -> expresion_matematica .)
    RBRACKET        reduce using rule 20 (expresion -> expresion_matematica .)
    EQUALS          reduce using rule 20 (expresion -> expresion_matematica .)
    RBRACE          reduce using rule 20 (expresion -> expresion_matematica .)


state 18

    (21) expresion -> llamar_funcion .

    CLASS           reduce using rule 21 (expresion -> llamar_funcion .)
    DEF             reduce using rule 21 (expresion -> llamar_funcion .)
    STRING          reduce using rule 21 (expresion -> llamar_funcion .)
    BOOLEAN         reduce using rule 21 (expresion -> llamar_funcion .)
    VARIABLE        reduce using rule 21 (expresion -> llamar_funcion .)
    CONSTANT        reduce using rule 21 (expresion -> llamar_funcion .)
    VARIABLE_GLOBAL reduce using rule 21 (expresion -> llamar_funcion .)
    VARIABLE_CLASE  reduce using rule 21 (expresion -> llamar_funcion .)
    VARIABLE_INSTANCIA reduce using rule 21 (expresion -> llamar_funcion .)
    INTEGER         reduce using rule 21 (expresion -> llamar_funcion .)
    FLOATINGPOINT   reduce using rule 21 (expresion -> llamar_funcion .)
    PUTS            reduce using rule 21 (expresion -> llamar_funcion .)
    IF              reduce using rule 21 (expresion -> llamar_funcion .)
    WHILE           reduce using rule 21 (expresion -> llamar_funcion .)
    FOR             reduce using rule 21 (expresion -> llamar_funcion .)
    $end            reduce using rule 21 (expresion -> llamar_funcion .)
    END             reduce using rule 21 (expresion -> llamar_funcion .)
    ELSE            reduce using rule 21 (expresion -> llamar_funcion .)
    ELSIF           reduce using rule 21 (expresion -> llamar_funcion .)
    RETURN          reduce using rule 21 (expresion -> llamar_funcion .)
    IN              reduce using rule 21 (expresion -> llamar_funcion .)
    RPAREN          reduce using rule 21 (expresion -> llamar_funcion .)
    COMMA           reduce using rule 21 (expresion -> llamar_funcion .)
    RBRACKET        reduce using rule 21 (expresion -> llamar_funcion .)
    EQUALS          reduce using rule 21 (expresion -> llamar_funcion .)
    RBRACE          reduce using rule 21 (expresion -> llamar_funcion .)


state 19

    (22) expresion -> asignacion .
    (52) codigo -> asignacion .

  ! reduce/reduce conflict for STRING resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE_GLOBAL resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE_CLASE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE_INSTANCIA resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for INTEGER resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for FLOATINGPOINT resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for CLASS resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for DEF resolved using rule 22 (expresion -> asignacion .)
    CLASS           reduce using rule 22 (expresion -> asignacion .)
    DEF             reduce using rule 22 (expresion -> asignacion .)
    STRING          reduce using rule 22 (expresion -> asignacion .)
    BOOLEAN         reduce using rule 22 (expresion -> asignacion .)
    VARIABLE        reduce using rule 22 (expresion -> asignacion .)
    CONSTANT        reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_GLOBAL reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_CLASE  reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_INSTANCIA reduce using rule 22 (expresion -> asignacion .)
    INTEGER         reduce using rule 22 (expresion -> asignacion .)
    FLOATINGPOINT   reduce using rule 22 (expresion -> asignacion .)
    PUTS            reduce using rule 22 (expresion -> asignacion .)
    IF              reduce using rule 22 (expresion -> asignacion .)
    WHILE           reduce using rule 22 (expresion -> asignacion .)
    FOR             reduce using rule 22 (expresion -> asignacion .)
    $end            reduce using rule 22 (expresion -> asignacion .)

  ! STRING          [ reduce using rule 52 (codigo -> asignacion .) ]
  ! BOOLEAN         [ reduce using rule 52 (codigo -> asignacion .) ]
  ! IF              [ reduce using rule 52 (codigo -> asignacion .) ]
  ! WHILE           [ reduce using rule 52 (codigo -> asignacion .) ]
  ! FOR             [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 52 (codigo -> asignacion .) ]
  ! CONSTANT        [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE_CLASE  [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 52 (codigo -> asignacion .) ]
  ! INTEGER         [ reduce using rule 52 (codigo -> asignacion .) ]
  ! FLOATINGPOINT   [ reduce using rule 52 (codigo -> asignacion .) ]
  ! PUTS            [ reduce using rule 52 (codigo -> asignacion .) ]
  ! CLASS           [ reduce using rule 52 (codigo -> asignacion .) ]
  ! DEF             [ reduce using rule 52 (codigo -> asignacion .) ]


state 20

    (23) expresion -> arreglo .

    CLASS           reduce using rule 23 (expresion -> arreglo .)
    DEF             reduce using rule 23 (expresion -> arreglo .)
    STRING          reduce using rule 23 (expresion -> arreglo .)
    BOOLEAN         reduce using rule 23 (expresion -> arreglo .)
    VARIABLE        reduce using rule 23 (expresion -> arreglo .)
    CONSTANT        reduce using rule 23 (expresion -> arreglo .)
    VARIABLE_GLOBAL reduce using rule 23 (expresion -> arreglo .)
    VARIABLE_CLASE  reduce using rule 23 (expresion -> arreglo .)
    VARIABLE_INSTANCIA reduce using rule 23 (expresion -> arreglo .)
    INTEGER         reduce using rule 23 (expresion -> arreglo .)
    FLOATINGPOINT   reduce using rule 23 (expresion -> arreglo .)
    PUTS            reduce using rule 23 (expresion -> arreglo .)
    IF              reduce using rule 23 (expresion -> arreglo .)
    WHILE           reduce using rule 23 (expresion -> arreglo .)
    FOR             reduce using rule 23 (expresion -> arreglo .)
    $end            reduce using rule 23 (expresion -> arreglo .)
    END             reduce using rule 23 (expresion -> arreglo .)
    ELSE            reduce using rule 23 (expresion -> arreglo .)
    ELSIF           reduce using rule 23 (expresion -> arreglo .)
    RETURN          reduce using rule 23 (expresion -> arreglo .)
    IN              reduce using rule 23 (expresion -> arreglo .)
    RPAREN          reduce using rule 23 (expresion -> arreglo .)
    COMMA           reduce using rule 23 (expresion -> arreglo .)
    RBRACKET        reduce using rule 23 (expresion -> arreglo .)
    EQUALS          reduce using rule 23 (expresion -> arreglo .)
    RBRACE          reduce using rule 23 (expresion -> arreglo .)


state 21

    (24) expresion -> hash .

    CLASS           reduce using rule 24 (expresion -> hash .)
    DEF             reduce using rule 24 (expresion -> hash .)
    STRING          reduce using rule 24 (expresion -> hash .)
    BOOLEAN         reduce using rule 24 (expresion -> hash .)
    VARIABLE        reduce using rule 24 (expresion -> hash .)
    CONSTANT        reduce using rule 24 (expresion -> hash .)
    VARIABLE_GLOBAL reduce using rule 24 (expresion -> hash .)
    VARIABLE_CLASE  reduce using rule 24 (expresion -> hash .)
    VARIABLE_INSTANCIA reduce using rule 24 (expresion -> hash .)
    INTEGER         reduce using rule 24 (expresion -> hash .)
    FLOATINGPOINT   reduce using rule 24 (expresion -> hash .)
    PUTS            reduce using rule 24 (expresion -> hash .)
    IF              reduce using rule 24 (expresion -> hash .)
    WHILE           reduce using rule 24 (expresion -> hash .)
    FOR             reduce using rule 24 (expresion -> hash .)
    $end            reduce using rule 24 (expresion -> hash .)
    END             reduce using rule 24 (expresion -> hash .)
    ELSE            reduce using rule 24 (expresion -> hash .)
    ELSIF           reduce using rule 24 (expresion -> hash .)
    RETURN          reduce using rule 24 (expresion -> hash .)
    IN              reduce using rule 24 (expresion -> hash .)
    RPAREN          reduce using rule 24 (expresion -> hash .)
    COMMA           reduce using rule 24 (expresion -> hash .)
    RBRACKET        reduce using rule 24 (expresion -> hash .)
    EQUALS          reduce using rule 24 (expresion -> hash .)
    RBRACE          reduce using rule 24 (expresion -> hash .)


state 22

    (25) expresion -> puts .

    CLASS           reduce using rule 25 (expresion -> puts .)
    DEF             reduce using rule 25 (expresion -> puts .)
    STRING          reduce using rule 25 (expresion -> puts .)
    BOOLEAN         reduce using rule 25 (expresion -> puts .)
    VARIABLE        reduce using rule 25 (expresion -> puts .)
    CONSTANT        reduce using rule 25 (expresion -> puts .)
    VARIABLE_GLOBAL reduce using rule 25 (expresion -> puts .)
    VARIABLE_CLASE  reduce using rule 25 (expresion -> puts .)
    VARIABLE_INSTANCIA reduce using rule 25 (expresion -> puts .)
    INTEGER         reduce using rule 25 (expresion -> puts .)
    FLOATINGPOINT   reduce using rule 25 (expresion -> puts .)
    PUTS            reduce using rule 25 (expresion -> puts .)
    IF              reduce using rule 25 (expresion -> puts .)
    WHILE           reduce using rule 25 (expresion -> puts .)
    FOR             reduce using rule 25 (expresion -> puts .)
    $end            reduce using rule 25 (expresion -> puts .)
    END             reduce using rule 25 (expresion -> puts .)
    ELSE            reduce using rule 25 (expresion -> puts .)
    ELSIF           reduce using rule 25 (expresion -> puts .)
    RETURN          reduce using rule 25 (expresion -> puts .)
    IN              reduce using rule 25 (expresion -> puts .)
    RPAREN          reduce using rule 25 (expresion -> puts .)
    COMMA           reduce using rule 25 (expresion -> puts .)
    RBRACKET        reduce using rule 25 (expresion -> puts .)
    EQUALS          reduce using rule 25 (expresion -> puts .)
    RBRACE          reduce using rule 25 (expresion -> puts .)


state 23

    (26) expresion -> times .

    CLASS           reduce using rule 26 (expresion -> times .)
    DEF             reduce using rule 26 (expresion -> times .)
    STRING          reduce using rule 26 (expresion -> times .)
    BOOLEAN         reduce using rule 26 (expresion -> times .)
    VARIABLE        reduce using rule 26 (expresion -> times .)
    CONSTANT        reduce using rule 26 (expresion -> times .)
    VARIABLE_GLOBAL reduce using rule 26 (expresion -> times .)
    VARIABLE_CLASE  reduce using rule 26 (expresion -> times .)
    VARIABLE_INSTANCIA reduce using rule 26 (expresion -> times .)
    INTEGER         reduce using rule 26 (expresion -> times .)
    FLOATINGPOINT   reduce using rule 26 (expresion -> times .)
    PUTS            reduce using rule 26 (expresion -> times .)
    IF              reduce using rule 26 (expresion -> times .)
    WHILE           reduce using rule 26 (expresion -> times .)
    FOR             reduce using rule 26 (expresion -> times .)
    $end            reduce using rule 26 (expresion -> times .)
    END             reduce using rule 26 (expresion -> times .)
    ELSE            reduce using rule 26 (expresion -> times .)
    ELSIF           reduce using rule 26 (expresion -> times .)
    RETURN          reduce using rule 26 (expresion -> times .)
    IN              reduce using rule 26 (expresion -> times .)
    RPAREN          reduce using rule 26 (expresion -> times .)
    COMMA           reduce using rule 26 (expresion -> times .)
    RBRACKET        reduce using rule 26 (expresion -> times .)
    EQUALS          reduce using rule 26 (expresion -> times .)
    RBRACE          reduce using rule 26 (expresion -> times .)


state 24

    (54) codigo -> condicional_if .

    STRING          reduce using rule 54 (codigo -> condicional_if .)
    BOOLEAN         reduce using rule 54 (codigo -> condicional_if .)
    IF              reduce using rule 54 (codigo -> condicional_if .)
    WHILE           reduce using rule 54 (codigo -> condicional_if .)
    FOR             reduce using rule 54 (codigo -> condicional_if .)
    VARIABLE        reduce using rule 54 (codigo -> condicional_if .)
    CONSTANT        reduce using rule 54 (codigo -> condicional_if .)
    VARIABLE_GLOBAL reduce using rule 54 (codigo -> condicional_if .)
    VARIABLE_CLASE  reduce using rule 54 (codigo -> condicional_if .)
    VARIABLE_INSTANCIA reduce using rule 54 (codigo -> condicional_if .)
    INTEGER         reduce using rule 54 (codigo -> condicional_if .)
    FLOATINGPOINT   reduce using rule 54 (codigo -> condicional_if .)
    PUTS            reduce using rule 54 (codigo -> condicional_if .)
    CLASS           reduce using rule 54 (codigo -> condicional_if .)
    DEF             reduce using rule 54 (codigo -> condicional_if .)
    END             reduce using rule 54 (codigo -> condicional_if .)
    ELSE            reduce using rule 54 (codigo -> condicional_if .)
    ELSIF           reduce using rule 54 (codigo -> condicional_if .)
    RETURN          reduce using rule 54 (codigo -> condicional_if .)


state 25

    (55) codigo -> iteracion .

    STRING          reduce using rule 55 (codigo -> iteracion .)
    BOOLEAN         reduce using rule 55 (codigo -> iteracion .)
    IF              reduce using rule 55 (codigo -> iteracion .)
    WHILE           reduce using rule 55 (codigo -> iteracion .)
    FOR             reduce using rule 55 (codigo -> iteracion .)
    VARIABLE        reduce using rule 55 (codigo -> iteracion .)
    CONSTANT        reduce using rule 55 (codigo -> iteracion .)
    VARIABLE_GLOBAL reduce using rule 55 (codigo -> iteracion .)
    VARIABLE_CLASE  reduce using rule 55 (codigo -> iteracion .)
    VARIABLE_INSTANCIA reduce using rule 55 (codigo -> iteracion .)
    INTEGER         reduce using rule 55 (codigo -> iteracion .)
    FLOATINGPOINT   reduce using rule 55 (codigo -> iteracion .)
    PUTS            reduce using rule 55 (codigo -> iteracion .)
    CLASS           reduce using rule 55 (codigo -> iteracion .)
    DEF             reduce using rule 55 (codigo -> iteracion .)
    END             reduce using rule 55 (codigo -> iteracion .)
    ELSE            reduce using rule 55 (codigo -> iteracion .)
    ELSIF           reduce using rule 55 (codigo -> iteracion .)
    RETURN          reduce using rule 55 (codigo -> iteracion .)


state 26

    (10) identificador -> VARIABLE_GLOBAL .

    EQUALS          reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    DOT             reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    ISEQUAL         reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    NOT             reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    CLASS           reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    DEF             reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    STRING          reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    BOOLEAN         reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    VARIABLE        reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    CONSTANT        reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    VARIABLE_GLOBAL reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    VARIABLE_CLASE  reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    VARIABLE_INSTANCIA reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    INTEGER         reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    FLOATINGPOINT   reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    PUTS            reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    IF              reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    WHILE           reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    FOR             reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    $end            reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    PLUS            reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    MINUS           reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    TIMS            reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    DIVIDE          reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    LESS            reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    GREATER         reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    END             reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    ELSE            reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    ELSIF           reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    RETURN          reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    IN              reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    RPAREN          reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    COMMA           reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    RBRACKET        reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)
    RBRACE          reduce using rule 10 (identificador -> VARIABLE_GLOBAL .)


state 27

    (11) identificador -> VARIABLE_CLASE .

    EQUALS          reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    DOT             reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    ISEQUAL         reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    NOT             reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    CLASS           reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    DEF             reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    STRING          reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    BOOLEAN         reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    VARIABLE        reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    CONSTANT        reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    VARIABLE_GLOBAL reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    VARIABLE_CLASE  reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    VARIABLE_INSTANCIA reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    INTEGER         reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    FLOATINGPOINT   reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    PUTS            reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    IF              reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    WHILE           reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    FOR             reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    $end            reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    PLUS            reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    MINUS           reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    TIMS            reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    DIVIDE          reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    LESS            reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    GREATER         reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    END             reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    ELSE            reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    ELSIF           reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    RETURN          reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    IN              reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    RPAREN          reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    COMMA           reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    RBRACKET        reduce using rule 11 (identificador -> VARIABLE_CLASE .)
    RBRACE          reduce using rule 11 (identificador -> VARIABLE_CLASE .)


state 28

    (12) identificador -> VARIABLE_INSTANCIA .

    EQUALS          reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    DOT             reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    ISEQUAL         reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    NOT             reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    CLASS           reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    DEF             reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    STRING          reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    BOOLEAN         reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    VARIABLE        reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    CONSTANT        reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    VARIABLE_GLOBAL reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    VARIABLE_CLASE  reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    VARIABLE_INSTANCIA reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    INTEGER         reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    FLOATINGPOINT   reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    PUTS            reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    IF              reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    WHILE           reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    FOR             reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    $end            reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    PLUS            reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    MINUS           reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    TIMS            reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    DIVIDE          reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    LESS            reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    GREATER         reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    END             reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    ELSE            reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    ELSIF           reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    RETURN          reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    IN              reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    RPAREN          reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    COMMA           reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    RBRACKET        reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)
    RBRACE          reduce using rule 12 (identificador -> VARIABLE_INSTANCIA .)


state 29

    (13) number -> INTEGER .
    (93) times -> INTEGER . DOT TIMES LBRACE expresion RBRACE
    (95) times -> INTEGER . DOT TIMES DO expresion END

    CLASS           reduce using rule 13 (number -> INTEGER .)
    DEF             reduce using rule 13 (number -> INTEGER .)
    STRING          reduce using rule 13 (number -> INTEGER .)
    BOOLEAN         reduce using rule 13 (number -> INTEGER .)
    VARIABLE        reduce using rule 13 (number -> INTEGER .)
    CONSTANT        reduce using rule 13 (number -> INTEGER .)
    VARIABLE_GLOBAL reduce using rule 13 (number -> INTEGER .)
    VARIABLE_CLASE  reduce using rule 13 (number -> INTEGER .)
    VARIABLE_INSTANCIA reduce using rule 13 (number -> INTEGER .)
    INTEGER         reduce using rule 13 (number -> INTEGER .)
    FLOATINGPOINT   reduce using rule 13 (number -> INTEGER .)
    PUTS            reduce using rule 13 (number -> INTEGER .)
    IF              reduce using rule 13 (number -> INTEGER .)
    WHILE           reduce using rule 13 (number -> INTEGER .)
    FOR             reduce using rule 13 (number -> INTEGER .)
    $end            reduce using rule 13 (number -> INTEGER .)
    PLUS            reduce using rule 13 (number -> INTEGER .)
    MINUS           reduce using rule 13 (number -> INTEGER .)
    TIMS            reduce using rule 13 (number -> INTEGER .)
    DIVIDE          reduce using rule 13 (number -> INTEGER .)
    LESS            reduce using rule 13 (number -> INTEGER .)
    GREATER         reduce using rule 13 (number -> INTEGER .)
    ISEQUAL         reduce using rule 13 (number -> INTEGER .)
    NOT             reduce using rule 13 (number -> INTEGER .)
    END             reduce using rule 13 (number -> INTEGER .)
    ELSE            reduce using rule 13 (number -> INTEGER .)
    ELSIF           reduce using rule 13 (number -> INTEGER .)
    RETURN          reduce using rule 13 (number -> INTEGER .)
    IN              reduce using rule 13 (number -> INTEGER .)
    RPAREN          reduce using rule 13 (number -> INTEGER .)
    COMMA           reduce using rule 13 (number -> INTEGER .)
    RBRACKET        reduce using rule 13 (number -> INTEGER .)
    EQUALS          reduce using rule 13 (number -> INTEGER .)
    RBRACE          reduce using rule 13 (number -> INTEGER .)
    DOT             shift and go to state 54


state 30

    (14) number -> FLOATINGPOINT .

    CLASS           reduce using rule 14 (number -> FLOATINGPOINT .)
    DEF             reduce using rule 14 (number -> FLOATINGPOINT .)
    STRING          reduce using rule 14 (number -> FLOATINGPOINT .)
    BOOLEAN         reduce using rule 14 (number -> FLOATINGPOINT .)
    VARIABLE        reduce using rule 14 (number -> FLOATINGPOINT .)
    CONSTANT        reduce using rule 14 (number -> FLOATINGPOINT .)
    VARIABLE_GLOBAL reduce using rule 14 (number -> FLOATINGPOINT .)
    VARIABLE_CLASE  reduce using rule 14 (number -> FLOATINGPOINT .)
    VARIABLE_INSTANCIA reduce using rule 14 (number -> FLOATINGPOINT .)
    INTEGER         reduce using rule 14 (number -> FLOATINGPOINT .)
    FLOATINGPOINT   reduce using rule 14 (number -> FLOATINGPOINT .)
    PUTS            reduce using rule 14 (number -> FLOATINGPOINT .)
    IF              reduce using rule 14 (number -> FLOATINGPOINT .)
    WHILE           reduce using rule 14 (number -> FLOATINGPOINT .)
    FOR             reduce using rule 14 (number -> FLOATINGPOINT .)
    $end            reduce using rule 14 (number -> FLOATINGPOINT .)
    PLUS            reduce using rule 14 (number -> FLOATINGPOINT .)
    MINUS           reduce using rule 14 (number -> FLOATINGPOINT .)
    TIMS            reduce using rule 14 (number -> FLOATINGPOINT .)
    DIVIDE          reduce using rule 14 (number -> FLOATINGPOINT .)
    LESS            reduce using rule 14 (number -> FLOATINGPOINT .)
    GREATER         reduce using rule 14 (number -> FLOATINGPOINT .)
    ISEQUAL         reduce using rule 14 (number -> FLOATINGPOINT .)
    NOT             reduce using rule 14 (number -> FLOATINGPOINT .)
    END             reduce using rule 14 (number -> FLOATINGPOINT .)
    ELSE            reduce using rule 14 (number -> FLOATINGPOINT .)
    ELSIF           reduce using rule 14 (number -> FLOATINGPOINT .)
    RETURN          reduce using rule 14 (number -> FLOATINGPOINT .)
    IN              reduce using rule 14 (number -> FLOATINGPOINT .)
    RPAREN          reduce using rule 14 (number -> FLOATINGPOINT .)
    COMMA           reduce using rule 14 (number -> FLOATINGPOINT .)
    RBRACKET        reduce using rule 14 (number -> FLOATINGPOINT .)
    EQUALS          reduce using rule 14 (number -> FLOATINGPOINT .)
    RBRACE          reduce using rule 14 (number -> FLOATINGPOINT .)
    DOT             reduce using rule 14 (number -> FLOATINGPOINT .)


state 31

    (69) expresion_condicion -> valores_cond . opNum valores_cond
    (73) expresion_condicion -> valores_cond . opIgual identificador
    (78) opNum -> . LESS
    (79) opNum -> . LESS EQUALS
    (80) opNum -> . GREATER
    (81) opNum -> . GREATER EQUALS
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

    LESS            shift and go to state 57
    GREATER         shift and go to state 58
    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

    opNum                          shift and go to state 55
    opIgual                        shift and go to state 56

state 32

    (97) expresion_matematica -> valores_mat . operador valores_mat
    (98) expresion_matematica -> valores_mat . operador expresion_matematica
    (74) valores_cond -> valores_mat .
    (101) operador -> . PLUS
    (102) operador -> . MINUS
    (103) operador -> . TIMS
    (104) operador -> . DIVIDE

    LESS            reduce using rule 74 (valores_cond -> valores_mat .)
    GREATER         reduce using rule 74 (valores_cond -> valores_mat .)
    ISEQUAL         reduce using rule 74 (valores_cond -> valores_mat .)
    NOT             reduce using rule 74 (valores_cond -> valores_mat .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMS            shift and go to state 62
    DIVIDE          shift and go to state 63

    operador                       shift and go to state 59

state 33

    (33) puts -> PUTS . expresion
    (34) puts -> PUTS . expresion_matematica
    (35) puts -> PUTS . LPAREN expresion RPAREN
    (36) puts -> PUTS . LPAREN expresion_matematica RPAREN
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING

    LPAREN          shift and go to state 66
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 64
    expresion_matematica           shift and go to state 65
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_mat                    shift and go to state 32
    valores_cond                   shift and go to state 31

state 34

    (56) condicional_if -> IF . content_if lista_codigo END
    (57) condicional_if -> IF . content_if lista_codigo else END
    (58) condicional_if -> IF . content_if lista_codigo elsif END
    (59) condicional_if -> IF . LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> IF . LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> IF . LPAREN content_if RPAREN lista_codigo elsif END
    (62) content_if -> . identificador
    (63) content_if -> . expresion_condicion
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT

    LPAREN          shift and go to state 69
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    BOOLEAN         shift and go to state 73
    STRING          shift and go to state 75
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30

    content_if                     shift and go to state 68
    identificador                  shift and go to state 70
    expresion_condicion            shift and go to state 71
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76

state 35

    (84) iteracion -> WHILE . content_if lista_codigo END
    (85) iteracion -> WHILE . LPAREN content_if RPAREN lista_codigo END
    (62) content_if -> . identificador
    (63) content_if -> . expresion_condicion
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT

    LPAREN          shift and go to state 79
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    BOOLEAN         shift and go to state 73
    STRING          shift and go to state 75
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30

    content_if                     shift and go to state 78
    identificador                  shift and go to state 70
    expresion_condicion            shift and go to state 71
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76

state 36

    (86) iteracion -> FOR . expresion IN expresion lista_codigo END
    (87) iteracion -> FOR . expresion IN rango lista_codigo END
    (88) iteracion -> FOR . LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> FOR . LPAREN expresion RPAREN IN rango lista_codigo END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    LPAREN          shift and go to state 81
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 80
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 37

    (3) programa -> clase programa .

    $end            reduce using rule 3 (programa -> clase programa .)


state 38

    (4) programa -> metodo programa .

    $end            reduce using rule 4 (programa -> metodo programa .)


state 39

    (5) programa -> lista_codigo programa .

    $end            reduce using rule 5 (programa -> lista_codigo programa .)


state 40

    (7) programa -> expresion programa .

    $end            reduce using rule 7 (programa -> expresion programa .)


state 41

    (37) clase -> CLASS CONSTANT . varias_exp varios_met END
    (38) clase -> CLASS CONSTANT . varias_exp END
    (39) clase -> CLASS CONSTANT . varios_met END
    (40) varias_exp -> . expresion
    (41) varias_exp -> . expresion varias_exp
    (42) varios_met -> . metodo
    (43) varios_met -> . metodo varios_met
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    DEF             shift and go to state 8
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    varias_exp                     shift and go to state 82
    varios_met                     shift and go to state 83
    expresion                      shift and go to state 84
    metodo                         shift and go to state 85
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 42

    (44) metodo -> DEF VARIABLE . lista_codigo END
    (45) metodo -> DEF VARIABLE . LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> DEF VARIABLE . LPAREN parametro RPAREN lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    LPAREN          shift and go to state 87
    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 86
    expresion                      shift and go to state 46
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 43

    (106) llamar_funcion -> VARIABLE DOT . LENGTH
    (107) llamar_funcion -> VARIABLE DOT . KEY
    (108) llamar_funcion -> VARIABLE DOT . FIRST
    (109) llamar_funcion -> VARIABLE DOT . LAST

    LENGTH          shift and go to state 88
    KEY             shift and go to state 89
    FIRST           shift and go to state 90
    LAST            shift and go to state 91


state 44

    (51) lista_codigo -> codigo lista_codigo .

    CLASS           reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    DEF             reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    STRING          reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    BOOLEAN         reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    VARIABLE        reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    CONSTANT        reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    VARIABLE_GLOBAL reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    VARIABLE_CLASE  reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    VARIABLE_INSTANCIA reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    INTEGER         reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    FLOATINGPOINT   reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    PUTS            reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    IF              reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    WHILE           reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    FOR             reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    END             reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    ELSE            reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    ELSIF           reduce using rule 51 (lista_codigo -> codigo lista_codigo .)
    RETURN          reduce using rule 51 (lista_codigo -> codigo lista_codigo .)


state 45

    (52) codigo -> asignacion .
    (22) expresion -> asignacion .

  ! reduce/reduce conflict for STRING resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for IF resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for WHILE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for FOR resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE_GLOBAL resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE_CLASE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for VARIABLE_INSTANCIA resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for INTEGER resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for FLOATINGPOINT resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for PUTS resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for CLASS resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for DEF resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for END resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for ELSE resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for ELSIF resolved using rule 22 (expresion -> asignacion .)
  ! reduce/reduce conflict for RETURN resolved using rule 22 (expresion -> asignacion .)
    STRING          reduce using rule 22 (expresion -> asignacion .)
    BOOLEAN         reduce using rule 22 (expresion -> asignacion .)
    IF              reduce using rule 22 (expresion -> asignacion .)
    WHILE           reduce using rule 22 (expresion -> asignacion .)
    FOR             reduce using rule 22 (expresion -> asignacion .)
    VARIABLE        reduce using rule 22 (expresion -> asignacion .)
    CONSTANT        reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_GLOBAL reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_CLASE  reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_INSTANCIA reduce using rule 22 (expresion -> asignacion .)
    INTEGER         reduce using rule 22 (expresion -> asignacion .)
    FLOATINGPOINT   reduce using rule 22 (expresion -> asignacion .)
    PUTS            reduce using rule 22 (expresion -> asignacion .)
    CLASS           reduce using rule 22 (expresion -> asignacion .)
    DEF             reduce using rule 22 (expresion -> asignacion .)
    END             reduce using rule 22 (expresion -> asignacion .)
    ELSE            reduce using rule 22 (expresion -> asignacion .)
    ELSIF           reduce using rule 22 (expresion -> asignacion .)
    RETURN          reduce using rule 22 (expresion -> asignacion .)

  ! STRING          [ reduce using rule 52 (codigo -> asignacion .) ]
  ! BOOLEAN         [ reduce using rule 52 (codigo -> asignacion .) ]
  ! IF              [ reduce using rule 52 (codigo -> asignacion .) ]
  ! WHILE           [ reduce using rule 52 (codigo -> asignacion .) ]
  ! FOR             [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE        [ reduce using rule 52 (codigo -> asignacion .) ]
  ! CONSTANT        [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE_CLASE  [ reduce using rule 52 (codigo -> asignacion .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 52 (codigo -> asignacion .) ]
  ! INTEGER         [ reduce using rule 52 (codigo -> asignacion .) ]
  ! FLOATINGPOINT   [ reduce using rule 52 (codigo -> asignacion .) ]
  ! PUTS            [ reduce using rule 52 (codigo -> asignacion .) ]
  ! CLASS           [ reduce using rule 52 (codigo -> asignacion .) ]
  ! DEF             [ reduce using rule 52 (codigo -> asignacion .) ]
  ! END             [ reduce using rule 52 (codigo -> asignacion .) ]
  ! ELSE            [ reduce using rule 52 (codigo -> asignacion .) ]
  ! ELSIF           [ reduce using rule 52 (codigo -> asignacion .) ]
  ! RETURN          [ reduce using rule 52 (codigo -> asignacion .) ]


state 46

    (53) codigo -> expresion .

    STRING          reduce using rule 53 (codigo -> expresion .)
    BOOLEAN         reduce using rule 53 (codigo -> expresion .)
    IF              reduce using rule 53 (codigo -> expresion .)
    WHILE           reduce using rule 53 (codigo -> expresion .)
    FOR             reduce using rule 53 (codigo -> expresion .)
    VARIABLE        reduce using rule 53 (codigo -> expresion .)
    CONSTANT        reduce using rule 53 (codigo -> expresion .)
    VARIABLE_GLOBAL reduce using rule 53 (codigo -> expresion .)
    VARIABLE_CLASE  reduce using rule 53 (codigo -> expresion .)
    VARIABLE_INSTANCIA reduce using rule 53 (codigo -> expresion .)
    INTEGER         reduce using rule 53 (codigo -> expresion .)
    FLOATINGPOINT   reduce using rule 53 (codigo -> expresion .)
    PUTS            reduce using rule 53 (codigo -> expresion .)
    CLASS           reduce using rule 53 (codigo -> expresion .)
    DEF             reduce using rule 53 (codigo -> expresion .)
    END             reduce using rule 53 (codigo -> expresion .)
    ELSE            reduce using rule 53 (codigo -> expresion .)
    ELSIF           reduce using rule 53 (codigo -> expresion .)
    RETURN          reduce using rule 53 (codigo -> expresion .)


state 47

    (105) asignacion -> identificador . EQUALS expresion
    (15) expresion -> identificador .
    (70) expresion_condicion -> identificador . opIgual BOOLEAN
    (72) expresion_condicion -> identificador . opIgual valores_cond
    (27) arreglo -> identificador . EQUALS LBRACKET elementos RBRACKET
    (30) hash -> identificador . EQUALS LBRACE elementos_hash RBRACE
    (94) times -> identificador . DOT TIMES LBRACE expresion RBRACE
    (96) times -> identificador . DOT TIMES DO expresion END
    (100) valores_mat -> identificador .
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    EQUALS          shift and go to state 49
    STRING          reduce using rule 15 (expresion -> identificador .)
    BOOLEAN         reduce using rule 15 (expresion -> identificador .)
    IF              reduce using rule 15 (expresion -> identificador .)
    WHILE           reduce using rule 15 (expresion -> identificador .)
    FOR             reduce using rule 15 (expresion -> identificador .)
    VARIABLE        reduce using rule 15 (expresion -> identificador .)
    CONSTANT        reduce using rule 15 (expresion -> identificador .)
    VARIABLE_GLOBAL reduce using rule 15 (expresion -> identificador .)
    VARIABLE_CLASE  reduce using rule 15 (expresion -> identificador .)
    VARIABLE_INSTANCIA reduce using rule 15 (expresion -> identificador .)
    INTEGER         reduce using rule 15 (expresion -> identificador .)
    FLOATINGPOINT   reduce using rule 15 (expresion -> identificador .)
    PUTS            reduce using rule 15 (expresion -> identificador .)
    CLASS           reduce using rule 15 (expresion -> identificador .)
    DEF             reduce using rule 15 (expresion -> identificador .)
    END             reduce using rule 15 (expresion -> identificador .)
    ELSE            reduce using rule 15 (expresion -> identificador .)
    ELSIF           reduce using rule 15 (expresion -> identificador .)
    RETURN          reduce using rule 15 (expresion -> identificador .)
    DOT             shift and go to state 50
    PLUS            reduce using rule 100 (valores_mat -> identificador .)
    MINUS           reduce using rule 100 (valores_mat -> identificador .)
    TIMS            reduce using rule 100 (valores_mat -> identificador .)
    DIVIDE          reduce using rule 100 (valores_mat -> identificador .)
    LESS            reduce using rule 100 (valores_mat -> identificador .)
    GREATER         reduce using rule 100 (valores_mat -> identificador .)
    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

  ! ISEQUAL         [ reduce using rule 100 (valores_mat -> identificador .) ]
  ! NOT             [ reduce using rule 100 (valores_mat -> identificador .) ]

    opIgual                        shift and go to state 48

state 48

    (70) expresion_condicion -> identificador opIgual . BOOLEAN
    (72) expresion_condicion -> identificador opIgual . valores_cond
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    BOOLEAN         shift and go to state 93
    STRING          shift and go to state 75
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    identificador                  shift and go to state 92
    valores_cond                   shift and go to state 94
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76

state 49

    (105) asignacion -> identificador EQUALS . expresion
    (27) arreglo -> identificador EQUALS . LBRACKET elementos RBRACKET
    (30) hash -> identificador EQUALS . LBRACE elementos_hash RBRACE
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    LBRACKET        shift and go to state 96
    LBRACE          shift and go to state 97
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    identificador                  shift and go to state 12
    expresion                      shift and go to state 95
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 50

    (94) times -> identificador DOT . TIMES LBRACE expresion RBRACE
    (96) times -> identificador DOT . TIMES DO expresion END

    TIMES           shift and go to state 98


state 51

    (82) opIgual -> ISEQUAL .

    BOOLEAN         reduce using rule 82 (opIgual -> ISEQUAL .)
    STRING          reduce using rule 82 (opIgual -> ISEQUAL .)
    INTEGER         reduce using rule 82 (opIgual -> ISEQUAL .)
    FLOATINGPOINT   reduce using rule 82 (opIgual -> ISEQUAL .)
    VARIABLE        reduce using rule 82 (opIgual -> ISEQUAL .)
    CONSTANT        reduce using rule 82 (opIgual -> ISEQUAL .)
    VARIABLE_GLOBAL reduce using rule 82 (opIgual -> ISEQUAL .)
    VARIABLE_CLASE  reduce using rule 82 (opIgual -> ISEQUAL .)
    VARIABLE_INSTANCIA reduce using rule 82 (opIgual -> ISEQUAL .)


state 52

    (83) opIgual -> NOT . EQUALS

    EQUALS          shift and go to state 99


state 53

    (71) expresion_condicion -> BOOLEAN opIgual . identificador
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    identificador                  shift and go to state 100

state 54

    (93) times -> INTEGER DOT . TIMES LBRACE expresion RBRACE
    (95) times -> INTEGER DOT . TIMES DO expresion END

    TIMES           shift and go to state 101


state 55

    (69) expresion_condicion -> valores_cond opNum . valores_cond
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    STRING          shift and go to state 75
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    valores_cond                   shift and go to state 102
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76
    identificador                  shift and go to state 92

state 56

    (73) expresion_condicion -> valores_cond opIgual . identificador
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    identificador                  shift and go to state 103

state 57

    (78) opNum -> LESS .
    (79) opNum -> LESS . EQUALS

    STRING          reduce using rule 78 (opNum -> LESS .)
    INTEGER         reduce using rule 78 (opNum -> LESS .)
    FLOATINGPOINT   reduce using rule 78 (opNum -> LESS .)
    VARIABLE        reduce using rule 78 (opNum -> LESS .)
    CONSTANT        reduce using rule 78 (opNum -> LESS .)
    VARIABLE_GLOBAL reduce using rule 78 (opNum -> LESS .)
    VARIABLE_CLASE  reduce using rule 78 (opNum -> LESS .)
    VARIABLE_INSTANCIA reduce using rule 78 (opNum -> LESS .)
    EQUALS          shift and go to state 104


state 58

    (80) opNum -> GREATER .
    (81) opNum -> GREATER . EQUALS

    STRING          reduce using rule 80 (opNum -> GREATER .)
    INTEGER         reduce using rule 80 (opNum -> GREATER .)
    FLOATINGPOINT   reduce using rule 80 (opNum -> GREATER .)
    VARIABLE        reduce using rule 80 (opNum -> GREATER .)
    CONSTANT        reduce using rule 80 (opNum -> GREATER .)
    VARIABLE_GLOBAL reduce using rule 80 (opNum -> GREATER .)
    VARIABLE_CLASE  reduce using rule 80 (opNum -> GREATER .)
    VARIABLE_INSTANCIA reduce using rule 80 (opNum -> GREATER .)
    EQUALS          shift and go to state 105


state 59

    (97) expresion_matematica -> valores_mat operador . valores_mat
    (98) expresion_matematica -> valores_mat operador . expresion_matematica
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    valores_mat                    shift and go to state 106
    expresion_matematica           shift and go to state 107
    number                         shift and go to state 76
    identificador                  shift and go to state 92

state 60

    (101) operador -> PLUS .

    INTEGER         reduce using rule 101 (operador -> PLUS .)
    FLOATINGPOINT   reduce using rule 101 (operador -> PLUS .)
    VARIABLE        reduce using rule 101 (operador -> PLUS .)
    CONSTANT        reduce using rule 101 (operador -> PLUS .)
    VARIABLE_GLOBAL reduce using rule 101 (operador -> PLUS .)
    VARIABLE_CLASE  reduce using rule 101 (operador -> PLUS .)
    VARIABLE_INSTANCIA reduce using rule 101 (operador -> PLUS .)


state 61

    (102) operador -> MINUS .

    INTEGER         reduce using rule 102 (operador -> MINUS .)
    FLOATINGPOINT   reduce using rule 102 (operador -> MINUS .)
    VARIABLE        reduce using rule 102 (operador -> MINUS .)
    CONSTANT        reduce using rule 102 (operador -> MINUS .)
    VARIABLE_GLOBAL reduce using rule 102 (operador -> MINUS .)
    VARIABLE_CLASE  reduce using rule 102 (operador -> MINUS .)
    VARIABLE_INSTANCIA reduce using rule 102 (operador -> MINUS .)


state 62

    (103) operador -> TIMS .

    INTEGER         reduce using rule 103 (operador -> TIMS .)
    FLOATINGPOINT   reduce using rule 103 (operador -> TIMS .)
    VARIABLE        reduce using rule 103 (operador -> TIMS .)
    CONSTANT        reduce using rule 103 (operador -> TIMS .)
    VARIABLE_GLOBAL reduce using rule 103 (operador -> TIMS .)
    VARIABLE_CLASE  reduce using rule 103 (operador -> TIMS .)
    VARIABLE_INSTANCIA reduce using rule 103 (operador -> TIMS .)


state 63

    (104) operador -> DIVIDE .

    INTEGER         reduce using rule 104 (operador -> DIVIDE .)
    FLOATINGPOINT   reduce using rule 104 (operador -> DIVIDE .)
    VARIABLE        reduce using rule 104 (operador -> DIVIDE .)
    CONSTANT        reduce using rule 104 (operador -> DIVIDE .)
    VARIABLE_GLOBAL reduce using rule 104 (operador -> DIVIDE .)
    VARIABLE_CLASE  reduce using rule 104 (operador -> DIVIDE .)
    VARIABLE_INSTANCIA reduce using rule 104 (operador -> DIVIDE .)


state 64

    (33) puts -> PUTS expresion .

    CLASS           reduce using rule 33 (puts -> PUTS expresion .)
    DEF             reduce using rule 33 (puts -> PUTS expresion .)
    STRING          reduce using rule 33 (puts -> PUTS expresion .)
    BOOLEAN         reduce using rule 33 (puts -> PUTS expresion .)
    VARIABLE        reduce using rule 33 (puts -> PUTS expresion .)
    CONSTANT        reduce using rule 33 (puts -> PUTS expresion .)
    VARIABLE_GLOBAL reduce using rule 33 (puts -> PUTS expresion .)
    VARIABLE_CLASE  reduce using rule 33 (puts -> PUTS expresion .)
    VARIABLE_INSTANCIA reduce using rule 33 (puts -> PUTS expresion .)
    INTEGER         reduce using rule 33 (puts -> PUTS expresion .)
    FLOATINGPOINT   reduce using rule 33 (puts -> PUTS expresion .)
    PUTS            reduce using rule 33 (puts -> PUTS expresion .)
    IF              reduce using rule 33 (puts -> PUTS expresion .)
    WHILE           reduce using rule 33 (puts -> PUTS expresion .)
    FOR             reduce using rule 33 (puts -> PUTS expresion .)
    $end            reduce using rule 33 (puts -> PUTS expresion .)
    END             reduce using rule 33 (puts -> PUTS expresion .)
    ELSE            reduce using rule 33 (puts -> PUTS expresion .)
    ELSIF           reduce using rule 33 (puts -> PUTS expresion .)
    RETURN          reduce using rule 33 (puts -> PUTS expresion .)
    IN              reduce using rule 33 (puts -> PUTS expresion .)
    RPAREN          reduce using rule 33 (puts -> PUTS expresion .)
    COMMA           reduce using rule 33 (puts -> PUTS expresion .)
    RBRACKET        reduce using rule 33 (puts -> PUTS expresion .)
    EQUALS          reduce using rule 33 (puts -> PUTS expresion .)
    RBRACE          reduce using rule 33 (puts -> PUTS expresion .)


state 65

    (34) puts -> PUTS expresion_matematica .
    (20) expresion -> expresion_matematica .

  ! reduce/reduce conflict for CLASS resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for DEF resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for STRING resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for BOOLEAN resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for CONSTANT resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for VARIABLE_GLOBAL resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for VARIABLE_CLASE resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for VARIABLE_INSTANCIA resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for INTEGER resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for FLOATINGPOINT resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for PUTS resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for IF resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for WHILE resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for FOR resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for $end resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for END resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for ELSE resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for ELSIF resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for RETURN resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for IN resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for RPAREN resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for COMMA resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for RBRACKET resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for EQUALS resolved using rule 20 (expresion -> expresion_matematica .)
  ! reduce/reduce conflict for RBRACE resolved using rule 20 (expresion -> expresion_matematica .)
    CLASS           reduce using rule 20 (expresion -> expresion_matematica .)
    DEF             reduce using rule 20 (expresion -> expresion_matematica .)
    STRING          reduce using rule 20 (expresion -> expresion_matematica .)
    BOOLEAN         reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE        reduce using rule 20 (expresion -> expresion_matematica .)
    CONSTANT        reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE_GLOBAL reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE_CLASE  reduce using rule 20 (expresion -> expresion_matematica .)
    VARIABLE_INSTANCIA reduce using rule 20 (expresion -> expresion_matematica .)
    INTEGER         reduce using rule 20 (expresion -> expresion_matematica .)
    FLOATINGPOINT   reduce using rule 20 (expresion -> expresion_matematica .)
    PUTS            reduce using rule 20 (expresion -> expresion_matematica .)
    IF              reduce using rule 20 (expresion -> expresion_matematica .)
    WHILE           reduce using rule 20 (expresion -> expresion_matematica .)
    FOR             reduce using rule 20 (expresion -> expresion_matematica .)
    $end            reduce using rule 20 (expresion -> expresion_matematica .)
    END             reduce using rule 20 (expresion -> expresion_matematica .)
    ELSE            reduce using rule 20 (expresion -> expresion_matematica .)
    ELSIF           reduce using rule 20 (expresion -> expresion_matematica .)
    RETURN          reduce using rule 20 (expresion -> expresion_matematica .)
    IN              reduce using rule 20 (expresion -> expresion_matematica .)
    RPAREN          reduce using rule 20 (expresion -> expresion_matematica .)
    COMMA           reduce using rule 20 (expresion -> expresion_matematica .)
    RBRACKET        reduce using rule 20 (expresion -> expresion_matematica .)
    EQUALS          reduce using rule 20 (expresion -> expresion_matematica .)
    RBRACE          reduce using rule 20 (expresion -> expresion_matematica .)

  ! CLASS           [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! DEF             [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! STRING          [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! BOOLEAN         [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! VARIABLE        [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! CONSTANT        [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! VARIABLE_GLOBAL [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! VARIABLE_CLASE  [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! VARIABLE_INSTANCIA [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! INTEGER         [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! FLOATINGPOINT   [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! PUTS            [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! IF              [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! WHILE           [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! FOR             [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! $end            [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! END             [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! ELSE            [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! ELSIF           [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! RETURN          [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! IN              [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! RPAREN          [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! COMMA           [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! RBRACKET        [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! EQUALS          [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]
  ! RBRACE          [ reduce using rule 34 (puts -> PUTS expresion_matematica .) ]


state 66

    (35) puts -> PUTS LPAREN . expresion RPAREN
    (36) puts -> PUTS LPAREN . expresion_matematica RPAREN
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 108
    expresion_matematica           shift and go to state 109
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_mat                    shift and go to state 32
    valores_cond                   shift and go to state 31

state 67

    (22) expresion -> asignacion .

    CLASS           reduce using rule 22 (expresion -> asignacion .)
    DEF             reduce using rule 22 (expresion -> asignacion .)
    STRING          reduce using rule 22 (expresion -> asignacion .)
    BOOLEAN         reduce using rule 22 (expresion -> asignacion .)
    VARIABLE        reduce using rule 22 (expresion -> asignacion .)
    CONSTANT        reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_GLOBAL reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_CLASE  reduce using rule 22 (expresion -> asignacion .)
    VARIABLE_INSTANCIA reduce using rule 22 (expresion -> asignacion .)
    INTEGER         reduce using rule 22 (expresion -> asignacion .)
    FLOATINGPOINT   reduce using rule 22 (expresion -> asignacion .)
    PUTS            reduce using rule 22 (expresion -> asignacion .)
    IF              reduce using rule 22 (expresion -> asignacion .)
    WHILE           reduce using rule 22 (expresion -> asignacion .)
    FOR             reduce using rule 22 (expresion -> asignacion .)
    $end            reduce using rule 22 (expresion -> asignacion .)
    END             reduce using rule 22 (expresion -> asignacion .)
    ELSE            reduce using rule 22 (expresion -> asignacion .)
    ELSIF           reduce using rule 22 (expresion -> asignacion .)
    RETURN          reduce using rule 22 (expresion -> asignacion .)
    IN              reduce using rule 22 (expresion -> asignacion .)
    RPAREN          reduce using rule 22 (expresion -> asignacion .)
    COMMA           reduce using rule 22 (expresion -> asignacion .)
    RBRACKET        reduce using rule 22 (expresion -> asignacion .)
    EQUALS          reduce using rule 22 (expresion -> asignacion .)
    RBRACE          reduce using rule 22 (expresion -> asignacion .)


state 68

    (56) condicional_if -> IF content_if . lista_codigo END
    (57) condicional_if -> IF content_if . lista_codigo else END
    (58) condicional_if -> IF content_if . lista_codigo elsif END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    ELSE            reduce using rule 110 (vacio -> .)
    ELSIF           reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 110
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 69

    (59) condicional_if -> IF LPAREN . content_if RPAREN lista_codigo END
    (60) condicional_if -> IF LPAREN . content_if RPAREN lista_codigo else END
    (61) condicional_if -> IF LPAREN . content_if RPAREN lista_codigo elsif END
    (62) content_if -> . identificador
    (63) content_if -> . expresion_condicion
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT

    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    BOOLEAN         shift and go to state 73
    STRING          shift and go to state 75
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30

    content_if                     shift and go to state 111
    identificador                  shift and go to state 70
    expresion_condicion            shift and go to state 71
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76

state 70

    (62) content_if -> identificador .
    (70) expresion_condicion -> identificador . opIgual BOOLEAN
    (72) expresion_condicion -> identificador . opIgual valores_cond
    (100) valores_mat -> identificador .
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    STRING          reduce using rule 62 (content_if -> identificador .)
    BOOLEAN         reduce using rule 62 (content_if -> identificador .)
    IF              reduce using rule 62 (content_if -> identificador .)
    WHILE           reduce using rule 62 (content_if -> identificador .)
    FOR             reduce using rule 62 (content_if -> identificador .)
    VARIABLE        reduce using rule 62 (content_if -> identificador .)
    CONSTANT        reduce using rule 62 (content_if -> identificador .)
    VARIABLE_GLOBAL reduce using rule 62 (content_if -> identificador .)
    VARIABLE_CLASE  reduce using rule 62 (content_if -> identificador .)
    VARIABLE_INSTANCIA reduce using rule 62 (content_if -> identificador .)
    INTEGER         reduce using rule 62 (content_if -> identificador .)
    FLOATINGPOINT   reduce using rule 62 (content_if -> identificador .)
    PUTS            reduce using rule 62 (content_if -> identificador .)
    END             reduce using rule 62 (content_if -> identificador .)
    ELSE            reduce using rule 62 (content_if -> identificador .)
    ELSIF           reduce using rule 62 (content_if -> identificador .)
    RPAREN          reduce using rule 62 (content_if -> identificador .)
    LESS            reduce using rule 100 (valores_mat -> identificador .)
    GREATER         reduce using rule 100 (valores_mat -> identificador .)
    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

  ! ISEQUAL         [ reduce using rule 100 (valores_mat -> identificador .) ]
  ! NOT             [ reduce using rule 100 (valores_mat -> identificador .) ]

    opIgual                        shift and go to state 48

state 71

    (63) content_if -> expresion_condicion .

    STRING          reduce using rule 63 (content_if -> expresion_condicion .)
    BOOLEAN         reduce using rule 63 (content_if -> expresion_condicion .)
    IF              reduce using rule 63 (content_if -> expresion_condicion .)
    WHILE           reduce using rule 63 (content_if -> expresion_condicion .)
    FOR             reduce using rule 63 (content_if -> expresion_condicion .)
    VARIABLE        reduce using rule 63 (content_if -> expresion_condicion .)
    CONSTANT        reduce using rule 63 (content_if -> expresion_condicion .)
    VARIABLE_GLOBAL reduce using rule 63 (content_if -> expresion_condicion .)
    VARIABLE_CLASE  reduce using rule 63 (content_if -> expresion_condicion .)
    VARIABLE_INSTANCIA reduce using rule 63 (content_if -> expresion_condicion .)
    INTEGER         reduce using rule 63 (content_if -> expresion_condicion .)
    FLOATINGPOINT   reduce using rule 63 (content_if -> expresion_condicion .)
    PUTS            reduce using rule 63 (content_if -> expresion_condicion .)
    END             reduce using rule 63 (content_if -> expresion_condicion .)
    ELSE            reduce using rule 63 (content_if -> expresion_condicion .)
    ELSIF           reduce using rule 63 (content_if -> expresion_condicion .)
    RPAREN          reduce using rule 63 (content_if -> expresion_condicion .)


state 72

    (8) identificador -> VARIABLE .

    ISEQUAL         reduce using rule 8 (identificador -> VARIABLE .)
    NOT             reduce using rule 8 (identificador -> VARIABLE .)
    STRING          reduce using rule 8 (identificador -> VARIABLE .)
    BOOLEAN         reduce using rule 8 (identificador -> VARIABLE .)
    IF              reduce using rule 8 (identificador -> VARIABLE .)
    WHILE           reduce using rule 8 (identificador -> VARIABLE .)
    FOR             reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE        reduce using rule 8 (identificador -> VARIABLE .)
    CONSTANT        reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE_GLOBAL reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE_CLASE  reduce using rule 8 (identificador -> VARIABLE .)
    VARIABLE_INSTANCIA reduce using rule 8 (identificador -> VARIABLE .)
    INTEGER         reduce using rule 8 (identificador -> VARIABLE .)
    FLOATINGPOINT   reduce using rule 8 (identificador -> VARIABLE .)
    PUTS            reduce using rule 8 (identificador -> VARIABLE .)
    END             reduce using rule 8 (identificador -> VARIABLE .)
    ELSE            reduce using rule 8 (identificador -> VARIABLE .)
    ELSIF           reduce using rule 8 (identificador -> VARIABLE .)
    LESS            reduce using rule 8 (identificador -> VARIABLE .)
    GREATER         reduce using rule 8 (identificador -> VARIABLE .)
    CLASS           reduce using rule 8 (identificador -> VARIABLE .)
    DEF             reduce using rule 8 (identificador -> VARIABLE .)
    $end            reduce using rule 8 (identificador -> VARIABLE .)
    RETURN          reduce using rule 8 (identificador -> VARIABLE .)
    IN              reduce using rule 8 (identificador -> VARIABLE .)
    RPAREN          reduce using rule 8 (identificador -> VARIABLE .)
    COMMA           reduce using rule 8 (identificador -> VARIABLE .)
    RBRACKET        reduce using rule 8 (identificador -> VARIABLE .)
    EQUALS          reduce using rule 8 (identificador -> VARIABLE .)
    RBRACE          reduce using rule 8 (identificador -> VARIABLE .)
    PLUS            reduce using rule 8 (identificador -> VARIABLE .)
    MINUS           reduce using rule 8 (identificador -> VARIABLE .)
    TIMS            reduce using rule 8 (identificador -> VARIABLE .)
    DIVIDE          reduce using rule 8 (identificador -> VARIABLE .)
    DOT             reduce using rule 8 (identificador -> VARIABLE .)


state 73

    (71) expresion_condicion -> BOOLEAN . opIgual identificador
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

    opIgual                        shift and go to state 53

state 74

    (74) valores_cond -> valores_mat .

    LESS            reduce using rule 74 (valores_cond -> valores_mat .)
    GREATER         reduce using rule 74 (valores_cond -> valores_mat .)
    ISEQUAL         reduce using rule 74 (valores_cond -> valores_mat .)
    NOT             reduce using rule 74 (valores_cond -> valores_mat .)
    CLASS           reduce using rule 74 (valores_cond -> valores_mat .)
    DEF             reduce using rule 74 (valores_cond -> valores_mat .)
    STRING          reduce using rule 74 (valores_cond -> valores_mat .)
    BOOLEAN         reduce using rule 74 (valores_cond -> valores_mat .)
    VARIABLE        reduce using rule 74 (valores_cond -> valores_mat .)
    CONSTANT        reduce using rule 74 (valores_cond -> valores_mat .)
    VARIABLE_GLOBAL reduce using rule 74 (valores_cond -> valores_mat .)
    VARIABLE_CLASE  reduce using rule 74 (valores_cond -> valores_mat .)
    VARIABLE_INSTANCIA reduce using rule 74 (valores_cond -> valores_mat .)
    INTEGER         reduce using rule 74 (valores_cond -> valores_mat .)
    FLOATINGPOINT   reduce using rule 74 (valores_cond -> valores_mat .)
    PUTS            reduce using rule 74 (valores_cond -> valores_mat .)
    IF              reduce using rule 74 (valores_cond -> valores_mat .)
    WHILE           reduce using rule 74 (valores_cond -> valores_mat .)
    FOR             reduce using rule 74 (valores_cond -> valores_mat .)
    $end            reduce using rule 74 (valores_cond -> valores_mat .)
    END             reduce using rule 74 (valores_cond -> valores_mat .)
    ELSE            reduce using rule 74 (valores_cond -> valores_mat .)
    ELSIF           reduce using rule 74 (valores_cond -> valores_mat .)
    RETURN          reduce using rule 74 (valores_cond -> valores_mat .)
    IN              reduce using rule 74 (valores_cond -> valores_mat .)
    RPAREN          reduce using rule 74 (valores_cond -> valores_mat .)
    COMMA           reduce using rule 74 (valores_cond -> valores_mat .)
    RBRACKET        reduce using rule 74 (valores_cond -> valores_mat .)
    EQUALS          reduce using rule 74 (valores_cond -> valores_mat .)
    RBRACE          reduce using rule 74 (valores_cond -> valores_mat .)


state 75

    (75) valores_cond -> STRING .

    LESS            reduce using rule 75 (valores_cond -> STRING .)
    GREATER         reduce using rule 75 (valores_cond -> STRING .)
    ISEQUAL         reduce using rule 75 (valores_cond -> STRING .)
    NOT             reduce using rule 75 (valores_cond -> STRING .)
    CLASS           reduce using rule 75 (valores_cond -> STRING .)
    DEF             reduce using rule 75 (valores_cond -> STRING .)
    STRING          reduce using rule 75 (valores_cond -> STRING .)
    BOOLEAN         reduce using rule 75 (valores_cond -> STRING .)
    VARIABLE        reduce using rule 75 (valores_cond -> STRING .)
    CONSTANT        reduce using rule 75 (valores_cond -> STRING .)
    VARIABLE_GLOBAL reduce using rule 75 (valores_cond -> STRING .)
    VARIABLE_CLASE  reduce using rule 75 (valores_cond -> STRING .)
    VARIABLE_INSTANCIA reduce using rule 75 (valores_cond -> STRING .)
    INTEGER         reduce using rule 75 (valores_cond -> STRING .)
    FLOATINGPOINT   reduce using rule 75 (valores_cond -> STRING .)
    PUTS            reduce using rule 75 (valores_cond -> STRING .)
    IF              reduce using rule 75 (valores_cond -> STRING .)
    WHILE           reduce using rule 75 (valores_cond -> STRING .)
    FOR             reduce using rule 75 (valores_cond -> STRING .)
    $end            reduce using rule 75 (valores_cond -> STRING .)
    END             reduce using rule 75 (valores_cond -> STRING .)
    ELSE            reduce using rule 75 (valores_cond -> STRING .)
    ELSIF           reduce using rule 75 (valores_cond -> STRING .)
    RETURN          reduce using rule 75 (valores_cond -> STRING .)
    IN              reduce using rule 75 (valores_cond -> STRING .)
    RPAREN          reduce using rule 75 (valores_cond -> STRING .)
    COMMA           reduce using rule 75 (valores_cond -> STRING .)
    RBRACKET        reduce using rule 75 (valores_cond -> STRING .)
    EQUALS          reduce using rule 75 (valores_cond -> STRING .)
    RBRACE          reduce using rule 75 (valores_cond -> STRING .)


state 76

    (99) valores_mat -> number .

    LESS            reduce using rule 99 (valores_mat -> number .)
    GREATER         reduce using rule 99 (valores_mat -> number .)
    ISEQUAL         reduce using rule 99 (valores_mat -> number .)
    NOT             reduce using rule 99 (valores_mat -> number .)
    CLASS           reduce using rule 99 (valores_mat -> number .)
    DEF             reduce using rule 99 (valores_mat -> number .)
    STRING          reduce using rule 99 (valores_mat -> number .)
    BOOLEAN         reduce using rule 99 (valores_mat -> number .)
    VARIABLE        reduce using rule 99 (valores_mat -> number .)
    CONSTANT        reduce using rule 99 (valores_mat -> number .)
    VARIABLE_GLOBAL reduce using rule 99 (valores_mat -> number .)
    VARIABLE_CLASE  reduce using rule 99 (valores_mat -> number .)
    VARIABLE_INSTANCIA reduce using rule 99 (valores_mat -> number .)
    INTEGER         reduce using rule 99 (valores_mat -> number .)
    FLOATINGPOINT   reduce using rule 99 (valores_mat -> number .)
    PUTS            reduce using rule 99 (valores_mat -> number .)
    IF              reduce using rule 99 (valores_mat -> number .)
    WHILE           reduce using rule 99 (valores_mat -> number .)
    FOR             reduce using rule 99 (valores_mat -> number .)
    $end            reduce using rule 99 (valores_mat -> number .)
    END             reduce using rule 99 (valores_mat -> number .)
    ELSE            reduce using rule 99 (valores_mat -> number .)
    ELSIF           reduce using rule 99 (valores_mat -> number .)
    RETURN          reduce using rule 99 (valores_mat -> number .)
    IN              reduce using rule 99 (valores_mat -> number .)
    RPAREN          reduce using rule 99 (valores_mat -> number .)
    COMMA           reduce using rule 99 (valores_mat -> number .)
    RBRACKET        reduce using rule 99 (valores_mat -> number .)
    EQUALS          reduce using rule 99 (valores_mat -> number .)
    RBRACE          reduce using rule 99 (valores_mat -> number .)
    PLUS            reduce using rule 99 (valores_mat -> number .)
    MINUS           reduce using rule 99 (valores_mat -> number .)
    TIMS            reduce using rule 99 (valores_mat -> number .)
    DIVIDE          reduce using rule 99 (valores_mat -> number .)
    DOT             reduce using rule 99 (valores_mat -> number .)


state 77

    (13) number -> INTEGER .

    LESS            reduce using rule 13 (number -> INTEGER .)
    GREATER         reduce using rule 13 (number -> INTEGER .)
    ISEQUAL         reduce using rule 13 (number -> INTEGER .)
    NOT             reduce using rule 13 (number -> INTEGER .)
    CLASS           reduce using rule 13 (number -> INTEGER .)
    DEF             reduce using rule 13 (number -> INTEGER .)
    STRING          reduce using rule 13 (number -> INTEGER .)
    BOOLEAN         reduce using rule 13 (number -> INTEGER .)
    VARIABLE        reduce using rule 13 (number -> INTEGER .)
    CONSTANT        reduce using rule 13 (number -> INTEGER .)
    VARIABLE_GLOBAL reduce using rule 13 (number -> INTEGER .)
    VARIABLE_CLASE  reduce using rule 13 (number -> INTEGER .)
    VARIABLE_INSTANCIA reduce using rule 13 (number -> INTEGER .)
    INTEGER         reduce using rule 13 (number -> INTEGER .)
    FLOATINGPOINT   reduce using rule 13 (number -> INTEGER .)
    PUTS            reduce using rule 13 (number -> INTEGER .)
    IF              reduce using rule 13 (number -> INTEGER .)
    WHILE           reduce using rule 13 (number -> INTEGER .)
    FOR             reduce using rule 13 (number -> INTEGER .)
    $end            reduce using rule 13 (number -> INTEGER .)
    END             reduce using rule 13 (number -> INTEGER .)
    ELSE            reduce using rule 13 (number -> INTEGER .)
    ELSIF           reduce using rule 13 (number -> INTEGER .)
    RETURN          reduce using rule 13 (number -> INTEGER .)
    IN              reduce using rule 13 (number -> INTEGER .)
    RPAREN          reduce using rule 13 (number -> INTEGER .)
    COMMA           reduce using rule 13 (number -> INTEGER .)
    RBRACKET        reduce using rule 13 (number -> INTEGER .)
    EQUALS          reduce using rule 13 (number -> INTEGER .)
    RBRACE          reduce using rule 13 (number -> INTEGER .)
    PLUS            reduce using rule 13 (number -> INTEGER .)
    MINUS           reduce using rule 13 (number -> INTEGER .)
    TIMS            reduce using rule 13 (number -> INTEGER .)
    DIVIDE          reduce using rule 13 (number -> INTEGER .)
    DOT             reduce using rule 13 (number -> INTEGER .)


state 78

    (84) iteracion -> WHILE content_if . lista_codigo END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 112
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 79

    (85) iteracion -> WHILE LPAREN . content_if RPAREN lista_codigo END
    (62) content_if -> . identificador
    (63) content_if -> . expresion_condicion
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT

    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    BOOLEAN         shift and go to state 73
    STRING          shift and go to state 75
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30

    content_if                     shift and go to state 113
    identificador                  shift and go to state 70
    expresion_condicion            shift and go to state 71
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76

state 80

    (86) iteracion -> FOR expresion . IN expresion lista_codigo END
    (87) iteracion -> FOR expresion . IN rango lista_codigo END

    IN              shift and go to state 114


state 81

    (88) iteracion -> FOR LPAREN . expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> FOR LPAREN . expresion RPAREN IN rango lista_codigo END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 115
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 82

    (37) clase -> CLASS CONSTANT varias_exp . varios_met END
    (38) clase -> CLASS CONSTANT varias_exp . END
    (42) varios_met -> . metodo
    (43) varios_met -> . metodo varios_met
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END

    END             shift and go to state 117
    DEF             shift and go to state 8

    varios_met                     shift and go to state 116
    metodo                         shift and go to state 85

state 83

    (39) clase -> CLASS CONSTANT varios_met . END

    END             shift and go to state 118


state 84

    (40) varias_exp -> expresion .
    (41) varias_exp -> expresion . varias_exp
    (40) varias_exp -> . expresion
    (41) varias_exp -> . expresion varias_exp
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 40 (varias_exp -> expresion .)
    DEF             reduce using rule 40 (varias_exp -> expresion .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 84
    varias_exp                     shift and go to state 119
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 85

    (42) varios_met -> metodo .
    (43) varios_met -> metodo . varios_met
    (42) varios_met -> . metodo
    (43) varios_met -> . metodo varios_met
    (44) metodo -> . DEF VARIABLE lista_codigo END
    (45) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo END
    (46) metodo -> . DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END

    END             reduce using rule 42 (varios_met -> metodo .)
    DEF             shift and go to state 8

    metodo                         shift and go to state 85
    varios_met                     shift and go to state 120

state 86

    (44) metodo -> DEF VARIABLE lista_codigo . END

    END             shift and go to state 121


state 87

    (45) metodo -> DEF VARIABLE LPAREN . parametro RPAREN lista_codigo END
    (46) metodo -> DEF VARIABLE LPAREN . parametro RPAREN lista_codigo RETURN expresion END
    (47) parametro -> . VARIABLE
    (48) parametro -> . VARIABLE COMMA parametro

    VARIABLE        shift and go to state 122

    parametro                      shift and go to state 123

state 88

    (106) llamar_funcion -> VARIABLE DOT LENGTH .

    CLASS           reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    DEF             reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    STRING          reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    BOOLEAN         reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    VARIABLE        reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    CONSTANT        reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    VARIABLE_GLOBAL reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    VARIABLE_CLASE  reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    VARIABLE_INSTANCIA reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    INTEGER         reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    FLOATINGPOINT   reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    PUTS            reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    IF              reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    WHILE           reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    FOR             reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    $end            reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    END             reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    ELSE            reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    ELSIF           reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    RETURN          reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    IN              reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    RPAREN          reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    COMMA           reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    RBRACKET        reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    EQUALS          reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)
    RBRACE          reduce using rule 106 (llamar_funcion -> VARIABLE DOT LENGTH .)


state 89

    (107) llamar_funcion -> VARIABLE DOT KEY .

    CLASS           reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    DEF             reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    STRING          reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    BOOLEAN         reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    VARIABLE        reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    CONSTANT        reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    VARIABLE_GLOBAL reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    VARIABLE_CLASE  reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    VARIABLE_INSTANCIA reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    INTEGER         reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    FLOATINGPOINT   reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    PUTS            reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    IF              reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    WHILE           reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    FOR             reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    $end            reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    END             reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    ELSE            reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    ELSIF           reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    RETURN          reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    IN              reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    RPAREN          reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    COMMA           reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    RBRACKET        reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    EQUALS          reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)
    RBRACE          reduce using rule 107 (llamar_funcion -> VARIABLE DOT KEY .)


state 90

    (108) llamar_funcion -> VARIABLE DOT FIRST .

    CLASS           reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    DEF             reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    STRING          reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    BOOLEAN         reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    VARIABLE        reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    CONSTANT        reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    VARIABLE_GLOBAL reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    VARIABLE_CLASE  reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    VARIABLE_INSTANCIA reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    INTEGER         reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    FLOATINGPOINT   reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    PUTS            reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    IF              reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    WHILE           reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    FOR             reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    $end            reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    END             reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    ELSE            reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    ELSIF           reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    RETURN          reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    IN              reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    RPAREN          reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    COMMA           reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    RBRACKET        reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    EQUALS          reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)
    RBRACE          reduce using rule 108 (llamar_funcion -> VARIABLE DOT FIRST .)


state 91

    (109) llamar_funcion -> VARIABLE DOT LAST .

    CLASS           reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    DEF             reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    STRING          reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    BOOLEAN         reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    VARIABLE        reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    CONSTANT        reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    VARIABLE_GLOBAL reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    VARIABLE_CLASE  reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    VARIABLE_INSTANCIA reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    INTEGER         reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    FLOATINGPOINT   reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    PUTS            reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    IF              reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    WHILE           reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    FOR             reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    $end            reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    END             reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    ELSE            reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    ELSIF           reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    RETURN          reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    IN              reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    RPAREN          reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    COMMA           reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    RBRACKET        reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    EQUALS          reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)
    RBRACE          reduce using rule 109 (llamar_funcion -> VARIABLE DOT LAST .)


state 92

    (100) valores_mat -> identificador .

    CLASS           reduce using rule 100 (valores_mat -> identificador .)
    DEF             reduce using rule 100 (valores_mat -> identificador .)
    STRING          reduce using rule 100 (valores_mat -> identificador .)
    BOOLEAN         reduce using rule 100 (valores_mat -> identificador .)
    VARIABLE        reduce using rule 100 (valores_mat -> identificador .)
    CONSTANT        reduce using rule 100 (valores_mat -> identificador .)
    VARIABLE_GLOBAL reduce using rule 100 (valores_mat -> identificador .)
    VARIABLE_CLASE  reduce using rule 100 (valores_mat -> identificador .)
    VARIABLE_INSTANCIA reduce using rule 100 (valores_mat -> identificador .)
    INTEGER         reduce using rule 100 (valores_mat -> identificador .)
    FLOATINGPOINT   reduce using rule 100 (valores_mat -> identificador .)
    PUTS            reduce using rule 100 (valores_mat -> identificador .)
    IF              reduce using rule 100 (valores_mat -> identificador .)
    WHILE           reduce using rule 100 (valores_mat -> identificador .)
    FOR             reduce using rule 100 (valores_mat -> identificador .)
    $end            reduce using rule 100 (valores_mat -> identificador .)
    END             reduce using rule 100 (valores_mat -> identificador .)
    ELSE            reduce using rule 100 (valores_mat -> identificador .)
    ELSIF           reduce using rule 100 (valores_mat -> identificador .)
    RETURN          reduce using rule 100 (valores_mat -> identificador .)
    IN              reduce using rule 100 (valores_mat -> identificador .)
    RPAREN          reduce using rule 100 (valores_mat -> identificador .)
    COMMA           reduce using rule 100 (valores_mat -> identificador .)
    RBRACKET        reduce using rule 100 (valores_mat -> identificador .)
    EQUALS          reduce using rule 100 (valores_mat -> identificador .)
    RBRACE          reduce using rule 100 (valores_mat -> identificador .)
    PLUS            reduce using rule 100 (valores_mat -> identificador .)
    MINUS           reduce using rule 100 (valores_mat -> identificador .)
    TIMS            reduce using rule 100 (valores_mat -> identificador .)
    DIVIDE          reduce using rule 100 (valores_mat -> identificador .)
    DOT             reduce using rule 100 (valores_mat -> identificador .)


state 93

    (70) expresion_condicion -> identificador opIgual BOOLEAN .

    CLASS           reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    DEF             reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    STRING          reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    BOOLEAN         reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    VARIABLE        reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    CONSTANT        reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    VARIABLE_GLOBAL reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    VARIABLE_CLASE  reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    VARIABLE_INSTANCIA reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    INTEGER         reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    FLOATINGPOINT   reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    PUTS            reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    IF              reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    WHILE           reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    FOR             reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    $end            reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    END             reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    ELSE            reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    ELSIF           reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    RETURN          reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    IN              reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    RPAREN          reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    COMMA           reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    RBRACKET        reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    EQUALS          reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)
    RBRACE          reduce using rule 70 (expresion_condicion -> identificador opIgual BOOLEAN .)


state 94

    (72) expresion_condicion -> identificador opIgual valores_cond .

    CLASS           reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    DEF             reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    STRING          reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    BOOLEAN         reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    VARIABLE        reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    CONSTANT        reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    VARIABLE_GLOBAL reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    VARIABLE_CLASE  reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    VARIABLE_INSTANCIA reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    INTEGER         reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    FLOATINGPOINT   reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    PUTS            reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    IF              reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    WHILE           reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    FOR             reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    $end            reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    END             reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    ELSE            reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    ELSIF           reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    RETURN          reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    IN              reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    RPAREN          reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    COMMA           reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    RBRACKET        reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    EQUALS          reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)
    RBRACE          reduce using rule 72 (expresion_condicion -> identificador opIgual valores_cond .)


state 95

    (105) asignacion -> identificador EQUALS expresion .

    CLASS           reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    DEF             reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    STRING          reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    BOOLEAN         reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    VARIABLE        reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    CONSTANT        reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    VARIABLE_GLOBAL reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    VARIABLE_CLASE  reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    VARIABLE_INSTANCIA reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    INTEGER         reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    FLOATINGPOINT   reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    PUTS            reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    IF              reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    WHILE           reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    FOR             reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    $end            reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    END             reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    ELSE            reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    ELSIF           reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    RETURN          reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    IN              reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    RPAREN          reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    COMMA           reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    RBRACKET        reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    EQUALS          reduce using rule 105 (asignacion -> identificador EQUALS expresion .)
    RBRACE          reduce using rule 105 (asignacion -> identificador EQUALS expresion .)


state 96

    (27) arreglo -> identificador EQUALS LBRACKET . elementos RBRACKET
    (28) elementos -> . expresion
    (29) elementos -> . expresion COMMA elementos
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    identificador                  shift and go to state 12
    elementos                      shift and go to state 124
    expresion                      shift and go to state 125
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 97

    (30) hash -> identificador EQUALS LBRACE . elementos_hash RBRACE
    (31) elementos_hash -> . expresion EQUALS GREATER expresion
    (32) elementos_hash -> . expresion EQUALS GREATER expresion COMMA elementos_hash
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    identificador                  shift and go to state 12
    elementos_hash                 shift and go to state 126
    expresion                      shift and go to state 127
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 98

    (94) times -> identificador DOT TIMES . LBRACE expresion RBRACE
    (96) times -> identificador DOT TIMES . DO expresion END

    LBRACE          shift and go to state 128
    DO              shift and go to state 129


state 99

    (83) opIgual -> NOT EQUALS .

    BOOLEAN         reduce using rule 83 (opIgual -> NOT EQUALS .)
    STRING          reduce using rule 83 (opIgual -> NOT EQUALS .)
    INTEGER         reduce using rule 83 (opIgual -> NOT EQUALS .)
    FLOATINGPOINT   reduce using rule 83 (opIgual -> NOT EQUALS .)
    VARIABLE        reduce using rule 83 (opIgual -> NOT EQUALS .)
    CONSTANT        reduce using rule 83 (opIgual -> NOT EQUALS .)
    VARIABLE_GLOBAL reduce using rule 83 (opIgual -> NOT EQUALS .)
    VARIABLE_CLASE  reduce using rule 83 (opIgual -> NOT EQUALS .)
    VARIABLE_INSTANCIA reduce using rule 83 (opIgual -> NOT EQUALS .)


state 100

    (71) expresion_condicion -> BOOLEAN opIgual identificador .

    CLASS           reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    DEF             reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    STRING          reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    BOOLEAN         reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    VARIABLE        reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    CONSTANT        reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    VARIABLE_GLOBAL reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    VARIABLE_CLASE  reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    VARIABLE_INSTANCIA reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    INTEGER         reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    FLOATINGPOINT   reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    PUTS            reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    IF              reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    WHILE           reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    FOR             reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    $end            reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    END             reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    ELSE            reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    ELSIF           reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    RETURN          reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    IN              reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    RPAREN          reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    COMMA           reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    RBRACKET        reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    EQUALS          reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)
    RBRACE          reduce using rule 71 (expresion_condicion -> BOOLEAN opIgual identificador .)


state 101

    (93) times -> INTEGER DOT TIMES . LBRACE expresion RBRACE
    (95) times -> INTEGER DOT TIMES . DO expresion END

    LBRACE          shift and go to state 130
    DO              shift and go to state 131


state 102

    (69) expresion_condicion -> valores_cond opNum valores_cond .

    CLASS           reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    DEF             reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    STRING          reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    BOOLEAN         reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    VARIABLE        reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    CONSTANT        reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    VARIABLE_GLOBAL reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    VARIABLE_CLASE  reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    VARIABLE_INSTANCIA reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    INTEGER         reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    FLOATINGPOINT   reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    PUTS            reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    IF              reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    WHILE           reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    FOR             reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    $end            reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    END             reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    ELSE            reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    ELSIF           reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    RETURN          reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    IN              reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    RPAREN          reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    COMMA           reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    RBRACKET        reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    EQUALS          reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)
    RBRACE          reduce using rule 69 (expresion_condicion -> valores_cond opNum valores_cond .)


state 103

    (73) expresion_condicion -> valores_cond opIgual identificador .

    CLASS           reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    DEF             reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    STRING          reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    BOOLEAN         reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    VARIABLE        reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    CONSTANT        reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    VARIABLE_GLOBAL reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    VARIABLE_CLASE  reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    VARIABLE_INSTANCIA reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    INTEGER         reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    FLOATINGPOINT   reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    PUTS            reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    IF              reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    WHILE           reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    FOR             reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    $end            reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    END             reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    ELSE            reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    ELSIF           reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    RETURN          reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    IN              reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    RPAREN          reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    COMMA           reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    RBRACKET        reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    EQUALS          reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)
    RBRACE          reduce using rule 73 (expresion_condicion -> valores_cond opIgual identificador .)


state 104

    (79) opNum -> LESS EQUALS .

    STRING          reduce using rule 79 (opNum -> LESS EQUALS .)
    INTEGER         reduce using rule 79 (opNum -> LESS EQUALS .)
    FLOATINGPOINT   reduce using rule 79 (opNum -> LESS EQUALS .)
    VARIABLE        reduce using rule 79 (opNum -> LESS EQUALS .)
    CONSTANT        reduce using rule 79 (opNum -> LESS EQUALS .)
    VARIABLE_GLOBAL reduce using rule 79 (opNum -> LESS EQUALS .)
    VARIABLE_CLASE  reduce using rule 79 (opNum -> LESS EQUALS .)
    VARIABLE_INSTANCIA reduce using rule 79 (opNum -> LESS EQUALS .)


state 105

    (81) opNum -> GREATER EQUALS .

    STRING          reduce using rule 81 (opNum -> GREATER EQUALS .)
    INTEGER         reduce using rule 81 (opNum -> GREATER EQUALS .)
    FLOATINGPOINT   reduce using rule 81 (opNum -> GREATER EQUALS .)
    VARIABLE        reduce using rule 81 (opNum -> GREATER EQUALS .)
    CONSTANT        reduce using rule 81 (opNum -> GREATER EQUALS .)
    VARIABLE_GLOBAL reduce using rule 81 (opNum -> GREATER EQUALS .)
    VARIABLE_CLASE  reduce using rule 81 (opNum -> GREATER EQUALS .)
    VARIABLE_INSTANCIA reduce using rule 81 (opNum -> GREATER EQUALS .)


state 106

    (97) expresion_matematica -> valores_mat operador valores_mat .
    (97) expresion_matematica -> valores_mat . operador valores_mat
    (98) expresion_matematica -> valores_mat . operador expresion_matematica
    (101) operador -> . PLUS
    (102) operador -> . MINUS
    (103) operador -> . TIMS
    (104) operador -> . DIVIDE

    CLASS           reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    DEF             reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    STRING          reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    BOOLEAN         reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    VARIABLE        reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    CONSTANT        reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    VARIABLE_GLOBAL reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    VARIABLE_CLASE  reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    VARIABLE_INSTANCIA reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    INTEGER         reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    FLOATINGPOINT   reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    PUTS            reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    IF              reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    WHILE           reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    FOR             reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    $end            reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    END             reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    ELSE            reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    ELSIF           reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    RETURN          reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    IN              reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    RPAREN          reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    COMMA           reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    RBRACKET        reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    EQUALS          reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    RBRACE          reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    DOT             reduce using rule 97 (expresion_matematica -> valores_mat operador valores_mat .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMS            shift and go to state 62
    DIVIDE          shift and go to state 63

    operador                       shift and go to state 59

state 107

    (98) expresion_matematica -> valores_mat operador expresion_matematica .

    CLASS           reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    DEF             reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    STRING          reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    BOOLEAN         reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    VARIABLE        reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    CONSTANT        reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    VARIABLE_GLOBAL reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    VARIABLE_CLASE  reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    VARIABLE_INSTANCIA reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    INTEGER         reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    FLOATINGPOINT   reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    PUTS            reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    IF              reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    WHILE           reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    FOR             reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    $end            reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    END             reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    ELSE            reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    ELSIF           reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    RETURN          reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    IN              reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    RPAREN          reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    COMMA           reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    RBRACKET        reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    EQUALS          reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    RBRACE          reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)
    DOT             reduce using rule 98 (expresion_matematica -> valores_mat operador expresion_matematica .)


state 108

    (35) puts -> PUTS LPAREN expresion . RPAREN

    RPAREN          shift and go to state 132


state 109

    (36) puts -> PUTS LPAREN expresion_matematica . RPAREN
    (20) expresion -> expresion_matematica .

  ! shift/reduce conflict for RPAREN resolved as shift
    RPAREN          shift and go to state 133

  ! RPAREN          [ reduce using rule 20 (expresion -> expresion_matematica .) ]


state 110

    (56) condicional_if -> IF content_if lista_codigo . END
    (57) condicional_if -> IF content_if lista_codigo . else END
    (58) condicional_if -> IF content_if lista_codigo . elsif END
    (64) else -> . ELSE lista_codigo
    (65) else -> . ELSE lista_codigo elsif
    (66) elsif -> . ELSIF expresion_condicion lista_codigo
    (67) elsif -> . ELSIF expresion_condicion lista_codigo elsif
    (68) elsif -> . ELSIF expresion_condicion lista_codigo else

    END             shift and go to state 134
    ELSE            shift and go to state 137
    ELSIF           shift and go to state 138

    else                           shift and go to state 135
    elsif                          shift and go to state 136

state 111

    (59) condicional_if -> IF LPAREN content_if . RPAREN lista_codigo END
    (60) condicional_if -> IF LPAREN content_if . RPAREN lista_codigo else END
    (61) condicional_if -> IF LPAREN content_if . RPAREN lista_codigo elsif END

    RPAREN          shift and go to state 139


state 112

    (84) iteracion -> WHILE content_if lista_codigo . END

    END             shift and go to state 140


state 113

    (85) iteracion -> WHILE LPAREN content_if . RPAREN lista_codigo END

    RPAREN          shift and go to state 141


state 114

    (86) iteracion -> FOR expresion IN . expresion lista_codigo END
    (87) iteracion -> FOR expresion IN . rango lista_codigo END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (90) rango -> . LPAREN valorR DOT DOT valorR RPAREN
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    LPAREN          shift and go to state 144
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 142
    rango                          shift and go to state 143
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 115

    (88) iteracion -> FOR LPAREN expresion . RPAREN IN expresion lista_codigo END
    (89) iteracion -> FOR LPAREN expresion . RPAREN IN rango lista_codigo END

    RPAREN          shift and go to state 145


state 116

    (37) clase -> CLASS CONSTANT varias_exp varios_met . END

    END             shift and go to state 146


state 117

    (38) clase -> CLASS CONSTANT varias_exp END .

    CLASS           reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    DEF             reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    STRING          reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    BOOLEAN         reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    VARIABLE        reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    CONSTANT        reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    VARIABLE_GLOBAL reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    VARIABLE_CLASE  reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    VARIABLE_INSTANCIA reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    INTEGER         reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    FLOATINGPOINT   reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    PUTS            reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    IF              reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    WHILE           reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    FOR             reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)
    $end            reduce using rule 38 (clase -> CLASS CONSTANT varias_exp END .)


state 118

    (39) clase -> CLASS CONSTANT varios_met END .

    CLASS           reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    DEF             reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    STRING          reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    BOOLEAN         reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    VARIABLE        reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    CONSTANT        reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    VARIABLE_GLOBAL reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    VARIABLE_CLASE  reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    VARIABLE_INSTANCIA reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    INTEGER         reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    FLOATINGPOINT   reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    PUTS            reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    IF              reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    WHILE           reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    FOR             reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)
    $end            reduce using rule 39 (clase -> CLASS CONSTANT varios_met END .)


state 119

    (41) varias_exp -> expresion varias_exp .

    END             reduce using rule 41 (varias_exp -> expresion varias_exp .)
    DEF             reduce using rule 41 (varias_exp -> expresion varias_exp .)


state 120

    (43) varios_met -> metodo varios_met .

    END             reduce using rule 43 (varios_met -> metodo varios_met .)


state 121

    (44) metodo -> DEF VARIABLE lista_codigo END .

    CLASS           reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    DEF             reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    STRING          reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    BOOLEAN         reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    VARIABLE        reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    CONSTANT        reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    INTEGER         reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    FLOATINGPOINT   reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    PUTS            reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    IF              reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    WHILE           reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    FOR             reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    $end            reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)
    END             reduce using rule 44 (metodo -> DEF VARIABLE lista_codigo END .)


state 122

    (47) parametro -> VARIABLE .
    (48) parametro -> VARIABLE . COMMA parametro

    RPAREN          reduce using rule 47 (parametro -> VARIABLE .)
    COMMA           shift and go to state 147


state 123

    (45) metodo -> DEF VARIABLE LPAREN parametro . RPAREN lista_codigo END
    (46) metodo -> DEF VARIABLE LPAREN parametro . RPAREN lista_codigo RETURN expresion END

    RPAREN          shift and go to state 148


state 124

    (27) arreglo -> identificador EQUALS LBRACKET elementos . RBRACKET

    RBRACKET        shift and go to state 149


state 125

    (28) elementos -> expresion .
    (29) elementos -> expresion . COMMA elementos

    RBRACKET        reduce using rule 28 (elementos -> expresion .)
    COMMA           shift and go to state 150


state 126

    (30) hash -> identificador EQUALS LBRACE elementos_hash . RBRACE

    RBRACE          shift and go to state 151


state 127

    (31) elementos_hash -> expresion . EQUALS GREATER expresion
    (32) elementos_hash -> expresion . EQUALS GREATER expresion COMMA elementos_hash

    EQUALS          shift and go to state 152


state 128

    (94) times -> identificador DOT TIMES LBRACE . expresion RBRACE
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    identificador                  shift and go to state 12
    expresion                      shift and go to state 153
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 129

    (96) times -> identificador DOT TIMES DO . expresion END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    identificador                  shift and go to state 12
    expresion                      shift and go to state 154
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 130

    (93) times -> INTEGER DOT TIMES LBRACE . expresion RBRACE
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 155
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 131

    (95) times -> INTEGER DOT TIMES DO . expresion END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 156
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 132

    (35) puts -> PUTS LPAREN expresion RPAREN .

    CLASS           reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    DEF             reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    STRING          reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    BOOLEAN         reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    VARIABLE        reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    CONSTANT        reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    VARIABLE_GLOBAL reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    VARIABLE_CLASE  reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    VARIABLE_INSTANCIA reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    INTEGER         reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    FLOATINGPOINT   reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    PUTS            reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    IF              reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    WHILE           reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    FOR             reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    $end            reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    END             reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    ELSE            reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    ELSIF           reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    RETURN          reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    IN              reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    COMMA           reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    RBRACKET        reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    EQUALS          reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)
    RBRACE          reduce using rule 35 (puts -> PUTS LPAREN expresion RPAREN .)


state 133

    (36) puts -> PUTS LPAREN expresion_matematica RPAREN .

    CLASS           reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    DEF             reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    STRING          reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    BOOLEAN         reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    VARIABLE        reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    CONSTANT        reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    VARIABLE_GLOBAL reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    VARIABLE_CLASE  reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    VARIABLE_INSTANCIA reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    INTEGER         reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    FLOATINGPOINT   reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    PUTS            reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    IF              reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    WHILE           reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    FOR             reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    $end            reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    END             reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    ELSE            reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    ELSIF           reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    RETURN          reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    IN              reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    RPAREN          reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    COMMA           reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    RBRACKET        reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    EQUALS          reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)
    RBRACE          reduce using rule 36 (puts -> PUTS LPAREN expresion_matematica RPAREN .)


state 134

    (56) condicional_if -> IF content_if lista_codigo END .

    STRING          reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    BOOLEAN         reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    IF              reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    WHILE           reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    FOR             reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    VARIABLE        reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    CONSTANT        reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    INTEGER         reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    FLOATINGPOINT   reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    PUTS            reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    CLASS           reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    DEF             reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    END             reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    ELSE            reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    ELSIF           reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)
    RETURN          reduce using rule 56 (condicional_if -> IF content_if lista_codigo END .)


state 135

    (57) condicional_if -> IF content_if lista_codigo else . END

    END             shift and go to state 157


state 136

    (58) condicional_if -> IF content_if lista_codigo elsif . END

    END             shift and go to state 158


state 137

    (64) else -> ELSE . lista_codigo
    (65) else -> ELSE . lista_codigo elsif
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    ELSIF           reduce using rule 110 (vacio -> .)
    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 159
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 138

    (66) elsif -> ELSIF . expresion_condicion lista_codigo
    (67) elsif -> ELSIF . expresion_condicion lista_codigo elsif
    (68) elsif -> ELSIF . expresion_condicion lista_codigo else
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT

    BOOLEAN         shift and go to state 73
    STRING          shift and go to state 75
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30

    expresion_condicion            shift and go to state 160
    valores_cond                   shift and go to state 31
    identificador                  shift and go to state 161
    valores_mat                    shift and go to state 74
    number                         shift and go to state 76

state 139

    (59) condicional_if -> IF LPAREN content_if RPAREN . lista_codigo END
    (60) condicional_if -> IF LPAREN content_if RPAREN . lista_codigo else END
    (61) condicional_if -> IF LPAREN content_if RPAREN . lista_codigo elsif END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    ELSE            reduce using rule 110 (vacio -> .)
    ELSIF           reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 162
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 140

    (84) iteracion -> WHILE content_if lista_codigo END .

    STRING          reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    BOOLEAN         reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    IF              reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    WHILE           reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    FOR             reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    VARIABLE        reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    CONSTANT        reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    INTEGER         reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    FLOATINGPOINT   reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    PUTS            reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    CLASS           reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    DEF             reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    END             reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    ELSE            reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    ELSIF           reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)
    RETURN          reduce using rule 84 (iteracion -> WHILE content_if lista_codigo END .)


state 141

    (85) iteracion -> WHILE LPAREN content_if RPAREN . lista_codigo END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 163
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 142

    (86) iteracion -> FOR expresion IN expresion . lista_codigo END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 46
    lista_codigo                   shift and go to state 164
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 143

    (87) iteracion -> FOR expresion IN rango . lista_codigo END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 46
    lista_codigo                   shift and go to state 165
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 144

    (90) rango -> LPAREN . valorR DOT DOT valorR RPAREN
    (91) valorR -> . expresion_matematica
    (92) valorR -> . valores_mat
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    valorR                         shift and go to state 166
    expresion_matematica           shift and go to state 167
    valores_mat                    shift and go to state 168
    number                         shift and go to state 76
    identificador                  shift and go to state 92

state 145

    (88) iteracion -> FOR LPAREN expresion RPAREN . IN expresion lista_codigo END
    (89) iteracion -> FOR LPAREN expresion RPAREN . IN rango lista_codigo END

    IN              shift and go to state 169


state 146

    (37) clase -> CLASS CONSTANT varias_exp varios_met END .

    CLASS           reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    DEF             reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    STRING          reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    BOOLEAN         reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    VARIABLE        reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    CONSTANT        reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    VARIABLE_GLOBAL reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    VARIABLE_CLASE  reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    VARIABLE_INSTANCIA reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    INTEGER         reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    FLOATINGPOINT   reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    PUTS            reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    IF              reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    WHILE           reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    FOR             reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)
    $end            reduce using rule 37 (clase -> CLASS CONSTANT varias_exp varios_met END .)


state 147

    (48) parametro -> VARIABLE COMMA . parametro
    (47) parametro -> . VARIABLE
    (48) parametro -> . VARIABLE COMMA parametro

    VARIABLE        shift and go to state 122

    parametro                      shift and go to state 170

state 148

    (45) metodo -> DEF VARIABLE LPAREN parametro RPAREN . lista_codigo END
    (46) metodo -> DEF VARIABLE LPAREN parametro RPAREN . lista_codigo RETURN expresion END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    RETURN          reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    lista_codigo                   shift and go to state 171
    expresion                      shift and go to state 46
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 149

    (27) arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .

    CLASS           reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    DEF             reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    STRING          reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    BOOLEAN         reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    VARIABLE        reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    CONSTANT        reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    VARIABLE_GLOBAL reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    VARIABLE_CLASE  reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    VARIABLE_INSTANCIA reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    INTEGER         reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    FLOATINGPOINT   reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    PUTS            reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    IF              reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    WHILE           reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    FOR             reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    $end            reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    END             reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    ELSE            reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    ELSIF           reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    RETURN          reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    IN              reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    RPAREN          reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    COMMA           reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    RBRACKET        reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    EQUALS          reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)
    RBRACE          reduce using rule 27 (arreglo -> identificador EQUALS LBRACKET elementos RBRACKET .)


state 150

    (29) elementos -> expresion COMMA . elementos
    (28) elementos -> . expresion
    (29) elementos -> . expresion COMMA elementos
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 125
    elementos                      shift and go to state 172
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 151

    (30) hash -> identificador EQUALS LBRACE elementos_hash RBRACE .

    CLASS           reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    DEF             reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    STRING          reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    BOOLEAN         reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    VARIABLE        reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    CONSTANT        reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    VARIABLE_GLOBAL reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    VARIABLE_CLASE  reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    VARIABLE_INSTANCIA reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    INTEGER         reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    FLOATINGPOINT   reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    PUTS            reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    IF              reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    WHILE           reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    FOR             reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    $end            reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    END             reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    ELSE            reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    ELSIF           reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    RETURN          reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    IN              reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    RPAREN          reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    COMMA           reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    RBRACKET        reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    EQUALS          reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)
    RBRACE          reduce using rule 30 (hash -> identificador EQUALS LBRACE elementos_hash RBRACE .)


state 152

    (31) elementos_hash -> expresion EQUALS . GREATER expresion
    (32) elementos_hash -> expresion EQUALS . GREATER expresion COMMA elementos_hash

    GREATER         shift and go to state 173


state 153

    (94) times -> identificador DOT TIMES LBRACE expresion . RBRACE

    RBRACE          shift and go to state 174


state 154

    (96) times -> identificador DOT TIMES DO expresion . END

    END             shift and go to state 175


state 155

    (93) times -> INTEGER DOT TIMES LBRACE expresion . RBRACE

    RBRACE          shift and go to state 176


state 156

    (95) times -> INTEGER DOT TIMES DO expresion . END

    END             shift and go to state 177


state 157

    (57) condicional_if -> IF content_if lista_codigo else END .

    STRING          reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    BOOLEAN         reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    IF              reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    WHILE           reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    FOR             reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    VARIABLE        reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    CONSTANT        reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    VARIABLE_GLOBAL reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    VARIABLE_CLASE  reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    VARIABLE_INSTANCIA reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    INTEGER         reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    FLOATINGPOINT   reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    PUTS            reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    CLASS           reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    DEF             reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    END             reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    ELSE            reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    ELSIF           reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)
    RETURN          reduce using rule 57 (condicional_if -> IF content_if lista_codigo else END .)


state 158

    (58) condicional_if -> IF content_if lista_codigo elsif END .

    STRING          reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    BOOLEAN         reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    IF              reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    WHILE           reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    FOR             reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    VARIABLE        reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    CONSTANT        reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    VARIABLE_GLOBAL reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    VARIABLE_CLASE  reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    VARIABLE_INSTANCIA reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    INTEGER         reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    FLOATINGPOINT   reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    PUTS            reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    CLASS           reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    DEF             reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    END             reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    ELSE            reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    ELSIF           reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)
    RETURN          reduce using rule 58 (condicional_if -> IF content_if lista_codigo elsif END .)


state 159

    (64) else -> ELSE lista_codigo .
    (65) else -> ELSE lista_codigo . elsif
    (66) elsif -> . ELSIF expresion_condicion lista_codigo
    (67) elsif -> . ELSIF expresion_condicion lista_codigo elsif
    (68) elsif -> . ELSIF expresion_condicion lista_codigo else

    END             reduce using rule 64 (else -> ELSE lista_codigo .)
    ELSIF           shift and go to state 138

    elsif                          shift and go to state 178

state 160

    (66) elsif -> ELSIF expresion_condicion . lista_codigo
    (67) elsif -> ELSIF expresion_condicion . lista_codigo elsif
    (68) elsif -> ELSIF expresion_condicion . lista_codigo else
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    ELSIF           reduce using rule 110 (vacio -> .)
    ELSE            reduce using rule 110 (vacio -> .)
    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion_condicion            shift and go to state 16
    lista_codigo                   shift and go to state 179
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    expresion                      shift and go to state 46
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 161

    (70) expresion_condicion -> identificador . opIgual BOOLEAN
    (72) expresion_condicion -> identificador . opIgual valores_cond
    (100) valores_mat -> identificador .
    (82) opIgual -> . ISEQUAL
    (83) opIgual -> . NOT EQUALS

  ! shift/reduce conflict for ISEQUAL resolved as shift
  ! shift/reduce conflict for NOT resolved as shift
    LESS            reduce using rule 100 (valores_mat -> identificador .)
    GREATER         reduce using rule 100 (valores_mat -> identificador .)
    ISEQUAL         shift and go to state 51
    NOT             shift and go to state 52

  ! ISEQUAL         [ reduce using rule 100 (valores_mat -> identificador .) ]
  ! NOT             [ reduce using rule 100 (valores_mat -> identificador .) ]

    opIgual                        shift and go to state 48

state 162

    (59) condicional_if -> IF LPAREN content_if RPAREN lista_codigo . END
    (60) condicional_if -> IF LPAREN content_if RPAREN lista_codigo . else END
    (61) condicional_if -> IF LPAREN content_if RPAREN lista_codigo . elsif END
    (64) else -> . ELSE lista_codigo
    (65) else -> . ELSE lista_codigo elsif
    (66) elsif -> . ELSIF expresion_condicion lista_codigo
    (67) elsif -> . ELSIF expresion_condicion lista_codigo elsif
    (68) elsif -> . ELSIF expresion_condicion lista_codigo else

    END             shift and go to state 180
    ELSE            shift and go to state 137
    ELSIF           shift and go to state 138

    else                           shift and go to state 181
    elsif                          shift and go to state 182

state 163

    (85) iteracion -> WHILE LPAREN content_if RPAREN lista_codigo . END

    END             shift and go to state 183


state 164

    (86) iteracion -> FOR expresion IN expresion lista_codigo . END

    END             shift and go to state 184


state 165

    (87) iteracion -> FOR expresion IN rango lista_codigo . END

    END             shift and go to state 185


state 166

    (90) rango -> LPAREN valorR . DOT DOT valorR RPAREN

    DOT             shift and go to state 186


state 167

    (91) valorR -> expresion_matematica .

    DOT             reduce using rule 91 (valorR -> expresion_matematica .)
    RPAREN          reduce using rule 91 (valorR -> expresion_matematica .)


state 168

    (92) valorR -> valores_mat .
    (97) expresion_matematica -> valores_mat . operador valores_mat
    (98) expresion_matematica -> valores_mat . operador expresion_matematica
    (101) operador -> . PLUS
    (102) operador -> . MINUS
    (103) operador -> . TIMS
    (104) operador -> . DIVIDE

    DOT             reduce using rule 92 (valorR -> valores_mat .)
    RPAREN          reduce using rule 92 (valorR -> valores_mat .)
    PLUS            shift and go to state 60
    MINUS           shift and go to state 61
    TIMS            shift and go to state 62
    DIVIDE          shift and go to state 63

    operador                       shift and go to state 59

state 169

    (88) iteracion -> FOR LPAREN expresion RPAREN IN . expresion lista_codigo END
    (89) iteracion -> FOR LPAREN expresion RPAREN IN . rango lista_codigo END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (90) rango -> . LPAREN valorR DOT DOT valorR RPAREN
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    LPAREN          shift and go to state 144
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 187
    rango                          shift and go to state 188
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 170

    (48) parametro -> VARIABLE COMMA parametro .

    RPAREN          reduce using rule 48 (parametro -> VARIABLE COMMA parametro .)


state 171

    (45) metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo . END
    (46) metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo . RETURN expresion END

    END             shift and go to state 189
    RETURN          shift and go to state 190


state 172

    (29) elementos -> expresion COMMA elementos .

    RBRACKET        reduce using rule 29 (elementos -> expresion COMMA elementos .)


state 173

    (31) elementos_hash -> expresion EQUALS GREATER . expresion
    (32) elementos_hash -> expresion EQUALS GREATER . expresion COMMA elementos_hash
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 191
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 174

    (94) times -> identificador DOT TIMES LBRACE expresion RBRACE .

    CLASS           reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    DEF             reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    STRING          reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    BOOLEAN         reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE        reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    CONSTANT        reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE_GLOBAL reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE_CLASE  reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE_INSTANCIA reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    INTEGER         reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    FLOATINGPOINT   reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    PUTS            reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    IF              reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    WHILE           reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    FOR             reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    $end            reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    END             reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    ELSE            reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    ELSIF           reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    RETURN          reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    IN              reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    RPAREN          reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    COMMA           reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    RBRACKET        reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    EQUALS          reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)
    RBRACE          reduce using rule 94 (times -> identificador DOT TIMES LBRACE expresion RBRACE .)


state 175

    (96) times -> identificador DOT TIMES DO expresion END .

    CLASS           reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    DEF             reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    STRING          reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    BOOLEAN         reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    VARIABLE        reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    CONSTANT        reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    VARIABLE_GLOBAL reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    VARIABLE_CLASE  reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    VARIABLE_INSTANCIA reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    INTEGER         reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    FLOATINGPOINT   reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    PUTS            reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    IF              reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    WHILE           reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    FOR             reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    $end            reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    END             reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    ELSE            reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    ELSIF           reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    RETURN          reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    IN              reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    RPAREN          reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    COMMA           reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    RBRACKET        reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    EQUALS          reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)
    RBRACE          reduce using rule 96 (times -> identificador DOT TIMES DO expresion END .)


state 176

    (93) times -> INTEGER DOT TIMES LBRACE expresion RBRACE .

    CLASS           reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    DEF             reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    STRING          reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    BOOLEAN         reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE        reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    CONSTANT        reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE_GLOBAL reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE_CLASE  reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    VARIABLE_INSTANCIA reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    INTEGER         reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    FLOATINGPOINT   reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    PUTS            reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    IF              reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    WHILE           reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    FOR             reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    $end            reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    END             reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    ELSE            reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    ELSIF           reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    RETURN          reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    IN              reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    RPAREN          reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    COMMA           reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    RBRACKET        reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    EQUALS          reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)
    RBRACE          reduce using rule 93 (times -> INTEGER DOT TIMES LBRACE expresion RBRACE .)


state 177

    (95) times -> INTEGER DOT TIMES DO expresion END .

    CLASS           reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    DEF             reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    STRING          reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    BOOLEAN         reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    VARIABLE        reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    CONSTANT        reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    VARIABLE_GLOBAL reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    VARIABLE_CLASE  reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    VARIABLE_INSTANCIA reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    INTEGER         reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    FLOATINGPOINT   reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    PUTS            reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    IF              reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    WHILE           reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    FOR             reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    $end            reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    END             reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    ELSE            reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    ELSIF           reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    RETURN          reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    IN              reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    RPAREN          reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    COMMA           reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    RBRACKET        reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    EQUALS          reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)
    RBRACE          reduce using rule 95 (times -> INTEGER DOT TIMES DO expresion END .)


state 178

    (65) else -> ELSE lista_codigo elsif .

    END             reduce using rule 65 (else -> ELSE lista_codigo elsif .)


state 179

    (66) elsif -> ELSIF expresion_condicion lista_codigo .
    (67) elsif -> ELSIF expresion_condicion lista_codigo . elsif
    (68) elsif -> ELSIF expresion_condicion lista_codigo . else
    (66) elsif -> . ELSIF expresion_condicion lista_codigo
    (67) elsif -> . ELSIF expresion_condicion lista_codigo elsif
    (68) elsif -> . ELSIF expresion_condicion lista_codigo else
    (64) else -> . ELSE lista_codigo
    (65) else -> . ELSE lista_codigo elsif

    END             reduce using rule 66 (elsif -> ELSIF expresion_condicion lista_codigo .)
    ELSIF           shift and go to state 138
    ELSE            shift and go to state 137

    elsif                          shift and go to state 192
    else                           shift and go to state 193

state 180

    (59) condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .

    STRING          reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    BOOLEAN         reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    IF              reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    WHILE           reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    FOR             reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE        reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    CONSTANT        reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    INTEGER         reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    FLOATINGPOINT   reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    PUTS            reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    CLASS           reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    DEF             reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    END             reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    ELSE            reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    ELSIF           reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)
    RETURN          reduce using rule 59 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo END .)


state 181

    (60) condicional_if -> IF LPAREN content_if RPAREN lista_codigo else . END

    END             shift and go to state 194


state 182

    (61) condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif . END

    END             shift and go to state 195


state 183

    (85) iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .

    STRING          reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    BOOLEAN         reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    IF              reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    WHILE           reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    FOR             reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE        reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    CONSTANT        reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    INTEGER         reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    FLOATINGPOINT   reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    PUTS            reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    CLASS           reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    DEF             reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    END             reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    ELSE            reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    ELSIF           reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)
    RETURN          reduce using rule 85 (iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END .)


state 184

    (86) iteracion -> FOR expresion IN expresion lista_codigo END .

    STRING          reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    BOOLEAN         reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    IF              reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    WHILE           reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    FOR             reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    VARIABLE        reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    CONSTANT        reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    INTEGER         reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    FLOATINGPOINT   reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    PUTS            reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    CLASS           reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    DEF             reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    END             reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    ELSE            reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    ELSIF           reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)
    RETURN          reduce using rule 86 (iteracion -> FOR expresion IN expresion lista_codigo END .)


state 185

    (87) iteracion -> FOR expresion IN rango lista_codigo END .

    STRING          reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    BOOLEAN         reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    IF              reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    WHILE           reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    FOR             reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    VARIABLE        reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    CONSTANT        reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    INTEGER         reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    FLOATINGPOINT   reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    PUTS            reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    CLASS           reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    DEF             reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    END             reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    ELSE            reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    ELSIF           reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)
    RETURN          reduce using rule 87 (iteracion -> FOR expresion IN rango lista_codigo END .)


state 186

    (90) rango -> LPAREN valorR DOT . DOT valorR RPAREN

    DOT             shift and go to state 196


state 187

    (88) iteracion -> FOR LPAREN expresion RPAREN IN expresion . lista_codigo END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 46
    lista_codigo                   shift and go to state 197
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 188

    (89) iteracion -> FOR LPAREN expresion RPAREN IN rango . lista_codigo END
    (49) lista_codigo -> . codigo
    (50) lista_codigo -> . vacio
    (51) lista_codigo -> . codigo lista_codigo
    (52) codigo -> . asignacion
    (53) codigo -> . expresion
    (54) codigo -> . condicional_if
    (55) codigo -> . iteracion
    (110) vacio -> .
    (105) asignacion -> . identificador EQUALS expresion
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (56) condicional_if -> . IF content_if lista_codigo END
    (57) condicional_if -> . IF content_if lista_codigo else END
    (58) condicional_if -> . IF content_if lista_codigo elsif END
    (59) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo END
    (60) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo else END
    (61) condicional_if -> . IF LPAREN content_if RPAREN lista_codigo elsif END
    (84) iteracion -> . WHILE content_if lista_codigo END
    (85) iteracion -> . WHILE LPAREN content_if RPAREN lista_codigo END
    (86) iteracion -> . FOR expresion IN expresion lista_codigo END
    (87) iteracion -> . FOR expresion IN rango lista_codigo END
    (88) iteracion -> . FOR LPAREN expresion RPAREN IN expresion lista_codigo END
    (89) iteracion -> . FOR LPAREN expresion RPAREN IN rango lista_codigo END
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    END             reduce using rule 110 (vacio -> .)
    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    IF              shift and go to state 34
    WHILE           shift and go to state 35
    FOR             shift and go to state 36
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 46
    lista_codigo                   shift and go to state 198
    codigo                         shift and go to state 10
    vacio                          shift and go to state 11
    asignacion                     shift and go to state 45
    condicional_if                 shift and go to state 24
    iteracion                      shift and go to state 25
    identificador                  shift and go to state 47
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 189

    (45) metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .

    CLASS           reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    DEF             reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    STRING          reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    BOOLEAN         reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    VARIABLE        reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    CONSTANT        reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    INTEGER         reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    FLOATINGPOINT   reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    PUTS            reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    IF              reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    WHILE           reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    FOR             reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    $end            reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)
    END             reduce using rule 45 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END .)


state 190

    (46) metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN . expresion END
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 199
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 191

    (31) elementos_hash -> expresion EQUALS GREATER expresion .
    (32) elementos_hash -> expresion EQUALS GREATER expresion . COMMA elementos_hash

    RBRACE          reduce using rule 31 (elementos_hash -> expresion EQUALS GREATER expresion .)
    COMMA           shift and go to state 200


state 192

    (67) elsif -> ELSIF expresion_condicion lista_codigo elsif .

    END             reduce using rule 67 (elsif -> ELSIF expresion_condicion lista_codigo elsif .)


state 193

    (68) elsif -> ELSIF expresion_condicion lista_codigo else .

    END             reduce using rule 68 (elsif -> ELSIF expresion_condicion lista_codigo else .)


state 194

    (60) condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .

    STRING          reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    BOOLEAN         reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    IF              reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    WHILE           reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    FOR             reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    VARIABLE        reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    CONSTANT        reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    VARIABLE_GLOBAL reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    VARIABLE_CLASE  reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    VARIABLE_INSTANCIA reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    INTEGER         reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    FLOATINGPOINT   reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    PUTS            reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    CLASS           reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    DEF             reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    END             reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    ELSE            reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    ELSIF           reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)
    RETURN          reduce using rule 60 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END .)


state 195

    (61) condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .

    STRING          reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    BOOLEAN         reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    IF              reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    WHILE           reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    FOR             reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    VARIABLE        reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    CONSTANT        reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    VARIABLE_GLOBAL reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    VARIABLE_CLASE  reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    VARIABLE_INSTANCIA reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    INTEGER         reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    FLOATINGPOINT   reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    PUTS            reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    CLASS           reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    DEF             reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    END             reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    ELSE            reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    ELSIF           reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)
    RETURN          reduce using rule 61 (condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END .)


state 196

    (90) rango -> LPAREN valorR DOT DOT . valorR RPAREN
    (91) valorR -> . expresion_matematica
    (92) valorR -> . valores_mat
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA

    INTEGER         shift and go to state 77
    FLOATINGPOINT   shift and go to state 30
    VARIABLE        shift and go to state 72
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28

    valorR                         shift and go to state 201
    expresion_matematica           shift and go to state 167
    valores_mat                    shift and go to state 168
    number                         shift and go to state 76
    identificador                  shift and go to state 92

state 197

    (88) iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo . END

    END             shift and go to state 202


state 198

    (89) iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo . END

    END             shift and go to state 203


state 199

    (46) metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion . END

    END             shift and go to state 204


state 200

    (32) elementos_hash -> expresion EQUALS GREATER expresion COMMA . elementos_hash
    (31) elementos_hash -> . expresion EQUALS GREATER expresion
    (32) elementos_hash -> . expresion EQUALS GREATER expresion COMMA elementos_hash
    (15) expresion -> . identificador
    (16) expresion -> . STRING
    (17) expresion -> . number
    (18) expresion -> . BOOLEAN
    (19) expresion -> . expresion_condicion
    (20) expresion -> . expresion_matematica
    (21) expresion -> . llamar_funcion
    (22) expresion -> . asignacion
    (23) expresion -> . arreglo
    (24) expresion -> . hash
    (25) expresion -> . puts
    (26) expresion -> . times
    (8) identificador -> . VARIABLE
    (9) identificador -> . CONSTANT
    (10) identificador -> . VARIABLE_GLOBAL
    (11) identificador -> . VARIABLE_CLASE
    (12) identificador -> . VARIABLE_INSTANCIA
    (13) number -> . INTEGER
    (14) number -> . FLOATINGPOINT
    (69) expresion_condicion -> . valores_cond opNum valores_cond
    (70) expresion_condicion -> . identificador opIgual BOOLEAN
    (71) expresion_condicion -> . BOOLEAN opIgual identificador
    (72) expresion_condicion -> . identificador opIgual valores_cond
    (73) expresion_condicion -> . valores_cond opIgual identificador
    (97) expresion_matematica -> . valores_mat operador valores_mat
    (98) expresion_matematica -> . valores_mat operador expresion_matematica
    (106) llamar_funcion -> . VARIABLE DOT LENGTH
    (107) llamar_funcion -> . VARIABLE DOT KEY
    (108) llamar_funcion -> . VARIABLE DOT FIRST
    (109) llamar_funcion -> . VARIABLE DOT LAST
    (105) asignacion -> . identificador EQUALS expresion
    (27) arreglo -> . identificador EQUALS LBRACKET elementos RBRACKET
    (30) hash -> . identificador EQUALS LBRACE elementos_hash RBRACE
    (33) puts -> . PUTS expresion
    (34) puts -> . PUTS expresion_matematica
    (35) puts -> . PUTS LPAREN expresion RPAREN
    (36) puts -> . PUTS LPAREN expresion_matematica RPAREN
    (93) times -> . INTEGER DOT TIMES LBRACE expresion RBRACE
    (94) times -> . identificador DOT TIMES LBRACE expresion RBRACE
    (95) times -> . INTEGER DOT TIMES DO expresion END
    (96) times -> . identificador DOT TIMES DO expresion END
    (74) valores_cond -> . valores_mat
    (75) valores_cond -> . STRING
    (99) valores_mat -> . number
    (100) valores_mat -> . identificador

    STRING          shift and go to state 13
    BOOLEAN         shift and go to state 15
    VARIABLE        shift and go to state 9
    CONSTANT        shift and go to state 7
    VARIABLE_GLOBAL shift and go to state 26
    VARIABLE_CLASE  shift and go to state 27
    VARIABLE_INSTANCIA shift and go to state 28
    INTEGER         shift and go to state 29
    FLOATINGPOINT   shift and go to state 30
    PUTS            shift and go to state 33

    expresion                      shift and go to state 127
    elementos_hash                 shift and go to state 205
    identificador                  shift and go to state 12
    number                         shift and go to state 14
    expresion_condicion            shift and go to state 16
    expresion_matematica           shift and go to state 17
    llamar_funcion                 shift and go to state 18
    asignacion                     shift and go to state 67
    arreglo                        shift and go to state 20
    hash                           shift and go to state 21
    puts                           shift and go to state 22
    times                          shift and go to state 23
    valores_cond                   shift and go to state 31
    valores_mat                    shift and go to state 32

state 201

    (90) rango -> LPAREN valorR DOT DOT valorR . RPAREN

    RPAREN          shift and go to state 206


state 202

    (88) iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .

    STRING          reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    BOOLEAN         reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    IF              reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    WHILE           reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    FOR             reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    VARIABLE        reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    CONSTANT        reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    INTEGER         reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    FLOATINGPOINT   reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    PUTS            reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    CLASS           reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    DEF             reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    END             reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    ELSE            reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    ELSIF           reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)
    RETURN          reduce using rule 88 (iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END .)


state 203

    (89) iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .

    STRING          reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    BOOLEAN         reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    IF              reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    WHILE           reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    FOR             reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    VARIABLE        reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    CONSTANT        reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    VARIABLE_GLOBAL reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    VARIABLE_CLASE  reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    VARIABLE_INSTANCIA reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    INTEGER         reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    FLOATINGPOINT   reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    PUTS            reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    CLASS           reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    DEF             reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    END             reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    ELSE            reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    ELSIF           reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)
    RETURN          reduce using rule 89 (iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END .)


state 204

    (46) metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .

    CLASS           reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    DEF             reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    STRING          reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    BOOLEAN         reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    VARIABLE        reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    CONSTANT        reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    VARIABLE_GLOBAL reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    VARIABLE_CLASE  reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    VARIABLE_INSTANCIA reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    INTEGER         reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    FLOATINGPOINT   reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    PUTS            reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    IF              reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    WHILE           reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    FOR             reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    $end            reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)
    END             reduce using rule 46 (metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END .)


state 205

    (32) elementos_hash -> expresion EQUALS GREATER expresion COMMA elementos_hash .

    RBRACE          reduce using rule 32 (elementos_hash -> expresion EQUALS GREATER expresion COMMA elementos_hash .)


state 206

    (90) rango -> LPAREN valorR DOT DOT valorR RPAREN .

    STRING          reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    BOOLEAN         reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    IF              reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    WHILE           reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    FOR             reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    VARIABLE        reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    CONSTANT        reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    VARIABLE_GLOBAL reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    VARIABLE_CLASE  reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    VARIABLE_INSTANCIA reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    INTEGER         reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    FLOATINGPOINT   reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    PUTS            reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)
    END             reduce using rule 90 (rango -> LPAREN valorR DOT DOT valorR RPAREN .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for CLASS in state 0 resolved as shift
WARNING: shift/reduce conflict for DEF in state 0 resolved as shift
WARNING: shift/reduce conflict for STRING in state 0 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 0 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 0 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 0 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 0 resolved as shift
WARNING: shift/reduce conflict for FLOATINGPOINT in state 0 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 0 resolved as shift
WARNING: shift/reduce conflict for IF in state 0 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 0 resolved as shift
WARNING: shift/reduce conflict for FOR in state 0 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for DEF in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 2 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 2 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 2 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOATINGPOINT in state 2 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 3 resolved as shift
WARNING: shift/reduce conflict for DEF in state 3 resolved as shift
WARNING: shift/reduce conflict for STRING in state 3 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 3 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 3 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 3 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 3 resolved as shift
WARNING: shift/reduce conflict for FLOATINGPOINT in state 3 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 3 resolved as shift
WARNING: shift/reduce conflict for IF in state 3 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 3 resolved as shift
WARNING: shift/reduce conflict for FOR in state 3 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 4 resolved as shift
WARNING: shift/reduce conflict for DEF in state 4 resolved as shift
WARNING: shift/reduce conflict for STRING in state 4 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 4 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 4 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 4 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 4 resolved as shift
WARNING: shift/reduce conflict for FLOATINGPOINT in state 4 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 4 resolved as shift
WARNING: shift/reduce conflict for IF in state 4 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 4 resolved as shift
WARNING: shift/reduce conflict for FOR in state 4 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 5 resolved as shift
WARNING: shift/reduce conflict for DEF in state 5 resolved as shift
WARNING: shift/reduce conflict for STRING in state 5 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 5 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 5 resolved as shift
WARNING: shift/reduce conflict for DEF in state 5 resolved as shift
WARNING: shift/reduce conflict for STRING in state 5 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 5 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 5 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 5 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 5 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 5 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 5 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 5 resolved as shift
WARNING: shift/reduce conflict for FLOATINGPOINT in state 5 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 5 resolved as shift
WARNING: shift/reduce conflict for IF in state 5 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 5 resolved as shift
WARNING: shift/reduce conflict for FOR in state 5 resolved as shift
WARNING: shift/reduce conflict for DOT in state 9 resolved as shift
WARNING: shift/reduce conflict for STRING in state 10 resolved as shift
WARNING: shift/reduce conflict for BOOLEAN in state 10 resolved as shift
WARNING: shift/reduce conflict for IF in state 10 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 10 resolved as shift
WARNING: shift/reduce conflict for FOR in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE in state 10 resolved as shift
WARNING: shift/reduce conflict for CONSTANT in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_GLOBAL in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_CLASE in state 10 resolved as shift
WARNING: shift/reduce conflict for VARIABLE_INSTANCIA in state 10 resolved as shift
WARNING: shift/reduce conflict for INTEGER in state 10 resolved as shift
WARNING: shift/reduce conflict for FLOATINGPOINT in state 10 resolved as shift
WARNING: shift/reduce conflict for PUTS in state 10 resolved as shift
WARNING: shift/reduce conflict for EQUALS in state 12 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 12 resolved as shift
WARNING: shift/reduce conflict for NOT in state 12 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 47 resolved as shift
WARNING: shift/reduce conflict for NOT in state 47 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 70 resolved as shift
WARNING: shift/reduce conflict for NOT in state 70 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 109 resolved as shift
WARNING: shift/reduce conflict for ISEQUAL in state 161 resolved as shift
WARNING: shift/reduce conflict for NOT in state 161 resolved as shift
WARNING: reduce/reduce conflict in state 5 resolved using rule (codigo -> expresion)
WARNING: rejected rule (vacio -> <empty>) in state 5
WARNING: reduce/reduce conflict in state 10 resolved using rule (lista_codigo -> codigo)
WARNING: rejected rule (vacio -> <empty>) in state 10
WARNING: reduce/reduce conflict in state 19 resolved using rule (expresion -> asignacion)
WARNING: rejected rule (codigo -> asignacion) in state 19
WARNING: reduce/reduce conflict in state 45 resolved using rule (expresion -> asignacion)
WARNING: rejected rule (codigo -> asignacion) in state 45
WARNING: reduce/reduce conflict in state 65 resolved using rule (expresion -> expresion_matematica)
WARNING: rejected rule (puts -> PUTS expresion_matematica) in state 65
WARNING: Rule (codigo -> asignacion) is never reduced
WARNING: Rule (puts -> PUTS expresion_matematica) is never reduced
