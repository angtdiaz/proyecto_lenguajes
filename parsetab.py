
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND BOOLEAN CLASS COMMA CONSTANT DEF DIVIDE DO DOT ELSE ELSIF END EQUALS FIRST FLOATINGPOINT FOR GREATER IF IN INTEGER ISEQUAL KEY LAST LBRACE LBRACKET LENGTH LESS LPAREN MINUS NOT OR PLUS PUTS RBRACE RBRACKET RETURN RPAREN STRING TIMES TIMS VARIABLE VARIABLE_CLASE VARIABLE_GLOBAL VARIABLE_INSTANCIA WHILEprograma : clase\n    | metodo\n    | clase programa\n    | metodo programa\n    | lista_codigo programa\n    | expresion\n    | expresion programa\n     identificador : VARIABLE\n    | CONSTANT\n    | VARIABLE_GLOBAL\n    | VARIABLE_CLASE\n    | VARIABLE_INSTANCIAnumber : INTEGER\n    | FLOATINGPOINTexpresion : identificador\n    | STRING\n    | number\n    | BOOLEAN\n    | expresion_condicion\n    | expresion_matematica\n    | llamar_funcion\n    | asignacion\n    | arreglo\n    | hash\n    | puts\n    | valorArr\n    | times\n    \n    arreglo : identificador EQUALS LBRACKET elementos RBRACKET\n    valorArr : identificador LBRACKET valores_mat RBRACKET\n    \n    elementos : expresion\n    | expresion COMMA elementos\n    \n    hash : identificador EQUALS LBRACE elementos_hash RBRACE\n    \n    elementos_hash : expresion EQUALS GREATER expresion\n    | expresion EQUALS GREATER expresion COMMA elementos_hash\n    puts : PUTS expresion\n    | PUTS expresion_matematica\n    | PUTS LPAREN expresion RPAREN\n    | PUTS LPAREN expresion_matematica RPAREN\n    clase : CLASS CONSTANT varias_exp varios_met END\n    | CLASS CONSTANT varias_exp END\n    | CLASS CONSTANT varios_met END\n    varias_exp : expresion\n    | expresion varias_exp\n    varios_met : metodo\n    | metodo varios_met\n    \n    metodo : DEF VARIABLE lista_codigo END\n    | DEF VARIABLE LPAREN parametro RPAREN lista_codigo END\n    | DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END\n    parametro : VARIABLE\n    | VARIABLE COMMA parametro\n    lista_codigo : codigo\n    | vacio\n    | codigo lista_codigo\n    codigo : asignacion\n    | expresion\n    | condicional_if\n    | iteracion\n    \n    condicional_if : IF content_if lista_codigo END\n    | IF content_if lista_codigo else END\n    | IF content_if lista_codigo elsif END\n    | IF LPAREN content_if RPAREN lista_codigo END\n    | IF LPAREN content_if RPAREN lista_codigo else END\n    | IF LPAREN content_if RPAREN lista_codigo elsif END\n\n    content_if : identificador\n    | expresion_condicion\n\n    else : ELSE lista_codigo\n    | ELSE lista_codigo elsif\n    elsif : \n\n    expresion_condicion : valores_cond opNum valores_cond\n   | identificador opIgual  BOOLEAN\n    | BOOLEAN opIgual identificador\n    | identificador opIgual valores_cond\n    | valores_cond opIgual identificador\n\n    valores_cond : valores_mat\n    | STRING\n      operador_condicion : opNum\n    | opIgual\n      opNum : LESS\n        | LESS EQUALS\n        | GREATER\n        | GREATER EQUALS\n    opIgual : ISEQUAL\n        | NOT EQUALS\n\n     iteracion : WHILE content_if lista_codigo END\n    | WHILE LPAREN content_if RPAREN lista_codigo END\n    | FOR expresion IN expresion lista_codigo END\n    | FOR expresion IN rango lista_codigo END\n    | FOR LPAREN expresion RPAREN IN expresion lista_codigo END\n    | FOR LPAREN expresion RPAREN IN rango lista_codigo END\n\n    rango : LPAREN valorR DOT DOT valorR RPAREN\n\n    valorR : expresion_matematica\n    | valores_mat\n     times : INTEGER DOT TIMES LBRACE expresion RBRACE\n    | identificador DOT TIMES LBRACE expresion RBRACE\n    | INTEGER DOT TIMES DO expresion END\n    | identificador DOT TIMES DO expresion END\n    \n    expresion_matematica : valores_mat operador valores_mat\n    | valores_mat operador expresion_matematica\n     valores_mat : number\n    | identificador operador : PLUS\n    | MINUS\n    | TIMS\n    | DIVIDE asignacion : identificador EQUALS expresionllamar_funcion : VARIABLE DOT LENGTH\n    | VARIABLE DOT KEY\n    | VARIABLE DOT FIRST\n    | VARIABLE DOT LASTvacio : '
    
_lr_action_items = {'CLASS':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,45,46,47,48,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,120,121,124,131,136,137,138,143,149,152,154,160,161,175,176,177,178,180,183,184,185,189,192,193,200,201,202,],[6,6,6,6,6,-9,-8,-51,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,-53,-22,-55,-15,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-40,-41,-46,-29,-37,-38,-58,-84,-39,-28,-32,-59,-60,-94,-96,-93,-95,-61,-85,-86,-87,-47,-62,-63,-88,-89,-48,]),'DEF':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,42,45,46,47,48,66,67,69,74,76,77,78,79,84,86,87,90,91,92,93,94,95,96,97,103,105,106,109,110,120,121,122,124,131,136,137,138,143,149,152,154,160,161,175,176,177,178,180,183,184,185,189,192,193,200,201,202,],[8,8,8,8,8,-9,-8,-51,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,8,-53,-22,-55,-15,-35,-20,-22,-8,-74,-75,-99,-13,8,-42,8,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-40,-41,-43,-46,-29,-37,-38,-58,-84,-39,-28,-32,-59,-60,-94,-96,-93,-95,-61,-85,-86,-87,-47,-62,-63,-88,-89,-48,]),'STRING':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,53,57,59,60,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,198,200,201,202,204,],[13,13,13,13,13,-9,-8,13,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,13,77,77,13,13,13,-53,-22,-55,-15,77,13,-82,77,-78,-80,-35,-20,13,-22,13,77,-64,-65,-8,-74,-75,-99,-13,13,77,13,13,-106,-107,-108,-109,-100,-70,-72,-105,13,13,-83,-71,-69,-73,-79,-81,-97,-98,13,-40,-41,-46,-29,13,13,13,13,-37,-38,-58,13,13,-84,13,13,13,-39,13,-28,13,-32,-59,-60,13,13,-94,-96,-93,-95,-61,-85,-86,-87,13,13,-47,13,-62,-63,13,-88,-89,-48,-90,]),'BOOLEAN':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,53,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,198,200,201,202,204,],[15,15,15,15,15,-9,-8,15,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,15,75,75,15,15,15,-53,-22,-55,-15,95,15,-82,-35,-20,15,-22,15,75,-64,-65,-8,-74,-75,-99,-13,15,75,15,15,-106,-107,-108,-109,-100,-70,-72,-105,15,15,-83,-71,-69,-73,-97,-98,15,-40,-41,-46,-29,15,15,15,15,-37,-38,-58,15,15,-84,15,15,15,-39,15,-28,15,-32,-59,-60,15,15,-94,-96,-93,-95,-61,-85,-86,-87,15,15,-47,15,-62,-63,15,-88,-89,-48,-90,]),'VARIABLE':([0,2,3,4,5,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,89,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,150,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[9,9,9,9,9,-9,43,-8,9,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,9,74,74,9,9,9,-53,-22,-55,-15,74,9,74,-82,74,74,74,-78,-80,74,-101,-102,-103,-104,-35,-20,9,-22,9,74,-64,-65,-8,-74,-75,-99,-13,9,74,9,9,125,-106,-107,-108,-109,-100,-70,-72,-105,9,9,-83,-71,-69,-73,-79,-81,-97,-98,9,-40,-41,-46,-29,9,9,9,9,-37,-38,-58,9,9,-84,9,9,9,74,-39,125,9,-28,9,-32,-59,-60,9,9,-94,-96,-93,-95,-61,-85,-86,-87,9,9,-47,9,-62,-63,74,9,-88,-89,-48,-90,]),'CONSTANT':([0,2,3,4,5,6,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[7,7,7,7,7,42,-9,-8,7,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,7,7,7,7,7,7,-53,-22,-55,-15,7,7,7,-82,7,7,7,-78,-80,7,-101,-102,-103,-104,-35,-20,7,-22,7,7,-64,-65,-8,-74,-75,-99,-13,7,7,7,7,-106,-107,-108,-109,-100,-70,-72,-105,7,7,-83,-71,-69,-73,-79,-81,-97,-98,7,-40,-41,-46,-29,7,7,7,7,-37,-38,-58,7,7,-84,7,7,7,7,-39,7,-28,7,-32,-59,-60,7,7,-94,-96,-93,-95,-61,-85,-86,-87,7,7,-47,7,-62,-63,7,7,-88,-89,-48,-90,]),'VARIABLE_GLOBAL':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[27,27,27,27,27,-9,-8,27,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,27,27,27,27,27,27,-53,-22,-55,-15,27,27,27,-82,27,27,27,-78,-80,27,-101,-102,-103,-104,-35,-20,27,-22,27,27,-64,-65,-8,-74,-75,-99,-13,27,27,27,27,-106,-107,-108,-109,-100,-70,-72,-105,27,27,-83,-71,-69,-73,-79,-81,-97,-98,27,-40,-41,-46,-29,27,27,27,27,-37,-38,-58,27,27,-84,27,27,27,27,-39,27,-28,27,-32,-59,-60,27,27,-94,-96,-93,-95,-61,-85,-86,-87,27,27,-47,27,-62,-63,27,27,-88,-89,-48,-90,]),'VARIABLE_CLASE':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[28,28,28,28,28,-9,-8,28,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,28,28,28,28,28,28,-53,-22,-55,-15,28,28,28,-82,28,28,28,-78,-80,28,-101,-102,-103,-104,-35,-20,28,-22,28,28,-64,-65,-8,-74,-75,-99,-13,28,28,28,28,-106,-107,-108,-109,-100,-70,-72,-105,28,28,-83,-71,-69,-73,-79,-81,-97,-98,28,-40,-41,-46,-29,28,28,28,28,-37,-38,-58,28,28,-84,28,28,28,28,-39,28,-28,28,-32,-59,-60,28,28,-94,-96,-93,-95,-61,-85,-86,-87,28,28,-47,28,-62,-63,28,28,-88,-89,-48,-90,]),'VARIABLE_INSTANCIA':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[29,29,29,29,29,-9,-8,29,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,29,29,29,29,29,29,-53,-22,-55,-15,29,29,29,-82,29,29,29,-78,-80,29,-101,-102,-103,-104,-35,-20,29,-22,29,29,-64,-65,-8,-74,-75,-99,-13,29,29,29,29,-106,-107,-108,-109,-100,-70,-72,-105,29,29,-83,-71,-69,-73,-79,-81,-97,-98,29,-40,-41,-46,-29,29,29,29,29,-37,-38,-58,29,29,-84,29,29,29,29,-39,29,-28,29,-32,-59,-60,29,29,-94,-96,-93,-95,-61,-85,-86,-87,29,29,-47,29,-62,-63,29,29,-88,-89,-48,-90,]),'INTEGER':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[30,30,30,30,30,-9,-8,30,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,30,79,79,30,30,30,-53,-22,-55,-15,79,30,79,-82,79,-78,-80,79,-101,-102,-103,-104,-35,-20,30,-22,30,79,-64,-65,-8,-74,-75,-99,-13,30,79,30,30,-106,-107,-108,-109,-100,-70,-72,-105,30,30,-83,-71,-69,-73,-79,-81,-97,-98,30,-40,-41,-46,-29,30,30,30,30,-37,-38,-58,30,30,-84,30,30,30,79,-39,30,-28,30,-32,-59,-60,30,30,-94,-96,-93,-95,-61,-85,-86,-87,30,30,-47,30,-62,-63,79,30,-88,-89,-48,-90,]),'FLOATINGPOINT':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,35,36,37,42,43,45,46,47,48,49,50,51,53,57,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,76,77,78,79,80,81,83,86,90,91,92,93,94,95,96,97,98,99,102,103,105,106,107,108,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,147,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,194,198,200,201,202,204,],[31,31,31,31,31,-9,-8,31,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,31,31,31,31,31,31,-53,-22,-55,-15,31,31,31,-82,31,-78,-80,31,-101,-102,-103,-104,-35,-20,31,-22,31,31,-64,-65,-8,-74,-75,-99,-13,31,31,31,31,-106,-107,-108,-109,-100,-70,-72,-105,31,31,-83,-71,-69,-73,-79,-81,-97,-98,31,-40,-41,-46,-29,31,31,31,31,-37,-38,-58,31,31,-84,31,31,31,31,-39,31,-28,31,-32,-59,-60,31,31,-94,-96,-93,-95,-61,-85,-86,-87,31,31,-47,31,-62,-63,31,31,-88,-89,-48,-90,]),'PUTS':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,34,37,42,43,45,46,47,48,50,66,67,68,69,70,72,73,74,76,77,78,79,80,83,86,90,91,92,93,94,95,96,97,98,99,103,105,106,109,110,117,120,121,124,131,132,133,134,135,136,137,138,141,142,143,144,145,146,149,151,152,153,154,160,161,170,174,175,176,177,178,180,183,184,185,187,188,189,190,192,193,198,200,201,202,204,],[34,34,34,34,34,-9,-8,34,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,34,34,34,34,-53,-22,-55,-15,34,-35,-20,34,-22,34,-64,-65,-8,-74,-75,-99,-13,34,34,34,-106,-107,-108,-109,-100,-70,-72,-105,34,34,-71,-69,-73,-97,-98,34,-40,-41,-46,-29,34,34,34,34,-37,-38,-58,34,34,-84,34,34,34,-39,34,-28,34,-32,-59,-60,34,34,-94,-96,-93,-95,-61,-85,-86,-87,34,34,-47,34,-62,-63,34,-88,-89,-48,-90,]),'IF':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,45,46,47,48,66,67,69,70,72,73,74,76,77,78,79,80,90,91,92,93,94,95,96,97,103,105,106,109,110,120,121,124,131,136,137,138,141,142,143,144,145,146,149,151,152,154,160,161,175,176,177,178,180,183,184,185,187,188,189,192,193,200,201,202,204,],[35,35,35,35,35,-9,-8,35,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,35,-53,-22,-55,-15,-35,-20,-22,35,-64,-65,-8,-74,-75,-99,-13,35,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-40,-41,-46,-29,-37,-38,-58,35,35,-84,35,35,35,-39,35,-28,-32,-59,-60,-94,-96,-93,-95,-61,-85,-86,-87,35,35,-47,-62,-63,-88,-89,-48,-90,]),'WHILE':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,45,46,47,48,66,67,69,70,72,73,74,76,77,78,79,80,90,91,92,93,94,95,96,97,103,105,106,109,110,120,121,124,131,136,137,138,141,142,143,144,145,146,149,151,152,154,160,161,175,176,177,178,180,183,184,185,187,188,189,192,193,200,201,202,204,],[36,36,36,36,36,-9,-8,36,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,36,-53,-22,-55,-15,-35,-20,-22,36,-64,-65,-8,-74,-75,-99,-13,36,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-40,-41,-46,-29,-37,-38,-58,36,36,-84,36,36,36,-39,36,-28,-32,-59,-60,-94,-96,-93,-95,-61,-85,-86,-87,36,36,-47,-62,-63,-88,-89,-48,-90,]),'FOR':([0,2,3,4,5,7,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,43,45,46,47,48,66,67,69,70,72,73,74,76,77,78,79,80,90,91,92,93,94,95,96,97,103,105,106,109,110,120,121,124,131,136,137,138,141,142,143,144,145,146,149,151,152,154,160,161,175,176,177,178,180,183,184,185,187,188,189,192,193,200,201,202,204,],[37,37,37,37,37,-9,-8,37,-52,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,37,-53,-22,-55,-15,-35,-20,-22,37,-64,-65,-8,-74,-75,-99,-13,37,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-40,-41,-46,-29,-37,-38,-58,37,37,-84,37,37,37,-39,37,-28,-32,-59,-60,-94,-96,-93,-95,-61,-85,-86,-87,37,37,-47,-62,-63,-88,-89,-48,-90,]),'$end':([1,2,3,5,7,9,12,13,14,15,16,17,18,19,20,21,22,23,24,27,28,29,30,31,38,39,40,41,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,120,121,124,131,136,137,149,152,154,175,176,177,178,189,202,],[0,-1,-2,-6,-9,-8,-15,-16,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,-3,-4,-5,-7,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-40,-41,-46,-29,-37,-38,-39,-28,-32,-94,-96,-93,-95,-47,-48,]),'EQUALS':([7,9,12,13,14,15,16,17,18,20,21,22,23,24,27,28,29,30,31,48,54,59,60,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,130,131,136,137,152,154,175,176,177,178,],[-9,-8,50,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,50,102,107,108,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,155,-29,-37,-38,-28,-32,-94,-96,-93,-95,]),'LBRACKET':([7,9,12,27,28,29,48,50,],[-9,-8,51,-10,-11,-12,51,98,]),'DOT':([7,9,12,27,28,29,30,31,48,74,78,79,94,109,110,167,168,169,186,],[-9,44,52,-10,-11,-12,56,-14,52,-8,-99,-13,-100,-97,-98,186,-91,-92,194,]),'ISEQUAL':([7,9,12,13,14,15,27,28,29,30,31,32,33,48,72,74,75,76,77,78,79,],[-9,-8,53,-75,-99,53,-10,-11,-12,-13,-14,53,-74,53,53,-8,53,-74,-75,-99,-13,]),'NOT':([7,9,12,13,14,15,27,28,29,30,31,32,33,48,72,74,75,76,77,78,79,],[-9,-8,54,-75,-99,54,-10,-11,-12,-13,-14,54,-74,54,54,-8,54,-74,-75,-99,-13,]),'PLUS':([7,9,12,14,27,28,29,30,31,33,48,74,78,79,94,109,169,],[-9,-8,-100,-99,-10,-11,-12,-13,-14,62,-100,-8,-99,-13,-100,62,62,]),'MINUS':([7,9,12,14,27,28,29,30,31,33,48,74,78,79,94,109,169,],[-9,-8,-100,-99,-10,-11,-12,-13,-14,63,-100,-8,-99,-13,-100,63,63,]),'TIMS':([7,9,12,14,27,28,29,30,31,33,48,74,78,79,94,109,169,],[-9,-8,-100,-99,-10,-11,-12,-13,-14,64,-100,-8,-99,-13,-100,64,64,]),'DIVIDE':([7,9,12,14,27,28,29,30,31,33,48,74,78,79,94,109,169,],[-9,-8,-100,-99,-10,-11,-12,-13,-14,65,-100,-8,-99,-13,-100,65,65,]),'LESS':([7,9,12,13,14,27,28,29,30,31,32,33,48,72,74,76,77,78,79,],[-9,-8,-100,-75,-99,-10,-11,-12,-13,-14,59,-74,-100,-100,-8,-74,-75,-99,-13,]),'GREATER':([7,9,12,13,14,27,28,29,30,31,32,33,48,72,74,76,77,78,79,155,],[-9,-8,-100,-75,-99,-10,-11,-12,-13,-14,60,-74,-100,-100,-8,-74,-75,-99,-13,174,]),'END':([7,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,43,45,46,47,48,66,67,69,70,72,73,74,76,77,78,79,80,84,85,86,87,88,90,91,92,93,94,95,96,97,103,105,106,109,110,113,115,119,122,123,124,131,136,137,138,139,140,141,142,143,144,145,146,151,152,154,157,159,160,161,162,163,164,165,166,172,175,176,177,178,179,180,181,182,183,184,185,187,188,189,192,193,195,196,197,200,201,202,204,],[-9,-8,-51,-52,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,-110,-53,-22,-55,-15,-35,-20,-22,-110,-64,-65,-8,-74,-75,-99,-13,-110,120,121,-42,-44,124,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,138,143,149,-43,-45,-46,-29,-37,-38,-58,160,161,-110,-110,-84,-110,-110,-110,-110,-28,-32,176,178,-59,-60,-66,180,183,184,185,189,-94,-96,-93,-95,-67,-61,192,193,-85,-86,-87,-110,-110,-47,-62,-63,200,201,202,-88,-89,-48,-90,]),'ELSE':([7,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,45,46,47,48,66,67,69,70,72,73,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,113,131,136,137,138,142,143,152,154,160,161,163,175,176,177,178,180,183,184,185,192,193,200,201,],[-9,-8,-51,-52,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,-53,-22,-55,-15,-35,-20,-22,-110,-64,-65,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,141,-29,-37,-38,-58,-110,-84,-28,-32,-59,-60,141,-94,-96,-93,-95,-61,-85,-86,-87,-62,-63,-88,-89,]),'RETURN':([7,9,10,11,12,13,14,15,16,17,18,20,21,22,23,24,25,26,27,28,29,30,31,45,46,47,48,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,131,136,137,138,143,151,152,154,160,161,172,175,176,177,178,180,183,184,185,192,193,200,201,],[-9,-8,-51,-52,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-56,-57,-10,-11,-12,-13,-14,-53,-22,-55,-15,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-29,-37,-38,-58,-84,-110,-28,-32,-59,-60,190,-94,-96,-93,-95,-61,-85,-86,-87,-62,-63,-88,-89,]),'IN':([7,9,12,13,14,15,16,17,18,20,21,22,23,24,27,28,29,30,31,66,67,69,74,76,77,78,79,82,90,91,92,93,94,95,96,97,103,105,106,109,110,131,136,137,148,152,154,175,176,177,178,],[-9,-8,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,-35,-20,-22,-8,-74,-75,-99,-13,117,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,-29,-37,-38,170,-28,-32,-94,-96,-93,-95,]),'RPAREN':([7,9,12,13,14,15,16,17,18,20,21,22,23,24,27,28,29,30,31,66,67,69,72,73,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,111,112,114,116,118,125,126,131,136,137,152,154,168,169,171,175,176,177,178,199,],[-9,-8,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,-35,-20,-22,-64,-65,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,136,137,142,144,148,-49,151,-29,-37,-38,-28,-32,-91,-92,-50,-94,-96,-93,-95,204,]),'COMMA':([7,9,12,13,14,15,16,17,18,20,21,22,23,24,27,28,29,30,31,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,125,128,131,136,137,152,154,175,176,177,178,191,],[-9,-8,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,150,153,-29,-37,-38,-28,-32,-94,-96,-93,-95,198,]),'RBRACKET':([7,9,12,13,14,15,16,17,18,20,21,22,23,24,27,28,29,30,31,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,100,103,105,106,109,110,127,128,131,136,137,152,154,173,175,176,177,178,],[-9,-8,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,131,-71,-69,-73,-97,-98,152,-30,-29,-37,-38,-28,-32,-31,-94,-96,-93,-95,]),'RBRACE':([7,9,12,13,14,15,16,17,18,20,21,22,23,24,27,28,29,30,31,66,67,69,74,76,77,78,79,90,91,92,93,94,95,96,97,103,105,106,109,110,129,131,136,137,152,154,156,158,175,176,177,178,191,203,],[-9,-8,-15,-16,-17,-18,-19,-20,-21,-23,-24,-25,-26,-27,-10,-11,-12,-13,-14,-35,-20,-22,-8,-74,-75,-99,-13,-106,-107,-108,-109,-100,-70,-72,-105,-71,-69,-73,-97,-98,154,-29,-37,-38,-28,-32,175,177,-94,-96,-93,-95,-33,-34,]),'LPAREN':([34,35,36,37,43,117,170,],[68,71,81,83,89,147,147,]),'LENGTH':([44,],[90,]),'KEY':([44,],[91,]),'FIRST':([44,],[92,]),'LAST':([44,],[93,]),'LBRACE':([50,101,104,],[99,132,134,]),'TIMES':([52,56,],[101,104,]),'DO':([101,104,],[133,135,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,2,3,4,5,],[1,38,39,40,41,]),'clase':([0,2,3,4,5,],[2,2,2,2,2,]),'metodo':([0,2,3,4,5,42,84,87,],[3,3,3,3,3,87,87,87,]),'lista_codigo':([0,2,3,4,5,10,43,70,80,141,142,144,145,146,151,187,188,],[4,4,4,4,4,45,88,113,115,162,163,164,165,166,172,195,196,]),'expresion':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[5,5,5,5,5,47,66,82,86,47,97,111,47,47,118,86,128,130,145,156,157,158,159,47,47,47,47,47,47,128,187,191,47,47,197,130,]),'codigo':([0,2,3,4,5,10,43,70,80,141,142,144,145,146,151,187,188,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'vacio':([0,2,3,4,5,10,43,70,80,141,142,144,145,146,151,187,188,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'identificador':([0,2,3,4,5,10,34,35,36,37,42,43,49,50,51,55,57,58,61,68,70,71,80,81,83,86,98,99,117,132,133,134,135,141,142,144,145,146,147,151,153,170,174,187,188,190,194,198,],[12,12,12,12,12,48,12,72,72,12,12,48,94,12,94,103,94,106,94,12,48,72,48,72,12,12,12,12,12,12,12,12,12,48,48,48,48,48,94,48,12,12,12,48,48,12,94,12,]),'number':([0,2,3,4,5,10,34,35,36,37,42,43,49,50,51,57,61,68,70,71,80,81,83,86,98,99,117,132,133,134,135,141,142,144,145,146,147,151,153,170,174,187,188,190,194,198,],[14,14,14,14,14,14,14,78,78,14,14,14,78,14,78,78,78,14,14,78,14,78,14,14,14,14,14,14,14,14,14,14,14,14,14,14,78,14,14,14,14,14,14,14,78,14,]),'expresion_condicion':([0,2,3,4,5,10,34,35,36,37,42,43,50,68,70,71,80,81,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[16,16,16,16,16,16,16,73,73,16,16,16,16,16,16,73,16,73,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'expresion_matematica':([0,2,3,4,5,10,34,37,42,43,50,61,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,147,151,153,170,174,187,188,190,194,198,],[17,17,17,17,17,17,67,17,17,17,17,110,112,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,168,17,17,17,17,17,17,17,168,17,]),'llamar_funcion':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'asignacion':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[19,19,19,19,19,46,69,69,69,46,69,69,46,46,69,69,69,69,69,69,69,69,69,46,46,46,46,46,46,69,69,69,46,46,69,69,]),'arreglo':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'hash':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'puts':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'valorArr':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'times':([0,2,3,4,5,10,34,37,42,43,50,68,70,80,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'condicional_if':([0,2,3,4,5,10,43,70,80,141,142,144,145,146,151,187,188,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'iteracion':([0,2,3,4,5,10,43,70,80,141,142,144,145,146,151,187,188,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'valores_cond':([0,2,3,4,5,10,34,35,36,37,42,43,49,50,57,68,70,71,80,81,83,86,98,99,117,132,133,134,135,141,142,144,145,146,151,153,170,174,187,188,190,198,],[32,32,32,32,32,32,32,32,32,32,32,32,96,32,105,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'valores_mat':([0,2,3,4,5,10,34,35,36,37,42,43,49,50,51,57,61,68,70,71,80,81,83,86,98,99,117,132,133,134,135,141,142,144,145,146,147,151,153,170,174,187,188,190,194,198,],[33,33,33,33,33,33,33,76,76,33,33,33,76,33,100,76,109,33,33,76,33,76,33,33,33,33,33,33,33,33,33,33,33,33,33,33,169,33,33,33,33,33,33,33,169,33,]),'opIgual':([12,15,32,48,72,75,],[49,55,58,49,49,55,]),'opNum':([32,],[57,]),'operador':([33,109,169,],[61,61,61,]),'content_if':([35,36,71,81,],[70,80,114,116,]),'varias_exp':([42,86,],[84,122,]),'varios_met':([42,84,87,],[85,119,123,]),'parametro':([89,150,],[126,171,]),'elementos':([98,153,],[127,173,]),'elementos_hash':([99,198,],[129,203,]),'else':([113,163,],[139,181,]),'elsif':([113,162,163,],[140,179,182,]),'rango':([117,170,],[146,188,]),'valorR':([147,194,],[167,199,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> clase','programa',1,'p_programa','AnalizadorSintactico.py',12),
  ('programa -> metodo','programa',1,'p_programa','AnalizadorSintactico.py',13),
  ('programa -> clase programa','programa',2,'p_programa','AnalizadorSintactico.py',14),
  ('programa -> metodo programa','programa',2,'p_programa','AnalizadorSintactico.py',15),
  ('programa -> lista_codigo programa','programa',2,'p_programa','AnalizadorSintactico.py',16),
  ('programa -> expresion','programa',1,'p_programa','AnalizadorSintactico.py',17),
  ('programa -> expresion programa','programa',2,'p_programa','AnalizadorSintactico.py',18),
  ('identificador -> VARIABLE','identificador',1,'p_identificador','AnalizadorSintactico.py',21),
  ('identificador -> CONSTANT','identificador',1,'p_identificador','AnalizadorSintactico.py',22),
  ('identificador -> VARIABLE_GLOBAL','identificador',1,'p_identificador','AnalizadorSintactico.py',23),
  ('identificador -> VARIABLE_CLASE','identificador',1,'p_identificador','AnalizadorSintactico.py',24),
  ('identificador -> VARIABLE_INSTANCIA','identificador',1,'p_identificador','AnalizadorSintactico.py',25),
  ('number -> INTEGER','number',1,'p_number','AnalizadorSintactico.py',28),
  ('number -> FLOATINGPOINT','number',1,'p_number','AnalizadorSintactico.py',29),
  ('expresion -> identificador','expresion',1,'p_expresion','AnalizadorSintactico.py',33),
  ('expresion -> STRING','expresion',1,'p_expresion','AnalizadorSintactico.py',34),
  ('expresion -> number','expresion',1,'p_expresion','AnalizadorSintactico.py',35),
  ('expresion -> BOOLEAN','expresion',1,'p_expresion','AnalizadorSintactico.py',36),
  ('expresion -> expresion_condicion','expresion',1,'p_expresion','AnalizadorSintactico.py',37),
  ('expresion -> expresion_matematica','expresion',1,'p_expresion','AnalizadorSintactico.py',38),
  ('expresion -> llamar_funcion','expresion',1,'p_expresion','AnalizadorSintactico.py',39),
  ('expresion -> asignacion','expresion',1,'p_expresion','AnalizadorSintactico.py',40),
  ('expresion -> arreglo','expresion',1,'p_expresion','AnalizadorSintactico.py',41),
  ('expresion -> hash','expresion',1,'p_expresion','AnalizadorSintactico.py',42),
  ('expresion -> puts','expresion',1,'p_expresion','AnalizadorSintactico.py',43),
  ('expresion -> valorArr','expresion',1,'p_expresion','AnalizadorSintactico.py',44),
  ('expresion -> times','expresion',1,'p_expresion','AnalizadorSintactico.py',45),
  ('arreglo -> identificador EQUALS LBRACKET elementos RBRACKET','arreglo',5,'p_arreglo','AnalizadorSintactico.py',51),
  ('valorArr -> identificador LBRACKET valores_mat RBRACKET','valorArr',4,'p_arreglo','AnalizadorSintactico.py',52),
  ('elementos -> expresion','elementos',1,'p_elementos','AnalizadorSintactico.py',59),
  ('elementos -> expresion COMMA elementos','elementos',3,'p_elementos','AnalizadorSintactico.py',60),
  ('hash -> identificador EQUALS LBRACE elementos_hash RBRACE','hash',5,'p_hash','AnalizadorSintactico.py',66),
  ('elementos_hash -> expresion EQUALS GREATER expresion','elementos_hash',4,'p_elementos_hash','AnalizadorSintactico.py',72),
  ('elementos_hash -> expresion EQUALS GREATER expresion COMMA elementos_hash','elementos_hash',6,'p_elementos_hash','AnalizadorSintactico.py',73),
  ('puts -> PUTS expresion','puts',2,'p_puts','AnalizadorSintactico.py',78),
  ('puts -> PUTS expresion_matematica','puts',2,'p_puts','AnalizadorSintactico.py',79),
  ('puts -> PUTS LPAREN expresion RPAREN','puts',4,'p_puts','AnalizadorSintactico.py',80),
  ('puts -> PUTS LPAREN expresion_matematica RPAREN','puts',4,'p_puts','AnalizadorSintactico.py',81),
  ('clase -> CLASS CONSTANT varias_exp varios_met END','clase',5,'p_clase','AnalizadorSintactico.py',87),
  ('clase -> CLASS CONSTANT varias_exp END','clase',4,'p_clase','AnalizadorSintactico.py',88),
  ('clase -> CLASS CONSTANT varios_met END','clase',4,'p_clase','AnalizadorSintactico.py',89),
  ('varias_exp -> expresion','varias_exp',1,'p_clase','AnalizadorSintactico.py',90),
  ('varias_exp -> expresion varias_exp','varias_exp',2,'p_clase','AnalizadorSintactico.py',91),
  ('varios_met -> metodo','varios_met',1,'p_clase','AnalizadorSintactico.py',92),
  ('varios_met -> metodo varios_met','varios_met',2,'p_clase','AnalizadorSintactico.py',93),
  ('metodo -> DEF VARIABLE lista_codigo END','metodo',4,'p_metodo','AnalizadorSintactico.py',99),
  ('metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo END','metodo',7,'p_metodo','AnalizadorSintactico.py',100),
  ('metodo -> DEF VARIABLE LPAREN parametro RPAREN lista_codigo RETURN expresion END','metodo',9,'p_metodo','AnalizadorSintactico.py',101),
  ('parametro -> VARIABLE','parametro',1,'p_metodo','AnalizadorSintactico.py',102),
  ('parametro -> VARIABLE COMMA parametro','parametro',3,'p_metodo','AnalizadorSintactico.py',103),
  ('lista_codigo -> codigo','lista_codigo',1,'p_metodo','AnalizadorSintactico.py',104),
  ('lista_codigo -> vacio','lista_codigo',1,'p_metodo','AnalizadorSintactico.py',105),
  ('lista_codigo -> codigo lista_codigo','lista_codigo',2,'p_metodo','AnalizadorSintactico.py',106),
  ('codigo -> asignacion','codigo',1,'p_metodo','AnalizadorSintactico.py',107),
  ('codigo -> expresion','codigo',1,'p_metodo','AnalizadorSintactico.py',108),
  ('codigo -> condicional_if','codigo',1,'p_metodo','AnalizadorSintactico.py',109),
  ('codigo -> iteracion','codigo',1,'p_metodo','AnalizadorSintactico.py',110),
  ('condicional_if -> IF content_if lista_codigo END','condicional_if',4,'p_condicional_if','AnalizadorSintactico.py',116),
  ('condicional_if -> IF content_if lista_codigo else END','condicional_if',5,'p_condicional_if','AnalizadorSintactico.py',117),
  ('condicional_if -> IF content_if lista_codigo elsif END','condicional_if',5,'p_condicional_if','AnalizadorSintactico.py',118),
  ('condicional_if -> IF LPAREN content_if RPAREN lista_codigo END','condicional_if',6,'p_condicional_if','AnalizadorSintactico.py',119),
  ('condicional_if -> IF LPAREN content_if RPAREN lista_codigo else END','condicional_if',7,'p_condicional_if','AnalizadorSintactico.py',120),
  ('condicional_if -> IF LPAREN content_if RPAREN lista_codigo elsif END','condicional_if',7,'p_condicional_if','AnalizadorSintactico.py',121),
  ('content_if -> identificador','content_if',1,'p_condicional_if','AnalizadorSintactico.py',123),
  ('content_if -> expresion_condicion','content_if',1,'p_condicional_if','AnalizadorSintactico.py',124),
  ('else -> ELSE lista_codigo','else',2,'p_condicional_if','AnalizadorSintactico.py',126),
  ('else -> ELSE lista_codigo elsif','else',3,'p_condicional_if','AnalizadorSintactico.py',127),
  ('elsif -> <empty>','elsif',0,'p_condicional_if','AnalizadorSintactico.py',128),
  ('expresion_condicion -> valores_cond opNum valores_cond','expresion_condicion',3,'p_expresion_condicion','AnalizadorSintactico.py',133),
  ('expresion_condicion -> identificador opIgual BOOLEAN','expresion_condicion',3,'p_expresion_condicion','AnalizadorSintactico.py',134),
  ('expresion_condicion -> BOOLEAN opIgual identificador','expresion_condicion',3,'p_expresion_condicion','AnalizadorSintactico.py',135),
  ('expresion_condicion -> identificador opIgual valores_cond','expresion_condicion',3,'p_expresion_condicion','AnalizadorSintactico.py',136),
  ('expresion_condicion -> valores_cond opIgual identificador','expresion_condicion',3,'p_expresion_condicion','AnalizadorSintactico.py',137),
  ('valores_cond -> valores_mat','valores_cond',1,'p_valores_cond','AnalizadorSintactico.py',142),
  ('valores_cond -> STRING','valores_cond',1,'p_valores_cond','AnalizadorSintactico.py',143),
  ('operador_condicion -> opNum','operador_condicion',1,'p_operador_condicion','AnalizadorSintactico.py',146),
  ('operador_condicion -> opIgual','operador_condicion',1,'p_operador_condicion','AnalizadorSintactico.py',147),
  ('opNum -> LESS','opNum',1,'p_operador_condicion','AnalizadorSintactico.py',148),
  ('opNum -> LESS EQUALS','opNum',2,'p_operador_condicion','AnalizadorSintactico.py',149),
  ('opNum -> GREATER','opNum',1,'p_operador_condicion','AnalizadorSintactico.py',150),
  ('opNum -> GREATER EQUALS','opNum',2,'p_operador_condicion','AnalizadorSintactico.py',151),
  ('opIgual -> ISEQUAL','opIgual',1,'p_operador_condicion','AnalizadorSintactico.py',152),
  ('opIgual -> NOT EQUALS','opIgual',2,'p_operador_condicion','AnalizadorSintactico.py',153),
  ('iteracion -> WHILE content_if lista_codigo END','iteracion',4,'p_iteracion','AnalizadorSintactico.py',158),
  ('iteracion -> WHILE LPAREN content_if RPAREN lista_codigo END','iteracion',6,'p_iteracion','AnalizadorSintactico.py',159),
  ('iteracion -> FOR expresion IN expresion lista_codigo END','iteracion',6,'p_iteracion','AnalizadorSintactico.py',160),
  ('iteracion -> FOR expresion IN rango lista_codigo END','iteracion',6,'p_iteracion','AnalizadorSintactico.py',161),
  ('iteracion -> FOR LPAREN expresion RPAREN IN expresion lista_codigo END','iteracion',8,'p_iteracion','AnalizadorSintactico.py',162),
  ('iteracion -> FOR LPAREN expresion RPAREN IN rango lista_codigo END','iteracion',8,'p_iteracion','AnalizadorSintactico.py',163),
  ('rango -> LPAREN valorR DOT DOT valorR RPAREN','rango',6,'p_iteracion','AnalizadorSintactico.py',165),
  ('valorR -> expresion_matematica','valorR',1,'p_iteracion','AnalizadorSintactico.py',167),
  ('valorR -> valores_mat','valorR',1,'p_iteracion','AnalizadorSintactico.py',168),
  ('times -> INTEGER DOT TIMES LBRACE expresion RBRACE','times',6,'p_times','AnalizadorSintactico.py',173),
  ('times -> identificador DOT TIMES LBRACE expresion RBRACE','times',6,'p_times','AnalizadorSintactico.py',174),
  ('times -> INTEGER DOT TIMES DO expresion END','times',6,'p_times','AnalizadorSintactico.py',175),
  ('times -> identificador DOT TIMES DO expresion END','times',6,'p_times','AnalizadorSintactico.py',176),
  ('expresion_matematica -> valores_mat operador valores_mat','expresion_matematica',3,'p_expresion_matematica','AnalizadorSintactico.py',185),
  ('expresion_matematica -> valores_mat operador expresion_matematica','expresion_matematica',3,'p_expresion_matematica','AnalizadorSintactico.py',186),
  ('valores_mat -> number','valores_mat',1,'p_valores_mat','AnalizadorSintactico.py',189),
  ('valores_mat -> identificador','valores_mat',1,'p_valores_mat','AnalizadorSintactico.py',190),
  ('operador -> PLUS','operador',1,'p_operador','AnalizadorSintactico.py',192),
  ('operador -> MINUS','operador',1,'p_operador','AnalizadorSintactico.py',193),
  ('operador -> TIMS','operador',1,'p_operador','AnalizadorSintactico.py',194),
  ('operador -> DIVIDE','operador',1,'p_operador','AnalizadorSintactico.py',195),
  ('asignacion -> identificador EQUALS expresion','asignacion',3,'p_asignacion','AnalizadorSintactico.py',197),
  ('llamar_funcion -> VARIABLE DOT LENGTH','llamar_funcion',3,'p_llamar_funcion','AnalizadorSintactico.py',201),
  ('llamar_funcion -> VARIABLE DOT KEY','llamar_funcion',3,'p_llamar_funcion','AnalizadorSintactico.py',202),
  ('llamar_funcion -> VARIABLE DOT FIRST','llamar_funcion',3,'p_llamar_funcion','AnalizadorSintactico.py',203),
  ('llamar_funcion -> VARIABLE DOT LAST','llamar_funcion',3,'p_llamar_funcion','AnalizadorSintactico.py',204),
  ('vacio -> <empty>','vacio',0,'p_vacio','AnalizadorSintactico.py',208),
]
